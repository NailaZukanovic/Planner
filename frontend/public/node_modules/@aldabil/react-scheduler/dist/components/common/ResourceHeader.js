import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Avatar, ListItem, ListItemAvatar, ListItemText, Typography, } from "@mui/material";
import { useAppState } from "../../hooks/useAppState";
import { useWindowResize } from "../../hooks/useWindowResize";
const ResourceHeader = ({ resource }) => {
    const { recourseHeaderComponent, resourceFields, resources, direction, resourceViewMode, } = useAppState();
    const { width } = useWindowResize();
    const text = resource[resourceFields.textField];
    const subtext = resource[resourceFields.subTextField || ""];
    const avatar = resource[resourceFields.avatarField || ""];
    const color = resource[resourceFields.colorField || ""];
    if (recourseHeaderComponent instanceof Function) {
        return recourseHeaderComponent(resource);
    }
    const headerBorders = resourceViewMode === "tabs"
        ? {}
        : {
            borderColor: "#eee",
            borderStyle: "solid",
            borderWidth: "1px 1px 0 1px",
        };
    return (_jsxs(ListItem, Object.assign({ sx: Object.assign({ padding: "2px 10px", textAlign: direction === "rtl" ? "right" : "left" }, headerBorders), component: "span" }, { children: [_jsx(ListItemAvatar, { children: _jsx(Avatar, { style: { background: color }, alt: text, src: avatar }, void 0) }, void 0),
            _jsx(ListItemText, { primary: _jsx(Typography, Object.assign({ variant: "body2", noWrap: true }, { children: text }), void 0), secondary: _jsx(Typography, Object.assign({ variant: "caption", color: "textSecondary", noWrap: true }, { children: subtext }), void 0), style: { width: width / (resources.length + 1) } }, void 0)] }), void 0));
};
export { ResourceHeader };
