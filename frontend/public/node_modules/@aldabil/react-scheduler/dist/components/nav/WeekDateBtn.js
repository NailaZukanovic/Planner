import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState } from "react";
import DateProvider from "../hoc/DateProvider";
import DatePicker from "@mui/lab/DatePicker";
import { Button } from "@mui/material";
import { endOfWeek, format, startOfWeek, addDays } from "date-fns";
import { LocaleArrow } from "../common/LocaleArrow";
import { useAppState } from "../../hooks/useAppState";
const WeekDateBtn = ({ selectedDate, onChange, weekProps, }) => {
    const { locale } = useAppState();
    const [open, setOpen] = useState(false);
    const { weekStartOn } = weekProps;
    const weekStart = startOfWeek(selectedDate, { weekStartsOn: weekStartOn });
    const weekEnd = endOfWeek(selectedDate, { weekStartsOn: weekStartOn });
    const toggleDialog = () => setOpen(!open);
    const handleChange = (e, k) => {
        onChange(e || new Date(), "selectedDate");
    };
    const handlePrev = () => {
        const ladtDayPrevWeek = addDays(weekStart, -1);
        onChange(ladtDayPrevWeek, "selectedDate");
    };
    const handleNext = () => {
        const firstDayNextWeek = addDays(weekEnd, 1);
        onChange(firstDayNextWeek, "selectedDate");
    };
    return (_jsxs("div", { children: [_jsx(LocaleArrow, { type: "prev", onClick: handlePrev }, void 0),
            _jsx(DateProvider, { children: _jsx(DatePicker, { open: open, onClose: toggleDialog, openTo: "day", views: ["month", "day"], value: selectedDate, onChange: handleChange, renderInput: (params) => (_jsx(Button, Object.assign({ ref: params.inputRef, style: { padding: 4 }, onClick: toggleDialog }, { children: `${format(weekStart, "dd", { locale: locale })} - ${format(weekEnd, "dd MMMM yyyy", {
                            locale: locale,
                        })}` }), void 0)) }, void 0) }, void 0),
            _jsx(LocaleArrow, { type: "next", onClick: handleNext }, void 0)] }, void 0));
};
export { WeekDateBtn };
