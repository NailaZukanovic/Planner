import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Fragment, useState } from "react";
import { Button, useTheme, useMediaQuery, Popover, MenuList, MenuItem, IconButton, } from "@mui/material";
import { WeekDateBtn } from "./WeekDateBtn";
import { DayDateBtn } from "./DayDateBtn";
import { MonthDateBtn } from "./MonthDateBtn";
import { useAppState } from "../../hooks/useAppState";
import MoreVertIcon from "@mui/icons-material/MoreVert";
const Navigation = () => {
    const { selectedDate, view, week, handleState, getViews } = useAppState();
    const [anchorEl, setAnchorEl] = useState(null);
    const theme = useTheme();
    const isDesktop = useMediaQuery(theme.breakpoints.up("sm"));
    const views = getViews();
    const toggleMoreMenu = (el) => {
        setAnchorEl(el || null);
    };
    const renderDateSelector = () => {
        switch (view) {
            case "month":
                return (_jsx(MonthDateBtn, { selectedDate: selectedDate, onChange: handleState }, void 0));
            case "week":
                return (_jsx(WeekDateBtn, { selectedDate: selectedDate, onChange: handleState, weekProps: week }, void 0));
            case "day":
                return (_jsx(DayDateBtn, { selectedDate: selectedDate, onChange: handleState }, void 0));
            default:
                return "";
        }
    };
    return (_jsxs("div", Object.assign({ style: {
            display: "flex",
            justifyContent: "space-between",
            alignItems: "center",
        } }, { children: [renderDateSelector(), _jsxs("div", { children: [_jsx(Button, Object.assign({ onClick: () => handleState(new Date(), "selectedDate") }, { children: "Today" }), void 0),
                    views.length > 1 &&
                        (isDesktop ? (views.map((v) => (_jsx(Button, Object.assign({ color: v === view ? "primary" : "inherit", onClick: () => handleState(v, "view"), onDragOver: (e) => {
                                e.preventDefault();
                                handleState(v, "view");
                            } }, { children: v }), v)))) : (_jsxs(Fragment, { children: [_jsx(IconButton, Object.assign({ style: { padding: 5 }, onClick: (e) => {
                                        toggleMoreMenu(e.currentTarget);
                                    } }, { children: _jsx(MoreVertIcon, {}, void 0) }), void 0),
                                _jsx(Popover, Object.assign({ open: Boolean(anchorEl), anchorEl: anchorEl, onClose: (e) => {
                                        toggleMoreMenu();
                                    }, anchorOrigin: {
                                        vertical: "center",
                                        horizontal: "center",
                                    }, transformOrigin: {
                                        vertical: "top",
                                        horizontal: "center",
                                    } }, { children: _jsx(MenuList, Object.assign({ autoFocusItem: !!anchorEl, disablePadding: true }, { children: views.map((v) => (_jsx(MenuItem, Object.assign({ selected: v === view, onClick: () => {
                                                toggleMoreMenu();
                                                handleState(v, "view");
                                            } }, { children: v }), v))) }), void 0) }), void 0)] }, void 0)))] }, void 0)] }), void 0));
};
export { Navigation };
