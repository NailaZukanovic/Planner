import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Week } from "./views/Week";
import { Navigation } from "./components/nav/Navigation";
import { useAppState } from "./hooks/useAppState";
import Editor from "./views/Editor";
import { CircularProgress, Typography } from "@mui/material";
import { Month } from "./views/Month";
import { Day } from "./views/Day";
import { Table, Wrapper } from "./styles/styles";
import { useMemo } from "react";
const SchedulerComponent = () => {
    const { loading, view, dialog, resources, resourceViewMode } = useAppState();
    const Views = useMemo(() => {
        switch (view) {
            case "month":
                return _jsx(Month, {}, void 0);
            case "week":
                return _jsx(Week, {}, void 0);
            case "day":
                return _jsx(Day, {}, void 0);
            default:
                return "";
        }
    }, [view]);
    return (_jsxs(Wrapper, { children: [loading && (_jsx("div", Object.assign({ className: "rs__table_loading" }, { children: _jsxs("span", { children: [_jsx(CircularProgress, { size: 50 }, void 0),
                        _jsx(Typography, Object.assign({ align: "center" }, { children: "Loading..." }), void 0)] }, void 0) }), void 0)),
            _jsx(Navigation, {}, void 0),
            _jsx("div", Object.assign({ className: "rs__outer_table" }, { children: _jsx(Table, Object.assign({ resource_count: resourceViewMode === "tabs" ? 1 : resources.length }, { children: Views }), void 0) }), void 0),
            dialog && _jsx(Editor, {}, void 0)] }, void 0));
};
export { SchedulerComponent };
