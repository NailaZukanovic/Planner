{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Naila\\\\Desktop\\\\projekatSi\\\\frontend\\\\src\\\\Components\\\\auth\\\\Auth.js\",\n    _s = $RefreshSig$();\n\n// import React, { useState } from 'react';\n// import { useNavigate, useLocation } from 'react-router-dom';\n// import  { Button, Paper, Grid, Typography, Container, Avatar } from '@material-ui/core';\n// import LockOutlinedIcon from '@material-ui/icons/LockOutlined';\n// import useStyles from './styles';\n// import {fetchUsers, login, signUp} from '../../api/Auth';\n// import Input from './Input';\n// const initalState = {firstName: '', lastName: '', sex: '', email: '', password: '', confirmPassword: ''};\n// const Auth = ({setUser}) =>\n// {\n//   // const navigate = useNavigate();\n//     const classes = useStyles(); //\n//     const [userData, setUserData] = useState(initalState); //\n//     const [showPassword, setShowPassword] = useState(false); //\n//     const [isSignup, setIsSignUp] = useState(false); //\n//     const handleChange = (e) => \n//     {\n//         setUserData({ ...userData, [e.target.name]: e.target.value });\n//     };\n//     const handleShowPassword = () => setShowPassword((prevShowPassword) => !prevShowPassword);\n//     const handleSubmit = (e) => \n//     {\n//         e.preventDefault();\n//         // navigate('/calendar');\n//         setUser(true);\n//     };\n//     const switchMode = () => {\n//       setIsSignUp((prevIsSignUp) => !prevIsSignUp);\n//       setShowPassword(false);\n//       setUserData(initalState);\n//     }\n//     return (\n//         <Container component=\"main\" maxWidth=\"xs\" className={classes.page}>\n//           <Paper className={classes.paper} elevation={3}>\n//             <Avatar className={classes.avatar}>\n//               <LockOutlinedIcon />\n//             </Avatar>\n//             <Typography component=\"h1\" variant=\"h5\">{ isSignup ? 'Sign up' : 'Sign in' }</Typography>\n//             <form className={classes.form} onSubmit={handleSubmit}>\n//               <Grid container spacing={2}>\n//                 { isSignup && (\n//                 <>\n//                   <Input name=\"firstName\" label=\"First Name\" handleChange={handleChange} autoFocus half />\n//                   <Input name=\"lastName\" label=\"Last Name\" handleChange={handleChange} half />\n//                   <Input name=\"sex\" label=\"Sex\" handleChange={handleChange} autoFocus half/>\n//                 </>\n//                 )}\n//                 <Input name=\"email\" label=\"Email Address\" handleChange={handleChange} type=\"email\" />\n//                 <Input name=\"password\" label=\"Password\" handleChange={handleChange} type={showPassword ? 'text' : 'password'} handleShowPassword={handleShowPassword} />\n//                 { isSignup && <Input name=\"confirmPassword\" label=\"Repeat Password\" handleChange={handleChange} type=\"password\" /> }\n//               </Grid>\n//               <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}\n// >\n//                 { isSignup ? 'Sign Up' : 'Sign In' }\n//               </Button>\n//               <Grid container justifyContent=\"flex-end\">\n//             <Grid item>\n//               <Button onClick={switchMode}>\n//                 { isSignup ? 'Already have an account? Sign in' : \"Don't have an account? Sign Up\" }\n//               </Button>\n//             </Grid>\n//           </Grid>\n//         </form>\n//       </Paper>\n//     </Container>\n//   );\n// };\n// export default Auth;\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  const onSubmit = data => console.log(data);\n\n  console.log(errors);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"First name\",\n      ...register(\"First name\", {\n        required: true,\n        max: 20,\n        min: 1,\n        maxLength: 21,\n        pattern: /[a-zA-Z]/i\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Last name\",\n      ...register(\"Last name\", {\n        required: true,\n        max: 1,\n        min: 20,\n        maxLength: 20,\n        pattern: /[a-zA-Z]/i\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Email\",\n      ...register(\"Email\", {\n        required: true,\n        max: 30,\n        min: 1,\n        maxLength: 28,\n        pattern: /^\\S+@\\S+$/i\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      ...register(\"Password\", {\n        required: true,\n        max: 20,\n        min: 1,\n        maxLength: 28,\n        pattern: /^[A-Za-z]\\w{7,14}$/i\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"cSudtlZF25wA1QXS6hk7TRnoNuU=\", false, function () {\n  return [useForm];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Naila/Desktop/projekatSi/frontend/src/Components/auth/Auth.js"],"names":["React","useForm","App","register","handleSubmit","formState","errors","onSubmit","data","console","log","required","max","min","maxLength","pattern"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,iBAAxB;;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF;AAArC,MAAoDL,OAAO,EAAjE;;AACA,QAAMM,QAAQ,GAAGC,IAAI,IAAIC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAAzB;;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AAEA,sBACE;AAAM,IAAA,QAAQ,EAAEF,YAAY,CAACG,QAAD,CAA5B;AAAA,4BACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAC,YAA/B;AAAA,SAAgDJ,QAAQ,CAAC,YAAD,EAAe;AAACQ,QAAAA,QAAQ,EAAE,IAAX;AAAiBC,QAAAA,GAAG,EAAE,EAAtB;AAA0BC,QAAAA,GAAG,EAAE,CAA/B;AAAkCC,QAAAA,SAAS,EAAE,EAA7C;AAAiDC,QAAAA,OAAO,EAAE;AAA1D,OAAf;AAAxD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAC,WAA/B;AAAA,SAA+CZ,QAAQ,CAAC,WAAD,EAAc;AAACQ,QAAAA,QAAQ,EAAE,IAAX;AAAiBC,QAAAA,GAAG,EAAE,CAAtB;AAAyBC,QAAAA,GAAG,EAAE,EAA9B;AAAkCC,QAAAA,SAAS,EAAE,EAA7C;AAAiDC,QAAAA,OAAO,EAAE;AAA1D,OAAd;AAAvD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAC,OAA/B;AAAA,SAA2CZ,QAAQ,CAAC,OAAD,EAAU;AAACQ,QAAAA,QAAQ,EAAE,IAAX;AAAiBC,QAAAA,GAAG,EAAE,EAAtB;AAA0BC,QAAAA,GAAG,EAAE,CAA/B;AAAkCC,QAAAA,SAAS,EAAE,EAA7C;AAAiDC,QAAAA,OAAO,EAAE;AAA1D,OAAV;AAAnD;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,WAAW,EAAC,UAAnC;AAAA,SAAkDZ,QAAQ,CAAC,UAAD,EAAa;AAACQ,QAAAA,QAAQ,EAAE,IAAX;AAAiBC,QAAAA,GAAG,EAAE,EAAtB;AAA0BC,QAAAA,GAAG,EAAE,CAA/B;AAAkCC,QAAAA,SAAS,EAAE,EAA7C;AAAiDC,QAAAA,OAAO,EAAE;AAA1D,OAAb;AAA1D;AAAA;AAAA;AAAA;AAAA,YAJF,eAME;AAAO,MAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAfuBb,G;UACoCD,O;;;KADpCC,G","sourcesContent":["// import React, { useState } from 'react';\r\n// import { useNavigate, useLocation } from 'react-router-dom';\r\n// import  { Button, Paper, Grid, Typography, Container, Avatar } from '@material-ui/core';\r\n// import LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n// import useStyles from './styles';\r\n// import {fetchUsers, login, signUp} from '../../api/Auth';\r\n// import Input from './Input';\r\n\r\n// const initalState = {firstName: '', lastName: '', sex: '', email: '', password: '', confirmPassword: ''};\r\n\r\n// const Auth = ({setUser}) =>\r\n// {\r\n//   // const navigate = useNavigate();\r\n//     const classes = useStyles(); //\r\n//     const [userData, setUserData] = useState(initalState); //\r\n\r\n//     const [showPassword, setShowPassword] = useState(false); //\r\n//     const [isSignup, setIsSignUp] = useState(false); //\r\n\r\n//     const handleChange = (e) => \r\n//     {\r\n//         setUserData({ ...userData, [e.target.name]: e.target.value });\r\n//     };\r\n//     const handleShowPassword = () => setShowPassword((prevShowPassword) => !prevShowPassword);\r\n//     const handleSubmit = (e) => \r\n//     {\r\n//         e.preventDefault();\r\n//         // navigate('/calendar');\r\n\r\n//         setUser(true);\r\n//     };\r\n\r\n//     const switchMode = () => {\r\n//       setIsSignUp((prevIsSignUp) => !prevIsSignUp);\r\n//       setShowPassword(false);\r\n//       setUserData(initalState);\r\n//     }\r\n\r\n//     return (\r\n//         <Container component=\"main\" maxWidth=\"xs\" className={classes.page}>\r\n//           <Paper className={classes.paper} elevation={3}>\r\n//             <Avatar className={classes.avatar}>\r\n//               <LockOutlinedIcon />\r\n//             </Avatar>\r\n//             <Typography component=\"h1\" variant=\"h5\">{ isSignup ? 'Sign up' : 'Sign in' }</Typography>\r\n//             <form className={classes.form} onSubmit={handleSubmit}>\r\n//               <Grid container spacing={2}>\r\n//                 { isSignup && (\r\n//                 <>\r\n//                   <Input name=\"firstName\" label=\"First Name\" handleChange={handleChange} autoFocus half />\r\n//                   <Input name=\"lastName\" label=\"Last Name\" handleChange={handleChange} half />\r\n//                   <Input name=\"sex\" label=\"Sex\" handleChange={handleChange} autoFocus half/>\r\n//                 </>\r\n//                 )}\r\n//                 <Input name=\"email\" label=\"Email Address\" handleChange={handleChange} type=\"email\" />\r\n//                 <Input name=\"password\" label=\"Password\" handleChange={handleChange} type={showPassword ? 'text' : 'password'} handleShowPassword={handleShowPassword} />\r\n//                 { isSignup && <Input name=\"confirmPassword\" label=\"Repeat Password\" handleChange={handleChange} type=\"password\" /> }\r\n//               </Grid>\r\n//               <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}\r\n// >\r\n//                 { isSignup ? 'Sign Up' : 'Sign In' }\r\n//               </Button>\r\n//               <Grid container justifyContent=\"flex-end\">\r\n//             <Grid item>\r\n//               <Button onClick={switchMode}>\r\n//                 { isSignup ? 'Already have an account? Sign in' : \"Don't have an account? Sign Up\" }\r\n//               </Button>\r\n//             </Grid>\r\n//           </Grid>\r\n//         </form>\r\n//       </Paper>\r\n//     </Container>\r\n//   );\r\n// };\r\n\r\n// export default Auth;\r\n\r\n\r\nimport React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\n\r\nexport default function App() {\r\n  const { register, handleSubmit, formState: { errors } } = useForm();\r\n  const onSubmit = data => console.log(data);\r\n  console.log(errors);\r\n  \r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <input type=\"text\" placeholder=\"First name\" {...register(\"First name\", {required: true, max: 20, min: 1, maxLength: 21, pattern: /[a-zA-Z]/i})} />\r\n      <input type=\"text\" placeholder=\"Last name\" {...register(\"Last name\", {required: true, max: 1, min: 20, maxLength: 20, pattern: /[a-zA-Z]/i})} />\r\n      <input type=\"text\" placeholder=\"Email\" {...register(\"Email\", {required: true, max: 30, min: 1, maxLength: 28, pattern: /^\\S+@\\S+$/i})} />\r\n      <input type=\"password\" placeholder=\"Password\" {...register(\"Password\", {required: true, max: 20, min: 1, maxLength: 28, pattern: /^[A-Za-z]\\w{7,14}$/i})} />\r\n\r\n      <input type=\"submit\" />\r\n    </form>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}