{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Naila\\\\Desktop\\\\projekatSi\\\\frontend\\\\src\\\\Components\\\\AppointmentApp.js\";\nimport React, { Component } from \"react\";\nimport RaisedButton from \"material-ui/RaisedButton\";\nimport FlatButton from \"material-ui/FlatButton\";\nimport moment from \"moment\";\nimport DatePicker from \"material-ui/DatePicker\";\nimport Dialog from \"material-ui/Dialog\";\nimport SelectField from \"material-ui/SelectField\";\nimport MenuItem from \"material-ui/MenuItem\";\nimport TextField from \"material-ui/TextField\";\nimport SnackBar from \"material-ui/Snackbar\";\nimport Card from '@mui/material/Card';\nimport { Step, Stepper, StepLabel, StepContent } from \"material-ui/Stepper\";\nimport { RadioButton, RadioButtonGroup } from \"material-ui/RadioButton\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = \"http://localhost:4000/\";\n\nclass AppointmentApp extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleNext = () => {\n      const {\n        stepIndex\n      } = this.state;\n      this.setState({\n        stepIndex: stepIndex + 1,\n        finished: stepIndex >= 2\n      });\n    };\n\n    this.handlePrev = () => {\n      const {\n        stepIndex\n      } = this.state;\n\n      if (stepIndex > 0) {\n        this.setState({\n          stepIndex: stepIndex - 1\n        });\n      }\n    };\n\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      schedule: [],\n      confirmationModalOpen: false,\n      appointmentDateSelected: false,\n      appointmentMeridiem: 0,\n      validEmail: true,\n      validPhone: true,\n      finished: false,\n      smallScreen: window.innerWidth < 768,\n      stepIndex: 0\n    };\n  }\n\n  componentWillMount() {\n    axios.get(API_BASE + `api/retrieveSlots`).then(response => {\n      console.log(\"response via db: \", response.data);\n      this.handleDBReponse(response.data);\n    });\n  }\n\n  handleSetAppointmentDate(date) {\n    this.setState({\n      appointmentDate: date,\n      confirmationTextVisible: true\n    });\n  }\n\n  handleSetAppointmentSlot(slot) {\n    this.setState({\n      appointmentSlot: slot\n    });\n  }\n\n  handleSetAppointmentMeridiem(meridiem) {\n    this.setState({\n      appointmentMeridiem: meridiem\n    });\n  }\n\n  handleSubmit() {\n    this.setState({\n      confirmationModalOpen: false\n    });\n    const newAppointment = {\n      name: this.state.firstName + \" \" + this.state.lastName,\n      email: this.state.email,\n      phone: this.state.phone,\n      slot_date: moment(this.state.appointmentDate).format(\"YYYY-DD-MM\"),\n      slot_time: this.state.appointmentSlot\n    };\n    axios.post(API_BASE + \"api/appointmentCreate\", newAppointment).then(response => this.setState({\n      confirmationSnackbarMessage: \"Appointment succesfully added!\",\n      confirmationSnackbarOpen: true,\n      processed: true\n    })).catch(err => {\n      console.log(err);\n      return this.setState({\n        confirmationSnackbarMessage: \"Appointment failed to save.\",\n        confirmationSnackbarOpen: true\n      });\n    });\n  }\n\n  validateEmail(email) {\n    const regex = /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n    return regex.test(email) ? this.setState({\n      email: email,\n      validEmail: true\n    }) : this.setState({\n      validEmail: false\n    });\n  }\n\n  validatePhone(phoneNumber) {\n    const regex = /^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/;\n    return regex.test(phoneNumber) ? this.setState({\n      phone: phoneNumber,\n      validPhone: true\n    }) : this.setState({\n      validPhone: false\n    });\n  }\n\n  checkDisableDate(day) {\n    const dateString = moment(day).format(\"YYYY-DD-MM\");\n    return this.state.schedule[dateString] === true || moment(day).startOf(\"day\").diff(moment().startOf(\"day\")) < 0;\n  }\n\n  handleDBReponse(response) {\n    const appointments = response;\n    const today = moment().startOf(\"day\"); //start of today 12 am\n\n    const initialSchedule = {};\n    initialSchedule[today.format(\"YYYY-DD-MM\")] = true;\n    const schedule = !appointments.length ? initialSchedule : appointments.reduce((currentSchedule, appointment) => {\n      const {\n        slot_date,\n        slot_time\n      } = appointment;\n      const dateString = moment(slot_date, \"YYYY-DD-MM\").format(\"YYYY-DD-MM\");\n      !currentSchedule[slot_date] ? currentSchedule[dateString] = Array(8).fill(false) : null;\n      Array.isArray(currentSchedule[dateString]) ? currentSchedule[dateString][slot_time] = true : null;\n      return currentSchedule;\n    }, initialSchedule);\n\n    for (let day in schedule) {\n      let slots = schedule[day];\n      slots.length ? slots.every(slot => slot === true) ? schedule[day] = true : null : null;\n    }\n\n    this.setState({\n      schedule: schedule\n    });\n  }\n\n  renderAppointmentConfirmation() {\n    const spanStyle = {\n      color: \"#00C853\"\n    };\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Name:\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: spanStyle,\n          children: [this.state.firstName, \" \", this.state.lastName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Number: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: spanStyle,\n          children: this.state.phone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Email: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: spanStyle,\n          children: this.state.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Appointment:\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: spanStyle,\n          children: moment(this.state.appointmentDate).format(\"dddd[,] MMMM Do[,] YYYY\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), \" \", \"at\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: spanStyle,\n          children: moment().hour(9).minute(0).add(this.state.appointmentSlot, \"hours\").format(\"h:mm a\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this);\n  }\n\n  renderAppointmentTimes() {\n    if (!this.state.isLoading) {\n      const slots = [...Array(8).keys()];\n      return slots.map(slot => {\n        const appointmentDateString = moment(this.state.appointmentDate).format(\"YYYY-DD-MM\");\n        const time1 = moment().hour(9).minute(0).add(slot, \"hours\");\n        const time2 = moment().hour(9).minute(0).add(slot + 1, \"hours\");\n        const scheduleDisabled = this.state.schedule[appointmentDateString] ? this.state.schedule[moment(this.state.appointmentDate).format(\"YYYY-DD-MM\")][slot] : false;\n        const meridiemDisabled = this.state.appointmentMeridiem ? time1.format(\"a\") === \"am\" : time1.format(\"a\") === \"pm\";\n        return /*#__PURE__*/_jsxDEV(RadioButton, {\n          label: time1.format(\"h:mm a\") + \" - \" + time2.format(\"h:mm a\"),\n          value: slot,\n          style: {\n            marginBottom: 15,\n            display: meridiemDisabled ? \"none\" : \"inherit\"\n          },\n          disabled: scheduleDisabled || meridiemDisabled\n        }, slot, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this);\n      });\n    } else {\n      return null;\n    }\n  }\n\n  renderStepActions(step) {\n    const {\n      stepIndex\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: \"12px 0\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(RaisedButton, {\n        label: stepIndex === 2 ? \"Finish\" : \"Next\",\n        disableTouchRipple: true,\n        disableFocusRipple: true,\n        primary: true,\n        onClick: this.handleNext,\n        backgroundColor: \"#00C853 !important\",\n        style: {\n          marginRight: 12,\n          backgroundColor: \"#00C853\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), step > 0 && /*#__PURE__*/_jsxDEV(FlatButton, {\n        label: \"Back\",\n        disabled: stepIndex === 0,\n        disableTouchRipple: true,\n        disableFocusRipple: true,\n        onClick: this.handlePrev\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this);\n  }\n\n  render() {\n    const {\n      finished,\n      isLoading,\n      smallScreen,\n      stepIndex,\n      confirmationModalOpen,\n      confirmationSnackbarOpen,\n      ...data\n    } = this.state;\n    const contactFormFilled = data.firstName && data.lastName && data.phone && data.email && data.validPhone && data.validEmail;\n\n    const DatePickerExampleSimple = () => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(DatePicker, {\n        hintText: \"Select Date\",\n        mode: smallScreen ? \"portrait\" : \"landscape\",\n        onChange: (n, date) => this.handleSetAppointmentDate(date),\n        shouldDisableDate: day => this.checkDisableDate(day)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this);\n\n    const modalActions = [/*#__PURE__*/_jsxDEV(FlatButton, {\n      label: \"Cancel\",\n      primary: false,\n      onClick: () => this.setState({\n        confirmationModalOpen: false\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FlatButton, {\n      label: \"Confirm\",\n      style: {\n        backgroundColor: \"#00C853 !important\"\n      },\n      primary: true,\n      onClick: () => this.handleSubmit()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this)];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        style: {\n          maxWidth: !smallScreen ? \"80%\" : \"100%\",\n          margin: \"auto\",\n          marginTop: !smallScreen ? 20 : 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            padding: \"12px 12px 25px 12px\",\n            height: smallScreen ? \"100vh\" : null\n          },\n          children: /*#__PURE__*/_jsxDEV(Stepper, {\n            activeStep: stepIndex,\n            orientation: \"vertical\",\n            linear: false,\n            children: [/*#__PURE__*/_jsxDEV(Step, {\n              children: [/*#__PURE__*/_jsxDEV(StepLabel, {\n                children: \"Choose an available day for your appointment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(StepContent, {\n                children: [DatePickerExampleSimple(), this.renderStepActions(0)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Step, {\n              disabled: !data.appointmentDate,\n              children: [/*#__PURE__*/_jsxDEV(StepLabel, {\n                children: \"Choose an available time for your appointment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(StepContent, {\n                children: [/*#__PURE__*/_jsxDEV(SelectField, {\n                  floatingLabelText: \"AM/PM\",\n                  value: data.appointmentMeridiem,\n                  onChange: (evt, key, payload) => this.handleSetAppointmentMeridiem(payload),\n                  selectionRenderer: value => value ? \"PM\" : \"AM\",\n                  children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: 0,\n                    primaryText: \"AM\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 341,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: 1,\n                    primaryText: \"PM\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 342,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(RadioButtonGroup, {\n                  style: {\n                    marginTop: 15,\n                    marginLeft: 15\n                  },\n                  name: \"appointmentTimes\",\n                  defaultSelected: data.appointmentSlot,\n                  onChange: (evt, val) => this.handleSetAppointmentSlot(val),\n                  children: this.renderAppointmentTimes()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 344,\n                  columnNumber: 19\n                }, this), this.renderStepActions(1)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Step, {\n              children: [/*#__PURE__*/_jsxDEV(StepLabel, {\n                children: \"Share your contact information with us and we'll send you a reminder\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(StepContent, {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: /*#__PURE__*/_jsxDEV(\"section\", {\n                    children: [/*#__PURE__*/_jsxDEV(TextField, {\n                      style: {\n                        display: \"block\"\n                      },\n                      name: \"first_name\",\n                      hintText: \"First Name\",\n                      floatingLabelText: \"First Name\",\n                      onChange: (evt, newValue) => this.setState({\n                        firstName: newValue\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 366,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                      style: {\n                        display: \"block\"\n                      },\n                      name: \"last_name\",\n                      hintText: \"Last Name\",\n                      floatingLabelText: \"Last Name\",\n                      onChange: (evt, newValue) => this.setState({\n                        lastName: newValue\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 375,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                      style: {\n                        display: \"block\"\n                      },\n                      name: \"email\",\n                      hintText: \"youraddress@mail.com\",\n                      floatingLabelText: \"Email\",\n                      errorText: data.validEmail ? null : \"Enter a valid email address\",\n                      onChange: (evt, newValue) => this.validateEmail(newValue)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 384,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                      style: {\n                        display: \"block\"\n                      },\n                      name: \"phone\",\n                      hintText: \"+2348995989\",\n                      floatingLabelText: \"Phone\",\n                      errorText: data.validPhone ? null : \"Enter a valid phone number\",\n                      onChange: (evt, newValue) => this.validatePhone(newValue)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 396,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(RaisedButton, {\n                      style: {\n                        display: \"block\",\n                        backgroundColor: \"#00C853\"\n                      },\n                      label: contactFormFilled ? \"Schedule\" : \"Fill out your information to schedule\",\n                      labelPosition: \"before\",\n                      primary: true,\n                      fullWidth: true,\n                      onClick: () => this.setState({\n                        confirmationModalOpen: !this.state.confirmationModalOpen\n                      }),\n                      disabled: !contactFormFilled || data.processed,\n                      style: {\n                        marginTop: 20,\n                        maxWidth: 100\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 408,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 365,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 364,\n                  columnNumber: 19\n                }, this), this.renderStepActions(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n          modal: true,\n          open: confirmationModalOpen,\n          actions: modalActions,\n          title: \"Confirm your appointment\",\n          children: this.renderAppointmentConfirmation()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SnackBar, {\n          open: confirmationSnackbarOpen || isLoading,\n          message: isLoading ? \"Loading... \" : data.confirmationSnackbarMessage || \"\",\n          autoHideDuration: 10000,\n          onRequestClose: () => this.setState({\n            confirmationSnackbarOpen: false\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default AppointmentApp;","map":{"version":3,"sources":["C:/Users/Naila/Desktop/projekatSi/frontend/src/Components/AppointmentApp.js"],"names":["React","Component","RaisedButton","FlatButton","moment","DatePicker","Dialog","SelectField","MenuItem","TextField","SnackBar","Card","Step","Stepper","StepLabel","StepContent","RadioButton","RadioButtonGroup","axios","API_BASE","AppointmentApp","constructor","props","context","handleNext","stepIndex","state","setState","finished","handlePrev","firstName","lastName","email","schedule","confirmationModalOpen","appointmentDateSelected","appointmentMeridiem","validEmail","validPhone","smallScreen","window","innerWidth","componentWillMount","get","then","response","console","log","data","handleDBReponse","handleSetAppointmentDate","date","appointmentDate","confirmationTextVisible","handleSetAppointmentSlot","slot","appointmentSlot","handleSetAppointmentMeridiem","meridiem","handleSubmit","newAppointment","name","phone","slot_date","format","slot_time","post","confirmationSnackbarMessage","confirmationSnackbarOpen","processed","catch","err","validateEmail","regex","test","validatePhone","phoneNumber","checkDisableDate","day","dateString","startOf","diff","appointments","today","initialSchedule","length","reduce","currentSchedule","appointment","Array","fill","isArray","slots","every","renderAppointmentConfirmation","spanStyle","color","hour","minute","add","renderAppointmentTimes","isLoading","keys","map","appointmentDateString","time1","time2","scheduleDisabled","meridiemDisabled","marginBottom","display","renderStepActions","step","margin","marginRight","backgroundColor","render","contactFormFilled","DatePickerExampleSimple","n","modalActions","maxWidth","marginTop","padding","height","evt","key","payload","value","marginLeft","val","newValue"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SACEC,IADF,EAEEC,OAFF,EAGEC,SAHF,EAIEC,WAJF,QAKO,qBALP;AAMA,SAASC,WAAT,EAAsBC,gBAAtB,QAA8C,yBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAQ,GAAG,wBAAjB;;AAEA,MAAMC,cAAN,SAA6BnB,SAA7B,CAAuC;AACrCoB,EAAAA,WAAW,CAACC,KAAD,EAAQC,OAAR,EAAiB;AAC1B,UAAMD,KAAN,EAAaC,OAAb;;AAD0B,SA6D5BC,UA7D4B,GA6Df,MAAM;AACjB,YAAM;AAAEC,QAAAA;AAAF,UAAgB,KAAKC,KAA3B;AACA,WAAKC,QAAL,CAAc;AACZF,QAAAA,SAAS,EAAEA,SAAS,GAAG,CADX;AAEZG,QAAAA,QAAQ,EAAEH,SAAS,IAAI;AAFX,OAAd;AAID,KAnE2B;;AAAA,SAqE5BI,UArE4B,GAqEf,MAAM;AACjB,YAAM;AAAEJ,QAAAA;AAAF,UAAgB,KAAKC,KAA3B;;AACA,UAAID,SAAS,GAAG,CAAhB,EAAmB;AACjB,aAAKE,QAAL,CAAc;AAAEF,UAAAA,SAAS,EAAEA,SAAS,GAAG;AAAzB,SAAd;AACD;AACF,KA1E2B;;AAG1B,SAAKC,KAAL,GAAa;AACXI,MAAAA,SAAS,EAAE,EADA;AAEXC,MAAAA,QAAQ,EAAE,EAFC;AAGXC,MAAAA,KAAK,EAAE,EAHI;AAIXC,MAAAA,QAAQ,EAAE,EAJC;AAKXC,MAAAA,qBAAqB,EAAE,KALZ;AAMXC,MAAAA,uBAAuB,EAAE,KANd;AAOXC,MAAAA,mBAAmB,EAAE,CAPV;AAQXC,MAAAA,UAAU,EAAE,IARD;AASXC,MAAAA,UAAU,EAAE,IATD;AAUXV,MAAAA,QAAQ,EAAE,KAVC;AAWXW,MAAAA,WAAW,EAAEC,MAAM,CAACC,UAAP,GAAoB,GAXtB;AAYXhB,MAAAA,SAAS,EAAE;AAZA,KAAb;AAcD;;AACDiB,EAAAA,kBAAkB,GAAG;AACnBxB,IAAAA,KAAK,CAACyB,GAAN,CAAUxB,QAAQ,GAAI,mBAAtB,EAA0CyB,IAA1C,CAA+CC,QAAQ,IAAI;AACzDC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCF,QAAQ,CAACG,IAA1C;AACA,WAAKC,eAAL,CAAqBJ,QAAQ,CAACG,IAA9B;AACD,KAHD;AAID;;AACDE,EAAAA,wBAAwB,CAACC,IAAD,EAAO;AAC7B,SAAKxB,QAAL,CAAc;AAAEyB,MAAAA,eAAe,EAAED,IAAnB;AAAyBE,MAAAA,uBAAuB,EAAE;AAAlD,KAAd;AACD;;AAEDC,EAAAA,wBAAwB,CAACC,IAAD,EAAO;AAC7B,SAAK5B,QAAL,CAAc;AAAE6B,MAAAA,eAAe,EAAED;AAAnB,KAAd;AACD;;AACDE,EAAAA,4BAA4B,CAACC,QAAD,EAAW;AACrC,SAAK/B,QAAL,CAAc;AAAES,MAAAA,mBAAmB,EAAEsB;AAAvB,KAAd;AACD;;AACDC,EAAAA,YAAY,GAAG;AACb,SAAKhC,QAAL,CAAc;AAAEO,MAAAA,qBAAqB,EAAE;AAAzB,KAAd;AACA,UAAM0B,cAAc,GAAG;AACrBC,MAAAA,IAAI,EAAE,KAAKnC,KAAL,CAAWI,SAAX,GAAuB,GAAvB,GAA6B,KAAKJ,KAAL,CAAWK,QADzB;AAErBC,MAAAA,KAAK,EAAE,KAAKN,KAAL,CAAWM,KAFG;AAGrB8B,MAAAA,KAAK,EAAE,KAAKpC,KAAL,CAAWoC,KAHG;AAIrBC,MAAAA,SAAS,EAAE3D,MAAM,CAAC,KAAKsB,KAAL,CAAW0B,eAAZ,CAAN,CAAmCY,MAAnC,CAA0C,YAA1C,CAJU;AAKrBC,MAAAA,SAAS,EAAE,KAAKvC,KAAL,CAAW8B;AALD,KAAvB;AAOAtC,IAAAA,KAAK,CACFgD,IADH,CACQ/C,QAAQ,GAAG,uBADnB,EAC4CyC,cAD5C,EAEGhB,IAFH,CAEQC,QAAQ,IACZ,KAAKlB,QAAL,CAAc;AACZwC,MAAAA,2BAA2B,EAAE,gCADjB;AAEZC,MAAAA,wBAAwB,EAAE,IAFd;AAGZC,MAAAA,SAAS,EAAE;AAHC,KAAd,CAHJ,EASGC,KATH,CASSC,GAAG,IAAI;AACZzB,MAAAA,OAAO,CAACC,GAAR,CAAYwB,GAAZ;AACA,aAAO,KAAK5C,QAAL,CAAc;AACnBwC,QAAAA,2BAA2B,EAAE,6BADV;AAEnBC,QAAAA,wBAAwB,EAAE;AAFP,OAAd,CAAP;AAID,KAfH;AAgBD;;AAgBDI,EAAAA,aAAa,CAACxC,KAAD,EAAQ;AACnB,UAAMyC,KAAK,GAAG,wHAAd;AACA,WAAOA,KAAK,CAACC,IAAN,CAAW1C,KAAX,IACH,KAAKL,QAAL,CAAc;AAAEK,MAAAA,KAAK,EAAEA,KAAT;AAAgBK,MAAAA,UAAU,EAAE;AAA5B,KAAd,CADG,GAEH,KAAKV,QAAL,CAAc;AAAEU,MAAAA,UAAU,EAAE;AAAd,KAAd,CAFJ;AAGD;;AACDsC,EAAAA,aAAa,CAACC,WAAD,EAAc;AACzB,UAAMH,KAAK,GAAG,2DAAd;AACA,WAAOA,KAAK,CAACC,IAAN,CAAWE,WAAX,IACH,KAAKjD,QAAL,CAAc;AAAEmC,MAAAA,KAAK,EAAEc,WAAT;AAAsBtC,MAAAA,UAAU,EAAE;AAAlC,KAAd,CADG,GAEH,KAAKX,QAAL,CAAc;AAAEW,MAAAA,UAAU,EAAE;AAAd,KAAd,CAFJ;AAGD;;AACDuC,EAAAA,gBAAgB,CAACC,GAAD,EAAM;AACpB,UAAMC,UAAU,GAAG3E,MAAM,CAAC0E,GAAD,CAAN,CAAYd,MAAZ,CAAmB,YAAnB,CAAnB;AACA,WACE,KAAKtC,KAAL,CAAWO,QAAX,CAAoB8C,UAApB,MAAoC,IAApC,IACA3E,MAAM,CAAC0E,GAAD,CAAN,CACGE,OADH,CACW,KADX,EAEGC,IAFH,CAEQ7E,MAAM,GAAG4E,OAAT,CAAiB,KAAjB,CAFR,IAEmC,CAJrC;AAMD;;AAGD/B,EAAAA,eAAe,CAACJ,QAAD,EAAW;AACxB,UAAMqC,YAAY,GAAGrC,QAArB;AACA,UAAMsC,KAAK,GAAG/E,MAAM,GAAG4E,OAAT,CAAiB,KAAjB,CAAd,CAFwB,CAEe;;AACvC,UAAMI,eAAe,GAAG,EAAxB;AACAA,IAAAA,eAAe,CAACD,KAAK,CAACnB,MAAN,CAAa,YAAb,CAAD,CAAf,GAA8C,IAA9C;AACA,UAAM/B,QAAQ,GAAG,CAACiD,YAAY,CAACG,MAAd,GACbD,eADa,GAEbF,YAAY,CAACI,MAAb,CAAoB,CAACC,eAAD,EAAkBC,WAAlB,KAAkC;AACpD,YAAM;AAAEzB,QAAAA,SAAF;AAAaE,QAAAA;AAAb,UAA2BuB,WAAjC;AACA,YAAMT,UAAU,GAAG3E,MAAM,CAAC2D,SAAD,EAAY,YAAZ,CAAN,CAAgCC,MAAhC,CACjB,YADiB,CAAnB;AAGA,OAACuB,eAAe,CAACxB,SAAD,CAAhB,GACKwB,eAAe,CAACR,UAAD,CAAf,GAA8BU,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,KAAd,CADnC,GAEI,IAFJ;AAGAD,MAAAA,KAAK,CAACE,OAAN,CAAcJ,eAAe,CAACR,UAAD,CAA7B,IACKQ,eAAe,CAACR,UAAD,CAAf,CAA4Bd,SAA5B,IAAyC,IAD9C,GAEI,IAFJ;AAGA,aAAOsB,eAAP;AACD,KAZD,EAYGH,eAZH,CAFJ;;AAgBA,SAAK,IAAIN,GAAT,IAAgB7C,QAAhB,EAA0B;AACxB,UAAI2D,KAAK,GAAG3D,QAAQ,CAAC6C,GAAD,CAApB;AACAc,MAAAA,KAAK,CAACP,MAAN,GACIO,KAAK,CAACC,KAAN,CAAYtC,IAAI,IAAIA,IAAI,KAAK,IAA7B,IAAsCtB,QAAQ,CAAC6C,GAAD,CAAR,GAAgB,IAAtD,GAA8D,IADlE,GAEI,IAFJ;AAGD;;AAED,SAAKnD,QAAL,CAAc;AACZM,MAAAA,QAAQ,EAAEA;AADE,KAAd;AAGD;;AACD6D,EAAAA,6BAA6B,GAAG;AAC9B,UAAMC,SAAS,GAAG;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAlB;AACA,wBACE;AAAA,8BACE;AAAA,4BACQ,GADR,eAEE;AAAM,UAAA,KAAK,EAAED,SAAb;AAAA,qBACG,KAAKrE,KAAL,CAAWI,SADd,OAC0B,KAAKJ,KAAL,CAAWK,QADrC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAA,4CACU;AAAM,UAAA,KAAK,EAAEgE,SAAb;AAAA,oBAAyB,KAAKrE,KAAL,CAAWoC;AAApC;AAAA;AAAA;AAAA;AAAA,gBADV;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eAUE;AAAA,2CACS;AAAM,UAAA,KAAK,EAAEiC,SAAb;AAAA,oBAAyB,KAAKrE,KAAL,CAAWM;AAApC;AAAA;AAAA;AAAA;AAAA,gBADT;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,eAaE;AAAA,mCACe,GADf,eAEE;AAAM,UAAA,KAAK,EAAE+D,SAAb;AAAA,oBACG3F,MAAM,CAAC,KAAKsB,KAAL,CAAW0B,eAAZ,CAAN,CAAmCY,MAAnC,CACC,yBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBAFF,EAMU,GANV,QAOK,GAPL,eAQE;AAAM,UAAA,KAAK,EAAE+B,SAAb;AAAA,oBACG3F,MAAM,GACJ6F,IADF,CACO,CADP,EAEEC,MAFF,CAES,CAFT,EAGEC,GAHF,CAGM,KAAKzE,KAAL,CAAW8B,eAHjB,EAGkC,OAHlC,EAIEQ,MAJF,CAIS,QAJT;AADH;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAgCD;;AACDoC,EAAAA,sBAAsB,GAAG;AACvB,QAAI,CAAC,KAAK1E,KAAL,CAAW2E,SAAhB,EAA2B;AACzB,YAAMT,KAAK,GAAG,CAAC,GAAGH,KAAK,CAAC,CAAD,CAAL,CAASa,IAAT,EAAJ,CAAd;AACA,aAAOV,KAAK,CAACW,GAAN,CAAUhD,IAAI,IAAI;AACvB,cAAMiD,qBAAqB,GAAGpG,MAAM,CAAC,KAAKsB,KAAL,CAAW0B,eAAZ,CAAN,CAAmCY,MAAnC,CAC5B,YAD4B,CAA9B;AAGA,cAAMyC,KAAK,GAAGrG,MAAM,GACjB6F,IADW,CACN,CADM,EAEXC,MAFW,CAEJ,CAFI,EAGXC,GAHW,CAGP5C,IAHO,EAGD,OAHC,CAAd;AAIA,cAAMmD,KAAK,GAAGtG,MAAM,GACjB6F,IADW,CACN,CADM,EAEXC,MAFW,CAEJ,CAFI,EAGXC,GAHW,CAGP5C,IAAI,GAAG,CAHA,EAGG,OAHH,CAAd;AAIA,cAAMoD,gBAAgB,GAAG,KAAKjF,KAAL,CAAWO,QAAX,CAAoBuE,qBAApB,IACrB,KAAK9E,KAAL,CAAWO,QAAX,CACE7B,MAAM,CAAC,KAAKsB,KAAL,CAAW0B,eAAZ,CAAN,CAAmCY,MAAnC,CAA0C,YAA1C,CADF,EAEET,IAFF,CADqB,GAIrB,KAJJ;AAKA,cAAMqD,gBAAgB,GAAG,KAAKlF,KAAL,CAAWU,mBAAX,GACrBqE,KAAK,CAACzC,MAAN,CAAa,GAAb,MAAsB,IADD,GAErByC,KAAK,CAACzC,MAAN,CAAa,GAAb,MAAsB,IAF1B;AAGA,4BACE,QAAC,WAAD;AACE,UAAA,KAAK,EAAEyC,KAAK,CAACzC,MAAN,CAAa,QAAb,IAAyB,KAAzB,GAAiC0C,KAAK,CAAC1C,MAAN,CAAa,QAAb,CAD1C;AAGE,UAAA,KAAK,EAAET,IAHT;AAIE,UAAA,KAAK,EAAE;AACLsD,YAAAA,YAAY,EAAE,EADT;AAELC,YAAAA,OAAO,EAAEF,gBAAgB,GAAG,MAAH,GAAY;AAFhC,WAJT;AAQE,UAAA,QAAQ,EAAED,gBAAgB,IAAIC;AARhC,WAEOrD,IAFP;AAAA;AAAA;AAAA;AAAA,gBADF;AAYD,OAhCM,CAAP;AAiCD,KAnCD,MAmCO;AACL,aAAO,IAAP;AACD;AACF;;AAEDwD,EAAAA,iBAAiB,CAACC,IAAD,EAAO;AACtB,UAAM;AAAEvF,MAAAA;AAAF,QAAgB,KAAKC,KAA3B;AAEA,wBACE;AAAK,MAAA,KAAK,EAAE;AAAEuF,QAAAA,MAAM,EAAE;AAAV,OAAZ;AAAA,8BACE,QAAC,YAAD;AACE,QAAA,KAAK,EAAExF,SAAS,KAAK,CAAd,GAAkB,QAAlB,GAA6B,MADtC;AAEE,QAAA,kBAAkB,EAAE,IAFtB;AAGE,QAAA,kBAAkB,EAAE,IAHtB;AAIE,QAAA,OAAO,EAAE,IAJX;AAKE,QAAA,OAAO,EAAE,KAAKD,UALhB;AAME,QAAA,eAAe,EAAC,oBANlB;AAOE,QAAA,KAAK,EAAE;AAAE0F,UAAAA,WAAW,EAAE,EAAf;AAAmBC,UAAAA,eAAe,EAAE;AAApC;AAPT;AAAA;AAAA;AAAA;AAAA,cADF,EAUGH,IAAI,GAAG,CAAP,iBACC,QAAC,UAAD;AACE,QAAA,KAAK,EAAC,MADR;AAEE,QAAA,QAAQ,EAAEvF,SAAS,KAAK,CAF1B;AAGE,QAAA,kBAAkB,EAAE,IAHtB;AAIE,QAAA,kBAAkB,EAAE,IAJtB;AAKE,QAAA,OAAO,EAAE,KAAKI;AALhB;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAsBD;;AAIDuF,EAAAA,MAAM,GAAG;AACP,UAAM;AACJxF,MAAAA,QADI;AAEJyE,MAAAA,SAFI;AAGJ9D,MAAAA,WAHI;AAIJd,MAAAA,SAJI;AAKJS,MAAAA,qBALI;AAMJkC,MAAAA,wBANI;AAOJ,SAAGpB;AAPC,QAQF,KAAKtB,KART;AASA,UAAM2F,iBAAiB,GACrBrE,IAAI,CAAClB,SAAL,IACAkB,IAAI,CAACjB,QADL,IAEAiB,IAAI,CAACc,KAFL,IAGAd,IAAI,CAAChB,KAHL,IAIAgB,IAAI,CAACV,UAJL,IAKAU,IAAI,CAACX,UANP;;AAOA,UAAMiF,uBAAuB,GAAG,mBAC9B;AAAA,6BACE,QAAC,UAAD;AACE,QAAA,QAAQ,EAAC,aADX;AAEE,QAAA,IAAI,EAAE/E,WAAW,GAAG,UAAH,GAAgB,WAFnC;AAGE,QAAA,QAAQ,EAAE,CAACgF,CAAD,EAAIpE,IAAJ,KAAa,KAAKD,wBAAL,CAA8BC,IAA9B,CAHzB;AAIE,QAAA,iBAAiB,EAAE2B,GAAG,IAAI,KAAKD,gBAAL,CAAsBC,GAAtB;AAJ5B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;;AAUA,UAAM0C,YAAY,GAAG,cACnB,QAAC,UAAD;AACE,MAAA,KAAK,EAAC,QADR;AAEE,MAAA,OAAO,EAAE,KAFX;AAGE,MAAA,OAAO,EAAE,MAAM,KAAK7F,QAAL,CAAc;AAAEO,QAAAA,qBAAqB,EAAE;AAAzB,OAAd;AAHjB;AAAA;AAAA;AAAA;AAAA,YADmB,eAMnB,QAAC,UAAD;AACE,MAAA,KAAK,EAAC,SADR;AAEE,MAAA,KAAK,EAAE;AAAEiF,QAAAA,eAAe,EAAE;AAAnB,OAFT;AAGE,MAAA,OAAO,EAAE,IAHX;AAIE,MAAA,OAAO,EAAE,MAAM,KAAKxD,YAAL;AAJjB;AAAA;AAAA;AAAA;AAAA,YANmB,CAArB;AAaA,wBACE;AAAA,6BACE;AACE,QAAA,KAAK,EAAE;AACL8D,UAAAA,QAAQ,EAAE,CAAClF,WAAD,GAAe,KAAf,GAAuB,MAD5B;AAEL0E,UAAAA,MAAM,EAAE,MAFH;AAGLS,UAAAA,SAAS,EAAE,CAACnF,WAAD,GAAe,EAAf,GAAoB;AAH1B,SADT;AAAA,gCAOE,QAAC,IAAD;AACE,UAAA,KAAK,EAAE;AACLoF,YAAAA,OAAO,EAAE,qBADJ;AAELC,YAAAA,MAAM,EAAErF,WAAW,GAAG,OAAH,GAAa;AAF3B,WADT;AAAA,iCAME,QAAC,OAAD;AACE,YAAA,UAAU,EAAEd,SADd;AAEE,YAAA,WAAW,EAAC,UAFd;AAGE,YAAA,MAAM,EAAE,KAHV;AAAA,oCAKE,QAAC,IAAD;AAAA,sCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAIE,QAAC,WAAD;AAAA,2BACG6F,uBAAuB,EAD1B,EAEG,KAAKP,iBAAL,CAAuB,CAAvB,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,oBALF,eAcE,QAAC,IAAD;AAAM,cAAA,QAAQ,EAAE,CAAC/D,IAAI,CAACI,eAAtB;AAAA,sCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAIE,QAAC,WAAD;AAAA,wCACE,QAAC,WAAD;AACE,kBAAA,iBAAiB,EAAC,OADpB;AAEE,kBAAA,KAAK,EAAEJ,IAAI,CAACZ,mBAFd;AAGE,kBAAA,QAAQ,EAAE,CAACyF,GAAD,EAAMC,GAAN,EAAWC,OAAX,KACR,KAAKtE,4BAAL,CAAkCsE,OAAlC,CAJJ;AAME,kBAAA,iBAAiB,EAAEC,KAAK,IAAKA,KAAK,GAAG,IAAH,GAAU,IAN9C;AAAA,0CAQE,QAAC,QAAD;AAAU,oBAAA,KAAK,EAAE,CAAjB;AAAoB,oBAAA,WAAW,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA,0BARF,eASE,QAAC,QAAD;AAAU,oBAAA,KAAK,EAAE,CAAjB;AAAoB,oBAAA,WAAW,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA,0BATF;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAYE,QAAC,gBAAD;AACE,kBAAA,KAAK,EAAE;AACLN,oBAAAA,SAAS,EAAE,EADN;AAELO,oBAAAA,UAAU,EAAE;AAFP,mBADT;AAKE,kBAAA,IAAI,EAAC,kBALP;AAME,kBAAA,eAAe,EAAEjF,IAAI,CAACQ,eANxB;AAOE,kBAAA,QAAQ,EAAE,CAACqE,GAAD,EAAMK,GAAN,KAAc,KAAK5E,wBAAL,CAA8B4E,GAA9B,CAP1B;AAAA,4BASG,KAAK9B,sBAAL;AATH;AAAA;AAAA;AAAA;AAAA,wBAZF,EAuBG,KAAKW,iBAAL,CAAuB,CAAvB,CAvBH;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAdF,eA4CE,QAAC,IAAD;AAAA,sCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAKE,QAAC,WAAD;AAAA,wCACE;AAAA,yCACE;AAAA,4CACE,QAAC,SAAD;AACE,sBAAA,KAAK,EAAE;AAAED,wBAAAA,OAAO,EAAE;AAAX,uBADT;AAEE,sBAAA,IAAI,EAAC,YAFP;AAGE,sBAAA,QAAQ,EAAC,YAHX;AAIE,sBAAA,iBAAiB,EAAC,YAJpB;AAKE,sBAAA,QAAQ,EAAE,CAACe,GAAD,EAAMM,QAAN,KACR,KAAKxG,QAAL,CAAc;AAAEG,wBAAAA,SAAS,EAAEqG;AAAb,uBAAd;AANJ;AAAA;AAAA;AAAA;AAAA,4BADF,eAUE,QAAC,SAAD;AACE,sBAAA,KAAK,EAAE;AAAErB,wBAAAA,OAAO,EAAE;AAAX,uBADT;AAEE,sBAAA,IAAI,EAAC,WAFP;AAGE,sBAAA,QAAQ,EAAC,WAHX;AAIE,sBAAA,iBAAiB,EAAC,WAJpB;AAKE,sBAAA,QAAQ,EAAE,CAACe,GAAD,EAAMM,QAAN,KACR,KAAKxG,QAAL,CAAc;AAAEI,wBAAAA,QAAQ,EAAEoG;AAAZ,uBAAd;AANJ;AAAA;AAAA;AAAA;AAAA,4BAVF,eAmBE,QAAC,SAAD;AACE,sBAAA,KAAK,EAAE;AAAErB,wBAAAA,OAAO,EAAE;AAAX,uBADT;AAEE,sBAAA,IAAI,EAAC,OAFP;AAGE,sBAAA,QAAQ,EAAC,sBAHX;AAIE,sBAAA,iBAAiB,EAAC,OAJpB;AAKE,sBAAA,SAAS,EACP9D,IAAI,CAACX,UAAL,GAAkB,IAAlB,GAAyB,6BAN7B;AAQE,sBAAA,QAAQ,EAAE,CAACwF,GAAD,EAAMM,QAAN,KACR,KAAK3D,aAAL,CAAmB2D,QAAnB;AATJ;AAAA;AAAA;AAAA;AAAA,4BAnBF,eA+BE,QAAC,SAAD;AACE,sBAAA,KAAK,EAAE;AAAErB,wBAAAA,OAAO,EAAE;AAAX,uBADT;AAEE,sBAAA,IAAI,EAAC,OAFP;AAGE,sBAAA,QAAQ,EAAC,aAHX;AAIE,sBAAA,iBAAiB,EAAC,OAJpB;AAKE,sBAAA,SAAS,EACP9D,IAAI,CAACV,UAAL,GAAkB,IAAlB,GAAyB,4BAN7B;AAQE,sBAAA,QAAQ,EAAE,CAACuF,GAAD,EAAMM,QAAN,KACR,KAAKxD,aAAL,CAAmBwD,QAAnB;AATJ;AAAA;AAAA;AAAA;AAAA,4BA/BF,eA2CE,QAAC,YAAD;AACE,sBAAA,KAAK,EAAE;AAAErB,wBAAAA,OAAO,EAAE,OAAX;AAAoBK,wBAAAA,eAAe,EAAE;AAArC,uBADT;AAEE,sBAAA,KAAK,EACHE,iBAAiB,GACb,UADa,GAEb,uCALR;AAOE,sBAAA,aAAa,EAAC,QAPhB;AAQE,sBAAA,OAAO,EAAE,IARX;AASE,sBAAA,SAAS,EAAE,IATb;AAUE,sBAAA,OAAO,EAAE,MACP,KAAK1F,QAAL,CAAc;AACZO,wBAAAA,qBAAqB,EAAE,CAAC,KAAKR,KAAL,CACrBQ;AAFS,uBAAd,CAXJ;AAgBE,sBAAA,QAAQ,EAAE,CAACmF,iBAAD,IAAsBrE,IAAI,CAACqB,SAhBvC;AAiBE,sBAAA,KAAK,EAAE;AAAEqD,wBAAAA,SAAS,EAAE,EAAb;AAAiBD,wBAAAA,QAAQ,EAAE;AAA3B;AAjBT;AAAA;AAAA;AAAA;AAAA,4BA3CF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBADF,EAkEG,KAAKV,iBAAL,CAAuB,CAAvB,CAlEH;AAAA;AAAA;AAAA;AAAA;AAAA,sBALF;AAAA;AAAA;AAAA;AAAA;AAAA,oBA5CF;AAAA;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,gBAPF,eAqIE,QAAC,MAAD;AACE,UAAA,KAAK,EAAE,IADT;AAEE,UAAA,IAAI,EAAE7E,qBAFR;AAGE,UAAA,OAAO,EAAEsF,YAHX;AAIE,UAAA,KAAK,EAAC,0BAJR;AAAA,oBAMG,KAAK1B,6BAAL;AANH;AAAA;AAAA;AAAA;AAAA,gBArIF,eA6IE,QAAC,QAAD;AACE,UAAA,IAAI,EAAE1B,wBAAwB,IAAIiC,SADpC;AAEE,UAAA,OAAO,EACLA,SAAS,GAAG,aAAH,GAAmBrD,IAAI,CAACmB,2BAAL,IAAoC,EAHpE;AAKE,UAAA,gBAAgB,EAAE,KALpB;AAME,UAAA,cAAc,EAAE,MACd,KAAKxC,QAAL,CAAc;AAAEyC,YAAAA,wBAAwB,EAAE;AAA5B,WAAd;AAPJ;AAAA;AAAA;AAAA;AAAA,gBA7IF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AA4JD;;AAhboC;;AAkbvC,eAAehD,cAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport RaisedButton from \"material-ui/RaisedButton\";\r\nimport FlatButton from \"material-ui/FlatButton\";\r\nimport moment from \"moment\";\r\nimport DatePicker from \"material-ui/DatePicker\";\r\nimport Dialog from \"material-ui/Dialog\";\r\nimport SelectField from \"material-ui/SelectField\";\r\nimport MenuItem from \"material-ui/MenuItem\";\r\nimport TextField from \"material-ui/TextField\";\r\nimport SnackBar from \"material-ui/Snackbar\";\r\nimport Card from '@mui/material/Card';\r\nimport {\r\n  Step,\r\n  Stepper,\r\n  StepLabel,\r\n  StepContent\r\n} from \"material-ui/Stepper\";\r\nimport { RadioButton, RadioButtonGroup } from \"material-ui/RadioButton\";\r\nimport axios from \"axios\";\r\n\r\nconst API_BASE = \"http://localhost:4000/\";\r\n\r\nclass AppointmentApp extends Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this.state = {\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      email: \"\",\r\n      schedule: [],\r\n      confirmationModalOpen: false,\r\n      appointmentDateSelected: false,\r\n      appointmentMeridiem: 0,\r\n      validEmail: true,\r\n      validPhone: true,\r\n      finished: false,\r\n      smallScreen: window.innerWidth < 768,\r\n      stepIndex: 0\r\n    };\r\n  }\r\n  componentWillMount() {\r\n    axios.get(API_BASE + `api/retrieveSlots`).then(response => {\r\n      console.log(\"response via db: \", response.data);\r\n      this.handleDBReponse(response.data);\r\n    });\r\n  }\r\n  handleSetAppointmentDate(date) {\r\n    this.setState({ appointmentDate: date, confirmationTextVisible: true });\r\n  }\r\n\r\n  handleSetAppointmentSlot(slot) {\r\n    this.setState({ appointmentSlot: slot });\r\n  }\r\n  handleSetAppointmentMeridiem(meridiem) {\r\n    this.setState({ appointmentMeridiem: meridiem });\r\n  }\r\n  handleSubmit() {\r\n    this.setState({ confirmationModalOpen: false });\r\n    const newAppointment = {\r\n      name: this.state.firstName + \" \" + this.state.lastName,\r\n      email: this.state.email,\r\n      phone: this.state.phone,\r\n      slot_date: moment(this.state.appointmentDate).format(\"YYYY-DD-MM\"),\r\n      slot_time: this.state.appointmentSlot\r\n    };\r\n    axios\r\n      .post(API_BASE + \"api/appointmentCreate\", newAppointment)\r\n      .then(response =>\r\n        this.setState({\r\n          confirmationSnackbarMessage: \"Appointment succesfully added!\",\r\n          confirmationSnackbarOpen: true,\r\n          processed: true\r\n        })\r\n      )\r\n      .catch(err => {\r\n        console.log(err);\r\n        return this.setState({\r\n          confirmationSnackbarMessage: \"Appointment failed to save.\",\r\n          confirmationSnackbarOpen: true\r\n        });\r\n      });\r\n  }\r\n  \r\n  handleNext = () => {\r\n    const { stepIndex } = this.state;\r\n    this.setState({\r\n      stepIndex: stepIndex + 1,\r\n      finished: stepIndex >= 2\r\n    });\r\n  };\r\n\r\n  handlePrev = () => {\r\n    const { stepIndex } = this.state;\r\n    if (stepIndex > 0) {\r\n      this.setState({ stepIndex: stepIndex - 1 });\r\n    }\r\n  };\r\n  validateEmail(email) {\r\n    const regex = /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\r\n    return regex.test(email)\r\n      ? this.setState({ email: email, validEmail: true })\r\n      : this.setState({ validEmail: false });\r\n  }\r\n  validatePhone(phoneNumber) {\r\n    const regex = /^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/;\r\n    return regex.test(phoneNumber)\r\n      ? this.setState({ phone: phoneNumber, validPhone: true })\r\n      : this.setState({ validPhone: false });\r\n  }\r\n  checkDisableDate(day) {\r\n    const dateString = moment(day).format(\"YYYY-DD-MM\");\r\n    return (\r\n      this.state.schedule[dateString] === true ||\r\n      moment(day)\r\n        .startOf(\"day\")\r\n        .diff(moment().startOf(\"day\")) < 0\r\n    );\r\n  }\r\n\r\n  \r\n  handleDBReponse(response) {\r\n    const appointments = response;\r\n    const today = moment().startOf(\"day\"); //start of today 12 am\r\n    const initialSchedule = {};\r\n    initialSchedule[today.format(\"YYYY-DD-MM\")] = true;\r\n    const schedule = !appointments.length\r\n      ? initialSchedule\r\n      : appointments.reduce((currentSchedule, appointment) => {\r\n          const { slot_date, slot_time } = appointment;\r\n          const dateString = moment(slot_date, \"YYYY-DD-MM\").format(\r\n            \"YYYY-DD-MM\"\r\n          );\r\n          !currentSchedule[slot_date]\r\n            ? (currentSchedule[dateString] = Array(8).fill(false))\r\n            : null;\r\n          Array.isArray(currentSchedule[dateString])\r\n            ? (currentSchedule[dateString][slot_time] = true)\r\n            : null;\r\n          return currentSchedule;\r\n        }, initialSchedule);\r\n\r\n    for (let day in schedule) {\r\n      let slots = schedule[day];\r\n      slots.length\r\n        ? slots.every(slot => slot === true) ? (schedule[day] = true) : null\r\n        : null;\r\n    }\r\n\r\n    this.setState({\r\n      schedule: schedule\r\n    });\r\n  }\r\n  renderAppointmentConfirmation() {\r\n    const spanStyle = { color: \"#00C853\" };\r\n    return (\r\n      <section>\r\n        <p>\r\n          Name:{\" \"}\r\n          <span style={spanStyle}>\r\n            {this.state.firstName} {this.state.lastName}\r\n          </span>\r\n        </p>\r\n        <p>\r\n          Number: <span style={spanStyle}>{this.state.phone}</span>\r\n        </p>\r\n        <p>\r\n          Email: <span style={spanStyle}>{this.state.email}</span>\r\n        </p>\r\n        <p>\r\n          Appointment:{\" \"}\r\n          <span style={spanStyle}>\r\n            {moment(this.state.appointmentDate).format(\r\n              \"dddd[,] MMMM Do[,] YYYY\"\r\n            )}\r\n          </span>{\" \"}\r\n          at{\" \"}\r\n          <span style={spanStyle}>\r\n            {moment()\r\n              .hour(9)\r\n              .minute(0)\r\n              .add(this.state.appointmentSlot, \"hours\")\r\n              .format(\"h:mm a\")}\r\n          </span>\r\n        </p>\r\n      </section>\r\n    );\r\n  }\r\n  renderAppointmentTimes() {\r\n    if (!this.state.isLoading) {\r\n      const slots = [...Array(8).keys()];\r\n      return slots.map(slot => {\r\n        const appointmentDateString = moment(this.state.appointmentDate).format(\r\n          \"YYYY-DD-MM\"\r\n        );\r\n        const time1 = moment()\r\n          .hour(9)\r\n          .minute(0)\r\n          .add(slot, \"hours\");\r\n        const time2 = moment()\r\n          .hour(9)\r\n          .minute(0)\r\n          .add(slot + 1, \"hours\");\r\n        const scheduleDisabled = this.state.schedule[appointmentDateString]\r\n          ? this.state.schedule[\r\n              moment(this.state.appointmentDate).format(\"YYYY-DD-MM\")\r\n            ][slot]\r\n          : false;\r\n        const meridiemDisabled = this.state.appointmentMeridiem\r\n          ? time1.format(\"a\") === \"am\"\r\n          : time1.format(\"a\") === \"pm\";\r\n        return (\r\n          <RadioButton\r\n            label={time1.format(\"h:mm a\") + \" - \" + time2.format(\"h:mm a\")}\r\n            key={slot}\r\n            value={slot}\r\n            style={{\r\n              marginBottom: 15,\r\n              display: meridiemDisabled ? \"none\" : \"inherit\"\r\n            }}\r\n            disabled={scheduleDisabled || meridiemDisabled}\r\n          />\r\n        );\r\n      });\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  renderStepActions(step) {\r\n    const { stepIndex } = this.state;\r\n\r\n    return (\r\n      <div style={{ margin: \"12px 0\" }}>\r\n        <RaisedButton\r\n          label={stepIndex === 2 ? \"Finish\" : \"Next\"}\r\n          disableTouchRipple={true}\r\n          disableFocusRipple={true}\r\n          primary={true}\r\n          onClick={this.handleNext}\r\n          backgroundColor=\"#00C853 !important\"\r\n          style={{ marginRight: 12, backgroundColor: \"#00C853\" }}\r\n        />\r\n        {step > 0 && (\r\n          <FlatButton\r\n            label=\"Back\"\r\n            disabled={stepIndex === 0}\r\n            disableTouchRipple={true}\r\n            disableFocusRipple={true}\r\n            onClick={this.handlePrev}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    const {\r\n      finished,\r\n      isLoading,\r\n      smallScreen,\r\n      stepIndex,\r\n      confirmationModalOpen,\r\n      confirmationSnackbarOpen,\r\n      ...data\r\n    } = this.state;\r\n    const contactFormFilled =\r\n      data.firstName &&\r\n      data.lastName &&\r\n      data.phone &&\r\n      data.email &&\r\n      data.validPhone &&\r\n      data.validEmail;\r\n    const DatePickerExampleSimple = () => (\r\n      <div>\r\n        <DatePicker\r\n          hintText=\"Select Date\"\r\n          mode={smallScreen ? \"portrait\" : \"landscape\"}\r\n          onChange={(n, date) => this.handleSetAppointmentDate(date)}\r\n          shouldDisableDate={day => this.checkDisableDate(day)}\r\n        />\r\n      </div>\r\n    );\r\n    const modalActions = [\r\n      <FlatButton\r\n        label=\"Cancel\"\r\n        primary={false}\r\n        onClick={() => this.setState({ confirmationModalOpen: false })}\r\n      />,\r\n      <FlatButton\r\n        label=\"Confirm\"\r\n        style={{ backgroundColor: \"#00C853 !important\" }}\r\n        primary={true}\r\n        onClick={() => this.handleSubmit()}\r\n      />\r\n    ];\r\n    return (\r\n      <div>\r\n        <section\r\n          style={{\r\n            maxWidth: !smallScreen ? \"80%\" : \"100%\",\r\n            margin: \"auto\",\r\n            marginTop: !smallScreen ? 20 : 0\r\n          }}\r\n        >\r\n          <Card\r\n            style={{\r\n              padding: \"12px 12px 25px 12px\",\r\n              height: smallScreen ? \"100vh\" : null\r\n            }}\r\n          >\r\n            <Stepper\r\n              activeStep={stepIndex}\r\n              orientation=\"vertical\"\r\n              linear={false}\r\n            >\r\n              <Step>\r\n                <StepLabel>\r\n                  Choose an available day for your appointment\r\n                </StepLabel>\r\n                <StepContent>\r\n                  {DatePickerExampleSimple()}\r\n                  {this.renderStepActions(0)}\r\n                </StepContent>\r\n              </Step>\r\n              <Step disabled={!data.appointmentDate}>\r\n                <StepLabel>\r\n                  Choose an available time for your appointment\r\n                </StepLabel>\r\n                <StepContent>\r\n                  <SelectField\r\n                    floatingLabelText=\"AM/PM\"\r\n                    value={data.appointmentMeridiem}\r\n                    onChange={(evt, key, payload) =>\r\n                      this.handleSetAppointmentMeridiem(payload)\r\n                    }\r\n                    selectionRenderer={value => (value ? \"PM\" : \"AM\")}\r\n                  >\r\n                    <MenuItem value={0} primaryText=\"AM\" />\r\n                    <MenuItem value={1} primaryText=\"PM\" />\r\n                  </SelectField>\r\n                  <RadioButtonGroup\r\n                    style={{\r\n                      marginTop: 15,\r\n                      marginLeft: 15\r\n                    }}\r\n                    name=\"appointmentTimes\"\r\n                    defaultSelected={data.appointmentSlot}\r\n                    onChange={(evt, val) => this.handleSetAppointmentSlot(val)}\r\n                  >\r\n                    {this.renderAppointmentTimes()}\r\n                  </RadioButtonGroup>\r\n                  {this.renderStepActions(1)}\r\n                </StepContent>\r\n              </Step>\r\n              <Step>\r\n                <StepLabel>\r\n                  Share your contact information with us and we'll send you a\r\n                  reminder\r\n                </StepLabel>\r\n                <StepContent>\r\n                  <p>\r\n                    <section>\r\n                      <TextField\r\n                        style={{ display: \"block\" }}\r\n                        name=\"first_name\"\r\n                        hintText=\"First Name\"\r\n                        floatingLabelText=\"First Name\"\r\n                        onChange={(evt, newValue) =>\r\n                          this.setState({ firstName: newValue })\r\n                        }\r\n                      />\r\n                      <TextField\r\n                        style={{ display: \"block\" }}\r\n                        name=\"last_name\"\r\n                        hintText=\"Last Name\"\r\n                        floatingLabelText=\"Last Name\"\r\n                        onChange={(evt, newValue) =>\r\n                          this.setState({ lastName: newValue })\r\n                        }\r\n                      />\r\n                      <TextField\r\n                        style={{ display: \"block\" }}\r\n                        name=\"email\"\r\n                        hintText=\"youraddress@mail.com\"\r\n                        floatingLabelText=\"Email\"\r\n                        errorText={\r\n                          data.validEmail ? null : \"Enter a valid email address\"\r\n                        }\r\n                        onChange={(evt, newValue) =>\r\n                          this.validateEmail(newValue)\r\n                        }\r\n                      />\r\n                      <TextField\r\n                        style={{ display: \"block\" }}\r\n                        name=\"phone\"\r\n                        hintText=\"+2348995989\"\r\n                        floatingLabelText=\"Phone\"\r\n                        errorText={\r\n                          data.validPhone ? null : \"Enter a valid phone number\"\r\n                        }\r\n                        onChange={(evt, newValue) =>\r\n                          this.validatePhone(newValue)\r\n                        }\r\n                      />\r\n                      <RaisedButton\r\n                        style={{ display: \"block\", backgroundColor: \"#00C853\" }}\r\n                        label={\r\n                          contactFormFilled\r\n                            ? \"Schedule\"\r\n                            : \"Fill out your information to schedule\"\r\n                        }\r\n                        labelPosition=\"before\"\r\n                        primary={true}\r\n                        fullWidth={true}\r\n                        onClick={() =>\r\n                          this.setState({\r\n                            confirmationModalOpen: !this.state\r\n                              .confirmationModalOpen\r\n                          })\r\n                        }\r\n                        disabled={!contactFormFilled || data.processed}\r\n                        style={{ marginTop: 20, maxWidth: 100 }}\r\n                      />\r\n                    </section>\r\n                  </p>\r\n                  {this.renderStepActions(2)}\r\n                </StepContent>\r\n              </Step>\r\n            </Stepper>\r\n          </Card>\r\n          <Dialog\r\n            modal={true}\r\n            open={confirmationModalOpen}\r\n            actions={modalActions}\r\n            title=\"Confirm your appointment\"\r\n          >\r\n            {this.renderAppointmentConfirmation()}\r\n          </Dialog>\r\n          <SnackBar\r\n            open={confirmationSnackbarOpen || isLoading}\r\n            message={\r\n              isLoading ? \"Loading... \" : data.confirmationSnackbarMessage || \"\"\r\n            }\r\n            autoHideDuration={10000}\r\n            onRequestClose={() =>\r\n              this.setState({ confirmationSnackbarOpen: false })\r\n            }\r\n          />\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default AppointmentApp;\r\n"]},"metadata":{},"sourceType":"module"}