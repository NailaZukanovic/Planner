{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Naila\\\\Desktop\\\\projekatSi\\\\frontend\\\\src\\\\Components\\\\Login.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./styles.css\";\nimport React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from 'axios';\nimport { Link } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Register() {\n  _s();\n\n  const navigate = useNavigate();\n  const [formData, setFormData] = React.useState({\n    email: \"\",\n    password: \"\",\n    confirm: \"\"\n  });\n\n  const notify = () => toast.success(\"ðŸ¦„ Uspesno!\", {\n    theme: \"colored\"\n  });\n\n  function handleChange(event) {\n    console.log(event);\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = event.target;\n    setFormData(prevFormdData => {\n      return { ...prevFormdData\n      };\n    });\n  }\n\n  console.log(formData);\n\n  function handleSubmit(event) {\n    event.preventDefault();\n\n    if (formData.password === formData.confirm) {\n      axios.post('http://localhost:4000/login', {\n        email: formData.email,\n        password: formData.password\n      });\n      navigate(\"/notes\");\n    } else {\n      console.log(\"Passwords do not match\");\n      return; //because i dont want run \"Thanks..\" if password not match\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email address\",\n        className: \"form--input\",\n        value: formData.email,\n        onChange: handleChange,\n        name: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        className: \"form--input\",\n        value: formData.password,\n        onChange: handleChange,\n        name: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Confirm password\",\n        className: \"form--input\",\n        value: formData.confirm,\n        onChange: handleChange,\n        name: \"confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"form--submit\",\n        children: \"Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        href: \"/login\",\n        variant: \"body2\",\n        children: \"Don't have account? Sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Register, \"Ivdwj+KteWdJHE/Y7if/guzM6aw=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/Naila/Desktop/projekatSi/frontend/src/Components/Login.jsx"],"names":["React","useNavigate","axios","Link","Register","navigate","formData","setFormData","useState","email","password","confirm","notify","toast","success","theme","handleChange","event","console","log","name","value","type","checked","target","prevFormdData","handleSubmit","preventDefault","post"],"mappings":"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","sourcesContent":["import \"./styles.css\";\r\nimport React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport {Link} from \"@material-ui/core\";\r\n\r\nexport default function Register() {\r\n    const navigate = useNavigate();\r\n\r\n  const [formData, setFormData] = React.useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    confirm: \"\"\r\n  });\r\n  \r\n  const notify = () => toast.success(\"ðŸ¦„ Uspesno!\", {\r\n    theme: \"colored\"\r\n  });\r\n\r\n  function handleChange(event) {\r\n    console.log(event);\r\n    const { name, value, type, checked } = event.target;\r\n    setFormData((prevFormdData) => {\r\n      return {\r\n        ...prevFormdData\r\n      };\r\n    });\r\n  }\r\n  console.log(formData);\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    if (formData.password === formData.confirm) {\r\n        axios.post('http://localhost:4000/login', {\r\n  Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â email: formData.email,\r\n  Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â password: formData.password\r\n  Â Â Â Â Â Â Â Â Â Â Â Â });\r\n\r\n        navigate(\"/notes\");\r\n    } else {\r\n      console.log(\"Passwords do not match\");\r\n      return; //because i dont want run \"Thanks..\" if password not match\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"form-container\">\r\n      <form className=\"form\" onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email address\"\r\n          className=\"form--input\"\r\n          value={formData.email}\r\n          onChange={handleChange}\r\n          name=\"email\"\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          className=\"form--input\"\r\n          value={formData.password}\r\n          onChange={handleChange}\r\n          name=\"password\"\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Confirm password\"\r\n          className=\"form--input\"\r\n          value={formData.confirm}\r\n          onChange={handleChange}\r\n          name=\"confirm\"\r\n        />\r\n        <button className=\"form--submit\">Log in</button>\r\n        <Link href=\"/login\" variant=\"body2\">\r\n                Don't have account? Sign up\r\n              </Link>\r\n      </form>\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}