{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Naila\\\\Desktop\\\\projekatSi\\\\frontend\\\\src\\\\Components\\\\Calendar.jsx\",\n    _s = $RefreshSig$();\n\n// import React, { useEffect, useState } from 'react';\n// import Kalend, { CalendarEvent, CalendarView, OnEventDragFinish } from 'calend';\n// import 'calend/dist/styles/index.css';\n// import toast, { Toaster } from 'react-hot-toast';\n// import { OnEventClickData } from 'calend';\n// const CalendComponent = () => {\n// useEffect(() => {\n//   notify();\n// }, []);\n//   const events = {\n//     '01-11-2021': [\n//         {\n//         id: 1,\n//         startAt: '2021-11-21T18:00:00.000Z',\n//         endAt: '2021-11-21T19:00:00.000Z',\n//         summary: 'test',\n//         color: 'blue',\n//         }\n//     ],\n//     '21-11-2021': [\n//         {\n//         id: 2,\n//         startAt: '2021-11-21T18:00:00.000Z',\n//         endAt: '2021-11-21T19:00:00.000Z',\n//         summary: 'test',\n//         color: 'blue',\n//         }\n//     ]\n// }\n// const notify = () => toast(\"Don't you worry, don't you worry, child \\n See heaven's got a plan for you\", {\n//   icon: '🛩️',\n// });\n//   const [demoEvents, setDemoEvents] = useState(events);\n//   const onNewEventClick = (demoEvents) => {\n//     console.log(demoEvents);\n//   };\n//   const onShowMoreMonthClick = (demoEvents) => {\n//     console.log(demoEvents);\n//   };\n//   const onEventClick = (demoEvents) => {\n//     console.log(demoEvents);\n//     //modal for this\n//   };\n//   return (\n// //     <>\n//       <Toaster\n//         position=\"top-center\"\n//         reverseOrder={false}\n//       />\n//       <Kalend\n//         onNewEventClick={onNewEventClick}\n//         initialView={CalendarView.WEEK}\n//         disabledViews={[]}\n//         onEventClick={onEventClick}\n//         events={demoEvents}\n//         initialDate={new Date().toISOString()}\n//         hourHeight={60}\n//         showMoreMonth={onShowMoreMonthClick}\n//         timezone={'Europe/Berlin'}\n//         onEventDragFinish={OnEventDragFinish}\n//       />\n//     </>\n//   );\n// };\n// export default CalendComponent;\nimport React, { useEffect, useState } from 'react';\nimport { Scheduler } from \"@aldabil/react-scheduler\";\nimport toast, { Toaster } from 'react-hot-toast';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { act } from '@testing-library/react';\nimport { NewReleasesTwoTone } from '@material-ui/icons';\nimport { parseISO } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CalendarComponent() {\n  _s();\n\n  const navigate = useNavigate();\n\n  const notify = () => toast(\"Don't you worry, don't you worry, child \\n See heaven's got a plan for you\", {\n    icon: '✈️'\n  });\n\n  const [events, setEvents] = useState([]);\n  useEffect(() => {\n    notify();\n    axios.get('http://localhost:4000/event') // .then(res => res.json())\n    .then(data => {\n      data.data.events.forEach(eve => {\n        eve.start = parseISO(eve.start);\n        eve.end = parseISO(eve.end);\n      });\n      setEvents(prevEvents => {\n        return [...prevEvents, ...data.data.events];\n      });\n    });\n  }, []);\n\n  const onConfirm = async (event, action) => {\n    if (action === \"edit\") {} else {\n      var rex = axios.post('http://localhost:4000/event/', event);\n    }\n\n    return new Promise((res, rej) => {\n      res(event);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Toaster, {\n      position: \"top-center\",\n      reverseOrder: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Scheduler, {\n      onConfirm: onConfirm,\n      view: \"week\",\n      events: events,\n      selectedDate: new Date()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(CalendarComponent, \"bsR/VRwHpgXIRSnuTFnHwP1Qk80=\", false, function () {\n  return [useNavigate];\n});\n\n_c = CalendarComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"CalendarComponent\");","map":{"version":3,"sources":["C:/Users/Naila/Desktop/projekatSi/frontend/src/Components/Calendar.jsx"],"names":["React","useEffect","useState","Scheduler","toast","Toaster","useNavigate","axios","act","NewReleasesTwoTone","parseISO","CalendarComponent","navigate","notify","icon","events","setEvents","get","then","data","forEach","eve","start","end","prevEvents","onConfirm","event","action","rex","post","Promise","res","rej","Date"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AAIA;AAEE;AACA;AACA;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAIA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,0BAA1B;AACA,OAAOC,KAAP,IAAgBC,OAAhB,QAA+B,iBAA/B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,wBAApB;AACA,SAASC,kBAAT,QAAmC,oBAAnC;AACA,SAAQC,QAAR,QAAuB,UAAvB;;;AAEA,eAAe,SAASC,iBAAT,GAA6B;AAAA;;AAE1C,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;;AACA,QAAMO,MAAM,GAAG,MAAMT,KAAK,CAAC,4EAAD,EAA+E;AACvGU,IAAAA,IAAI,EAAE;AADiG,GAA/E,CAA1B;;AAIA,QAAM,CAACC,MAAD,EAAQC,SAAR,IAAqBd,QAAQ,CAAC,EAAD,CAAnC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,MAAM;AACNN,IAAAA,KAAK,CAACU,GAAN,CAAU,6BAAV,EACE;AADF,KAEGC,IAFH,CAEQC,IAAI,IAAI;AACZA,MAAAA,IAAI,CAACA,IAAL,CAAUJ,MAAV,CAAiBK,OAAjB,CAAyBC,GAAG,IAAI;AAC9BA,QAAAA,GAAG,CAACC,KAAJ,GAAYZ,QAAQ,CAACW,GAAG,CAACC,KAAL,CAApB;AACAD,QAAAA,GAAG,CAACE,GAAJ,GAAUb,QAAQ,CAACW,GAAG,CAACE,GAAL,CAAlB;AACD,OAHD;AAIAP,MAAAA,SAAS,CAACQ,UAAU,IAAI;AACtB,eAAO,CAAC,GAAGA,UAAJ,EAAe,GAAGL,IAAI,CAACA,IAAL,CAAUJ,MAA5B,CAAP;AACD,OAFQ,CAAT;AAGD,KAVH;AAYD,GAdQ,EAcN,EAdM,CAAT;;AAgBA,QAAMU,SAAS,GAAG,OAAOC,KAAP,EAAaC,MAAb,KAAwB;AACxC,QAAIA,MAAM,KAAK,MAAf,EACA,CAEC,CAHD,MAIA;AAEE,UAAIC,GAAG,GAAGrB,KAAK,CAACsB,IAAN,CAAW,8BAAX,EAA2CH,KAA3C,CAAV;AAED;;AACD,WAAO,IAAII,OAAJ,CAAY,CAACC,GAAD,EAAKC,GAAL,KAAa;AAACD,MAAAA,GAAG,CAACL,KAAD,CAAH;AAAW,KAArC,CAAP;AACD,GAXD;;AAYA,sBAAS;AAAA,4BACP,QAAC,OAAD;AACA,MAAA,QAAQ,EAAC,YADT;AAEA,MAAA,YAAY,EAAE;AAFd;AAAA;AAAA;AAAA;AAAA,YADO,eAKP,QAAC,SAAD;AACE,MAAA,SAAS,EAAED,SADb;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,MAAM,EAAEV,MAHV;AAIE,MAAA,YAAY,EAAE,IAAIkB,IAAJ;AAJhB;AAAA;AAAA;AAAA;AAAA,YALO;AAAA,kBAAT;AAaD;;GAlDuBtB,iB;UAELL,W;;;KAFKK,iB","sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import Kalend, { CalendarEvent, CalendarView, OnEventDragFinish } from 'calend';\r\n// import 'calend/dist/styles/index.css';\r\n// import toast, { Toaster } from 'react-hot-toast';\r\n// import { OnEventClickData } from 'calend';\r\n\r\n\r\n\r\n// const CalendComponent = () => {\r\n\r\n  // useEffect(() => {\r\n  //   notify();\r\n  // }, []);\r\n\r\n//   const events = {\r\n//     '01-11-2021': [\r\n//         {\r\n//         id: 1,\r\n//         startAt: '2021-11-21T18:00:00.000Z',\r\n//         endAt: '2021-11-21T19:00:00.000Z',\r\n//         summary: 'test',\r\n//         color: 'blue',\r\n//         }\r\n//     ],\r\n//     '21-11-2021': [\r\n//         {\r\n//         id: 2,\r\n//         startAt: '2021-11-21T18:00:00.000Z',\r\n//         endAt: '2021-11-21T19:00:00.000Z',\r\n//         summary: 'test',\r\n//         color: 'blue',\r\n//         }\r\n//     ]\r\n// }\r\n\r\n// const notify = () => toast(\"Don't you worry, don't you worry, child \\n See heaven's got a plan for you\", {\r\n//   icon: '🛩️',\r\n// });\r\n\r\n//   const [demoEvents, setDemoEvents] = useState(events);\r\n\r\n//   const onNewEventClick = (demoEvents) => {\r\n//     console.log(demoEvents);\r\n//   };\r\n\r\n//   const onShowMoreMonthClick = (demoEvents) => {\r\n//     console.log(demoEvents);\r\n//   };\r\n\r\n\r\n//   const onEventClick = (demoEvents) => {\r\n//     console.log(demoEvents);\r\n//     //modal for this\r\n//   };\r\n\r\n\r\n//   return (\r\n// //     <>\r\n//       <Toaster\r\n//         position=\"top-center\"\r\n//         reverseOrder={false}\r\n//       />\r\n//       <Kalend\r\n//         onNewEventClick={onNewEventClick}\r\n//         initialView={CalendarView.WEEK}\r\n//         disabledViews={[]}\r\n//         onEventClick={onEventClick}\r\n//         events={demoEvents}\r\n//         initialDate={new Date().toISOString()}\r\n//         hourHeight={60}\r\n//         showMoreMonth={onShowMoreMonthClick}\r\n//         timezone={'Europe/Berlin'}\r\n//         onEventDragFinish={OnEventDragFinish}\r\n//       />\r\n//     </>\r\n//   );\r\n// };\r\n\r\n\r\n// export default CalendComponent;\r\n\r\n\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Scheduler } from \"@aldabil/react-scheduler\";\r\nimport toast, { Toaster } from 'react-hot-toast';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { act } from '@testing-library/react';\r\nimport { NewReleasesTwoTone } from '@material-ui/icons';\r\nimport {parseISO} from 'date-fns';\r\n\r\nexport default function CalendarComponent() {\r\n\r\n  const navigate = useNavigate();\r\n  const notify = () => toast(\"Don't you worry, don't you worry, child \\n See heaven's got a plan for you\", {\r\n    icon: '✈️',\r\n  });\r\n\r\n  const [events,setEvents] = useState([]);\r\n\r\n  useEffect(() => {\r\n    notify();\r\n    axios.get('http://localhost:4000/event')\r\n      // .then(res => res.json())\r\n      .then(data => {\r\n        data.data.events.forEach(eve => {\r\n          eve.start = parseISO(eve.start); \r\n          eve.end = parseISO(eve.end);        \r\n        });\r\n        setEvents(prevEvents => {\r\n          return [...prevEvents,...data.data.events];\r\n        });\r\n      });\r\n        \r\n  }, []);\r\n\r\n  const onConfirm = async (event,action) => {\r\n    if (action === \"edit\")\r\n    {\r\n\r\n    }else \r\n    {\r\n       \r\n      var rex = axios.post('http://localhost:4000/event/', event);\r\n\r\n    }\r\n    return new Promise((res,rej) => {res(event)})\r\n  };\r\n  return ( <>\r\n    <Toaster\r\n    position=\"top-center\"\r\n    reverseOrder={false}\r\n  />\r\n    <Scheduler\r\n      onConfirm={onConfirm}\r\n      view=\"week\"\r\n      events={events}\r\n      selectedDate={new Date()}\r\n    />\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}