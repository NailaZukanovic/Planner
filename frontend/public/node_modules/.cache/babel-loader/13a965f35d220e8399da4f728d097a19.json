{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Naila\\\\Desktop\\\\projekatSi\\\\frontend\\\\src\\\\Components\\\\pages\\\\Notes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { Container } from '@material-ui/core';\nimport NoteCard from './component_note/NoteCard.js';\nimport { makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst axios = require('axios');\n\nconst useStyles = makeStyles({\n  page: {\n    background: '#f9f9f9',\n    width: '100%',\n    padding: 20\n  },\n  field: {\n    marginTop: 20,\n    marginBotton: 20,\n    display: 'block'\n  }\n});\nexport default function Notes() {\n  _s();\n\n  const classes = useStyles();\n  const [notes, setNotes] = useState([// {\n    //   \"title\": \"Yoshi's birthday bash\",\n    //   \"details\": \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\",\n    //   \"category\": \"reminders\",\n    //   \"id\": 1\n    // },\n    // {\n    //   \"title\": \"Complete my ninja training\",\n    //   \"details\": \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took.\",\n    //   \"category\": \"work\",\n    //   \"id\": 2\n    // },\n    // {\n    //   \"title\": \"Order a pizza!\",\n    //   \"details\": \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\",\n    //   \"category\": \"todos\",\n    //   \"id\": 3\n    // }\n  ]);\n  useEffect(() => {\n    fetch('http://localhost:4000/notes').then(res => res.json()).then(data => setNotes(data));\n  }, []);\n\n  const handleDelete = async id => {\n    await fetch('http://localhost:4000/notes/' + id, {\n      method: 'DELETE'\n    });\n    const newNotes = notes.filter(note => note.id != id);\n    setNotes(newNotes);\n  }; //xs={12}  lg={4}\n\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: classes.page,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: notes.map(note => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        lg: 4,\n        children: /*#__PURE__*/_jsxDEV(NoteCard, {\n          note: note,\n          handleDelete: handleDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this)\n      }, note.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Notes, \"BumVQx0PXD7Ar20m4R7X96kL3Ds=\", false, function () {\n  return [useStyles];\n});\n\n_c = Notes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Notes\");","map":{"version":3,"sources":["C:/Users/Naila/Desktop/projekatSi/frontend/src/Components/pages/Notes.js"],"names":["React","useEffect","useState","Grid","Paper","Container","NoteCard","makeStyles","axios","require","useStyles","page","background","width","padding","field","marginTop","marginBotton","display","Notes","classes","notes","setNotes","fetch","then","res","json","data","handleDelete","id","method","newNotes","filter","note","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,OAAOC,QAAP,MAAqB,8BAArB;AACA,SAASC,UAAT,QAA2B,mBAA3B;;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,MAAMC,SAAS,GAAGH,UAAU,CAAC;AACzBI,EAAAA,IAAI,EACJ;AACEC,IAAAA,UAAU,EAAE,SADd;AAEEC,IAAAA,KAAK,EAAE,MAFT;AAGEC,IAAAA,OAAO,EAAC;AAHV,GAFyB;AAQzBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,SAAS,EAAE,EADN;AAELC,IAAAA,YAAY,EAAE,EAFT;AAGLC,IAAAA,OAAO,EAAE;AAHJ;AARkB,CAAD,CAA5B;AAgBA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAE5B,QAAMC,OAAO,GAAGV,SAAS,EAAzB;AAEA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBpB,QAAQ,CAAC,CAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlB6B,GAAD,CAAlC;AAsBAD,EAAAA,SAAS,CAAC,MAAM;AACdsB,IAAAA,KAAK,CAAC,6BAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQG,IAAI,IAAIL,QAAQ,CAACK,IAAD,CAFxB;AAGD,GAJQ,EAIN,EAJM,CAAT;;AAMA,QAAMC,YAAY,GAAG,MAAOC,EAAP,IAAc;AACjC,UAAMN,KAAK,CAAC,iCAAiCM,EAAlC,EAAsC;AAC/CC,MAAAA,MAAM,EAAE;AADuC,KAAtC,CAAX;AAGA,UAAMC,QAAQ,GAAGV,KAAK,CAACW,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACJ,EAAL,IAAWA,EAAhC,CAAjB;AACAP,IAAAA,QAAQ,CAACS,QAAD,CAAR;AACD,GAND,CAhC4B,CAuChC;;;AACI,sBACE,QAAC,SAAD;AAAW,IAAA,SAAS,EAAEX,OAAO,CAACT,IAA9B;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAAA,gBACGU,KAAK,CAACa,GAAN,CAAUD,IAAI,iBACb,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAmB,QAAA,EAAE,EAAE,CAAvB;AAA0B,QAAA,EAAE,EAAE,CAA9B;AAAA,+BACE,QAAC,QAAD;AAAU,UAAA,IAAI,EAAEA,IAAhB;AAAsB,UAAA,YAAY,EAAEL;AAApC;AAAA;AAAA;AAAA;AAAA;AADF,SAAsCK,IAAI,CAACJ,EAA3C;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWH;;GAnDuBV,K;UAEJT,S;;;KAFIS,K","sourcesContent":["import React, { useEffect, useState} from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Container } from '@material-ui/core';\r\nimport NoteCard from './component_note/NoteCard.js';\r\nimport { makeStyles } from '@material-ui/core';\r\nconst axios = require('axios');\r\n\r\nconst useStyles = makeStyles({\r\n    page: \r\n    {\r\n      background: '#f9f9f9',\r\n      width: '100%',\r\n      padding:20 \r\n    },\r\n    \r\n    field: {\r\n      marginTop: 20,\r\n      marginBotton: 20,\r\n      display: 'block'\r\n    }\r\n  });\r\n  \r\n  \r\nexport default function Notes() {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [notes, setNotes] = useState([\r\n          // {\r\n          //   \"title\": \"Yoshi's birthday bash\",\r\n          //   \"details\": \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\",\r\n          //   \"category\": \"reminders\",\r\n          //   \"id\": 1\r\n          // },\r\n          // {\r\n          //   \"title\": \"Complete my ninja training\",\r\n          //   \"details\": \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took.\",\r\n          //   \"category\": \"work\",\r\n          //   \"id\": 2\r\n          // },\r\n          // {\r\n          //   \"title\": \"Order a pizza!\",\r\n          //   \"details\": \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\",\r\n          //   \"category\": \"todos\",\r\n          //   \"id\": 3\r\n          // }\r\n    ]);\r\n\r\n\r\n    useEffect(() => {\r\n      fetch('http://localhost:4000/notes')\r\n        .then(res => res.json())\r\n        .then(data => setNotes(data))\r\n    }, [])\r\n  \r\n    const handleDelete = async (id) => {\r\n      await fetch('http://localhost:4000/notes/' + id, {\r\n        method: 'DELETE'\r\n      })\r\n      const newNotes = notes.filter(note => note.id != id)\r\n      setNotes(newNotes)\r\n    }\r\n//xs={12}  lg={4}\r\n    return(\r\n      <Container className={classes.page}>\r\n        <Grid container spacing={3}>\r\n          {notes.map(note => (\r\n            <Grid item xs={12} md={6} lg={4} key={note.id}>\r\n              <NoteCard note={note} handleDelete={handleDelete} />\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Container>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}