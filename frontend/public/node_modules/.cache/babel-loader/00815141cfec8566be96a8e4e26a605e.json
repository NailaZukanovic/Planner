{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Naila\\\\Desktop\\\\projekatSi\\\\frontend\\\\src\\\\Components\\\\ListTasks.jsx\";\nimport React from 'react';\nimport { Tick } from './Styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ListTasks = _ref => {\n  let {\n    handleDone,\n    todo\n  } = _ref;\n\n  if (todo === null || todo === void 0 ? void 0 : todo.todoItems) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: todo.todoItems.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item\",\n        children: [task.text, task.isCompleted ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"float-right\",\n          children: /*#__PURE__*/_jsxDEV(Tick, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 33\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"float-right\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDone(task),\n            children: \"Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 11\n      }, this))\n    }, void 0, false);\n  }\n\n  return null;\n};\n\n_c = ListTasks;\nexport default ListTasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListTasks\");","map":{"version":3,"sources":["C:/Users/Naila/Desktop/projekatSi/frontend/src/Components/ListTasks.jsx"],"names":["React","Tick","ListTasks","handleDone","todo","todoItems","map","task","text","isCompleted"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,UAArB;;;;AAEA,MAAMC,SAAS,GAAG,QAA0B;AAAA,MAAzB;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,GAAyB;;AAC1C,MAAIA,IAAJ,aAAIA,IAAJ,uBAAIA,IAAI,CAAEC,SAAV,EAAqB;AACnB,wBACE;AAAA,gBACGD,IAAI,CAACC,SAAL,CAAeC,GAAf,CAAoBC,IAAD,iBAClB;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA,mBACGA,IAAI,CAACC,IADR,EAEGD,IAAI,CAACE,WAAL,gBAAmB;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,iCAClB,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADkB;AAAA;AAAA;AAAA;AAAA,gBAAnB,gBAGC;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,iCACE;AAAQ,YAAA,OAAO,EAAE,MAAMN,UAAU,CAACI,IAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADD;AADH,qBADF;AAgBD;;AACD,SAAO,IAAP;AACD,CApBD;;KAAML,S;AAsBN,eAAeA,SAAf","sourcesContent":["import React from 'react';\r\nimport { Tick } from './Styles';\r\n\r\nconst ListTasks = ({ handleDone, todo }) => {\r\n  if (todo?.todoItems) {\r\n    return (\r\n      <>\r\n        {todo.todoItems.map((task) => (\r\n          <li className=\"list-group-item\">\r\n            {task.text}\r\n            {task.isCompleted ? <div className=\"float-right\">\r\n              <Tick />\r\n            </div> : (\r\n              <div className=\"float-right\">\r\n                <button onClick={() => handleDone(task)}>Done</button>\r\n              </div>\r\n            )}\r\n          </li>\r\n        ))}\r\n      </>\r\n    )\r\n  }\r\n  return null;\r\n}\r\n\r\nexport default ListTasks;"]},"metadata":{},"sourceType":"module"}