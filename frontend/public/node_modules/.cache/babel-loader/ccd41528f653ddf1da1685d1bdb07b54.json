{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Naila\\\\Desktop\\\\projekatSi\\\\frontend\\\\src\\\\Components\\\\Layout.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport Drawer from '@material-ui/core/Drawer';\nimport Typography from '@material-ui/core/Typography';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { AddCircleOutlineOutlined, SubjectOutlined } from '@material-ui/icons';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { format } from 'date-fns';\nimport Avatar from '@material-ui/core/Avatar';\nimport EventNoteIcon from '@mui/icons-material/EventNote';\nimport NewspaperIcon from '@mui/icons-material/Newspaper';\nimport CelebrationIcon from '@mui/icons-material/Celebration';\nimport TravelExploreIcon from '@mui/icons-material/TravelExplore';\nimport NightsStayIcon from '@mui/icons-material/NightsStay';\nimport { AmplifySignOut } from \"@aws-amplify/ui-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 240;\nconst useStyles = makeStyles(theme => {\n  return {\n    page: {\n      background: '#f9f9f9',\n      width: '100%',\n      padding: theme.spacing(3)\n    },\n    root: {\n      display: 'flex'\n    },\n    drawer: {\n      width: drawerWidth\n    },\n    drawerPaper: {\n      width: drawerWidth\n    },\n    active: {\n      background: '#f4f4f4'\n    },\n    title: {\n      padding: theme.spacing(2)\n    }\n  };\n});\nexport default function Layout(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const navigate = useNavigate();\n  const location = useLocation();\n  const classes = useStyles();\n  const menuItems = [{\n    text: 'My Notes',\n    icon: /*#__PURE__*/_jsxDEV(SubjectOutlined, {\n      color: \"secondary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }, this),\n    path: '/notes'\n  }, {\n    text: 'Create Note',\n    icon: /*#__PURE__*/_jsxDEV(AddCircleOutlineOutlined, {\n      color: \"secondary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }, this),\n    path: '/create'\n  }, {\n    text: 'Calendar',\n    icon: /*#__PURE__*/_jsxDEV(EventNoteIcon, {\n      color: \"secondary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }, this),\n    path: '/calendar'\n  }, {\n    text: 'News',\n    icon: /*#__PURE__*/_jsxDEV(NewspaperIcon, {\n      color: \"secondary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }, this),\n    path: '/news'\n  }, // {\n  //   text: 'Recipes',\n  //   icon: <CelebrationIcon color=\"secondary\" />,\n  //   path:'/recipes'\n  // },\n  {\n    text: 'Game',\n    icon: /*#__PURE__*/_jsxDEV(TravelExploreIcon, {\n      color: \"secondary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }, this),\n    path: '/game'\n  }, {\n    text: 'Weather',\n    icon: /*#__PURE__*/_jsxDEV(NightsStayIcon, {\n      color: \"secondary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }, this),\n    path: '/weather'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Drawer, {\n      className: classes.drawer,\n      variant: \"permanent\",\n      classes: {\n        paper: classes.drawerPaper\n      },\n      anchor: \"left\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          className: classes.title,\n          children: \"Nayer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        className: \"okvir\",\n        children: menuItems.map(item => /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          onClick: () => navigate(item.path),\n          className: location.pathname == item.path ? classes.active : null,\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: item.icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: item.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this)]\n        }, item.text, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.page,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Layout, \"0+TT1WgRtw2Y8/7gVm1RMtj6koE=\", false, function () {\n  return [useNavigate, useLocation, useStyles];\n});\n\n_c = Layout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Layout\");","map":{"version":3,"sources":["C:/Users/Naila/Desktop/projekatSi/frontend/src/Components/Layout.jsx"],"names":["React","useEffect","makeStyles","Drawer","Typography","useNavigate","useLocation","List","ListItem","ListItemIcon","ListItemText","AddCircleOutlineOutlined","SubjectOutlined","AppBar","Toolbar","format","Avatar","EventNoteIcon","NewspaperIcon","CelebrationIcon","TravelExploreIcon","NightsStayIcon","AmplifySignOut","drawerWidth","useStyles","theme","page","background","width","padding","spacing","root","display","drawer","drawerPaper","active","title","Layout","children","navigate","location","classes","menuItems","text","icon","path","paper","map","item","pathname"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react'\r\nimport { makeStyles } from '@material-ui/core'\r\nimport Drawer from '@material-ui/core/Drawer'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { useNavigate, useLocation } from 'react-router-dom'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport { AddCircleOutlineOutlined, SubjectOutlined } from '@material-ui/icons'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport { format } from 'date-fns'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport EventNoteIcon from '@mui/icons-material/EventNote';\r\nimport NewspaperIcon from '@mui/icons-material/Newspaper';\r\nimport CelebrationIcon from '@mui/icons-material/Celebration';\r\nimport TravelExploreIcon from '@mui/icons-material/TravelExplore';\r\nimport NightsStayIcon from '@mui/icons-material/NightsStay';\r\nimport {AmplifySignOut} from \"@aws-amplify/ui-react\";\r\n\r\nconst drawerWidth = 240\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    page: {\r\n      background: '#f9f9f9',\r\n      width: '100%',\r\n      padding: theme.spacing(3),\r\n    },\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n    },\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n    },\r\n    active: {\r\n      background: '#f4f4f4'\r\n    },\r\n    title: {\r\n      padding: theme.spacing(2),\r\n    },\r\n  }\r\n})\r\n\r\nexport default function Layout({ children }) {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const classes = useStyles();\r\n\r\n\r\n  const menuItems = [\r\n      { \r\n        text: 'My Notes', \r\n        icon: <SubjectOutlined color=\"secondary\" />, \r\n        path: '/notes' \r\n      },\r\n      { \r\n        text: 'Create Note', \r\n        icon: <AddCircleOutlineOutlined color=\"secondary\" />, \r\n        path: '/create' \r\n      },\r\n      { \r\n        text: 'Calendar', \r\n        icon: <EventNoteIcon color=\"secondary\" />, \r\n        path: '/calendar' \r\n      },\r\n      {\r\n        text: 'News',\r\n        icon: <NewspaperIcon color=\"secondary\" />,\r\n        path:'/news'\r\n      },\r\n      // {\r\n      //   text: 'Recipes',\r\n      //   icon: <CelebrationIcon color=\"secondary\" />,\r\n      //   path:'/recipes'\r\n      // },\r\n      {\r\n        text: 'Game',\r\n        icon: <TravelExploreIcon color=\"secondary\" />,\r\n        path:'/game'\r\n      },\r\n      {\r\n        text: 'Weather',\r\n        icon: <NightsStayIcon color=\"secondary\" />,\r\n        path:'/weather'\r\n      },\r\n    ];\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* app bar */}\r\n\r\n      {/* side drawer */}\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"permanent\"\r\n        classes={{ paper: classes.drawerPaper }}\r\n        anchor=\"left\"\r\n      >\r\n        <div>\r\n          <Typography variant=\"h5\" className={classes.title}>\r\n            Nayer\r\n          </Typography>\r\n        </div>\r\n\r\n        {/* links/list section */}\r\n\r\n        <List className=\"okvir\">\r\n          {menuItems.map((item) => (\r\n            <ListItem\r\n              key={item.text} \r\n              button\r\n              onClick={() => navigate(item.path)}\r\n              className={location.pathname == item.path ? classes.active : null}\r\n            >\r\n              <ListItemIcon>{item.icon}</ListItemIcon>\r\n              <ListItemText primary={item.text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n      {/* main content */}\r\n      <div className={classes.page}>\r\n        { children }\r\n      </div>\r\n    </div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}