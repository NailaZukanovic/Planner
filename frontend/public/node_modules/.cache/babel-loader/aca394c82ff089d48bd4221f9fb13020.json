{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Naila\\\\Desktop\\\\projekatSi\\\\frontend\\\\src\\\\Components\\\\pages\\\\Notes.js\",\n    _s = $RefreshSig$();\n\nimport 'react-toastify/dist/ReactToastify.css';\nimport React, { useEffect, useState } from 'react';\nimport { toast, ToastContainer } from 'react-toastify'; // import { Draggable } from 'react-drag-reorder';\n\nimport { Container, makeStyles } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport Modal from '@mui/material/Modal';\nimport TextField from '@mui/material/TextField';\nimport NoteCard from './component_note/NoteCard.js';\nimport Update from './Update';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst axios = require('axios');\n\nconst useStyles = makeStyles({\n  page: {\n    background: '#f9f9f9',\n    width: '100%',\n    padding: 20\n  },\n  field: {\n    marginTop: 20,\n    marginBotton: 20,\n    display: 'block'\n  }\n});\nexport default function Notes() {\n  _s();\n\n  const dragProps = {\n    onDragEnd(fromIndex, toIndex) {\n      const data = [...that.state.data];\n      const item = data.splice(fromIndex, 1)[0];\n      data.splice(toIndex, 0, item);\n      that.setState({\n        data\n      });\n    },\n\n    nodeSelector: 'li',\n    handleSelector: 'a'\n  };\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [notes, setNotes] = useState([]);\n  const [idUpdate, setIdUpdate] = useState(0); //     set search query to empty string\n\n  const [q, setQ] = useState(\"\"); //     set search parameters\n  //     we only what to search countries by capital and name\n  //     this list can be longer if you want\n  //     you can search countries even by their population\n  // just add it to this array\n\n  const [searchParam] = useState([\"category\"]);\n\n  const handleOpen = () => setOpen(true);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const search = items => {\n    return items.filter(item => {\n      return searchParam.some(newItem => {\n        return item[newItem].toString().toLowerCase().indexOf(q.toLowerCase()) > -1;\n      });\n    });\n  };\n\n  const cancelSearch = () => {\n    setQ(\"\");\n  };\n\n  useEffect(() => {\n    axios.get('http://localhost:4000/notes') // .then(res => res.json())\n    .then(data => {\n      setNotes(data.data.notes);\n      console.log(data);\n    });\n  }, []);\n\n  const notify = () => toast.success(\"Uspesno!\", {\n    theme: \"colored\"\n  });\n\n  const handleDelete = async _id => {\n    notify();\n    console.log(_id);\n    await fetch('http://localhost:4000/notes/' + _id, {\n      method: 'DELETE'\n    }).then(res => console.log(res)).catch(err => console.log(err));\n    console.log(notes);\n    const newNotes = notes.filter(note => note._id != _id);\n    setNotes(newNotes);\n  };\n\n  const handleUpdate = note => {\n    handleOpen();\n    setIdUpdate(note._id);\n  }; //xs={12}  lg={4}\n\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: classes.page,\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      variant: \"standard\",\n      value: q,\n      onChange: e => setQ(e.target.value),\n      placeholder: \"Search category\\u2026          \",\n      sx: {\n        width: {\n          xs: 1,\n          sm: 'auto',\n          lg: 'auto'\n        },\n        m: theme => theme.spacing(1, 0.5, 1.5),\n        '& .MuiSvgIcon-root': {\n          mr: 0.5\n        },\n        '& .MuiInput-underline:before': {\n          borderBottom: 1,\n          borderColor: 'divider'\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: /*#__PURE__*/_jsxDEV(ReactDragListView, { ...dragProps,\n        children: search(notes).map(note => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          lg: 4,\n          children: /*#__PURE__*/_jsxDEV(NoteCard, {\n            note: note,\n            handleDelete: () => handleDelete(note._id),\n            handleUpdate: () => handleUpdate(note)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this)\n        }, note._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"modal-modal-title\",\n      \"aria-describedby\": \"modal-modal-description\",\n      children: /*#__PURE__*/_jsxDEV(Update, {\n        id: idUpdate,\n        handleClose: handleClose,\n        notify: notify\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Notes, \"/zPO9wZ4mtDN0e67xF3tR7HC3tk=\", false, function () {\n  return [useStyles];\n});\n\n_c = Notes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Notes\");","map":{"version":3,"sources":["C:/Users/Naila/Desktop/projekatSi/frontend/src/Components/pages/Notes.js"],"names":["React","useEffect","useState","toast","ToastContainer","Container","makeStyles","Grid","Modal","TextField","NoteCard","Update","axios","require","useStyles","page","background","width","padding","field","marginTop","marginBotton","display","Notes","dragProps","onDragEnd","fromIndex","toIndex","data","that","state","item","splice","setState","nodeSelector","handleSelector","classes","open","setOpen","notes","setNotes","idUpdate","setIdUpdate","q","setQ","searchParam","handleOpen","handleClose","search","items","filter","some","newItem","toString","toLowerCase","indexOf","cancelSearch","get","then","console","log","notify","success","theme","handleDelete","_id","fetch","method","res","catch","err","newNotes","note","handleUpdate","e","target","value","xs","sm","lg","m","spacing","mr","borderBottom","borderColor","map"],"mappings":"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","sourcesContent":["import 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport React, {\r\n  useEffect,\r\n  useState,\r\n} from 'react';\r\n\r\nimport {\r\n  toast,\r\n  ToastContainer,\r\n} from 'react-toastify';\r\n\r\n// import { Draggable } from 'react-drag-reorder';\r\nimport {\r\n  Container,\r\n  makeStyles,\r\n} from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Modal from '@mui/material/Modal';\r\nimport TextField from '@mui/material/TextField';\r\n\r\nimport NoteCard from './component_note/NoteCard.js';\r\nimport Update from './Update';\r\n\r\nconst axios = require('axios');\r\n\r\nconst useStyles = makeStyles({\r\n    page: \r\n    {\r\n      background: '#f9f9f9',\r\n      width: '100%',\r\n      padding:20 \r\n    },\r\n    \r\n    field: {\r\n      marginTop: 20,\r\n      marginBotton: 20,\r\n      display: 'block'\r\n    }\r\n\r\n    \r\n});\r\n  \r\n\r\n\r\nexport default function Notes() {\r\n\r\n  const dragProps = {\r\n    onDragEnd(fromIndex, toIndex) {\r\n      const data = [...that.state.data];\r\n      const item = data.splice(fromIndex, 1)[0];\r\n      data.splice(toIndex, 0, item);\r\n      that.setState({ data });\r\n    },\r\n    nodeSelector: 'li',\r\n    handleSelector: 'a'\r\n  };\r\n    const classes = useStyles();\r\n    const [open,setOpen] = useState(false);\r\n    const [notes, setNotes] = useState([]);\r\n\r\n    const [idUpdate, setIdUpdate] = useState(0);\r\n\r\n     //     set search query to empty string\r\n     const [q, setQ] = useState(\"\");\r\n     //     set search parameters\r\n     //     we only what to search countries by capital and name\r\n     //     this list can be longer if you want\r\n     //     you can search countries even by their population\r\n     // just add it to this array\r\n     const [searchParam] = useState([\"category\"]);\r\n\r\n     const handleOpen = () => setOpen(true);\r\n     const handleClose = () => {\r\n      setOpen(false);\r\n     }\r\n\r\n     const search = (items) => {\r\n      return items.filter((item) => {\r\n        return searchParam.some((newItem) => {\r\n            return (\r\n                item[newItem]\r\n                    .toString()\r\n                    .toLowerCase()\r\n                    .indexOf(q.toLowerCase()) > -1\r\n              );\r\n          });\r\n      });\r\n    }\r\n\r\n    const cancelSearch = () => {\r\n      setQ(\"\");\r\n    };\r\n  \r\n    useEffect(() => {\r\n      axios.get('http://localhost:4000/notes')\r\n        // .then(res => res.json())\r\n        .then(data => \r\n          { setNotes(data.data.notes);\r\n              console.log(data); }\r\n        )\r\n    }, [])\r\n  \r\n    const notify = () => toast.success(\"Uspesno!\", {\r\n      theme: \"colored\"\r\n    })\r\n\r\n    const handleDelete = async (_id) => {\r\n\r\n      notify();\r\n      console.log(_id);\r\n\r\n      await fetch('http://localhost:4000/notes/' + _id, {\r\n        method: 'DELETE'\r\n      }).then(res => console.log(res)).catch(err => console.log(err));\r\n\r\n      console.log(notes);\r\n\r\n      const newNotes = notes.filter(note => note._id != _id)\r\n      setNotes(newNotes)\r\n    }\r\n\r\n    const handleUpdate = (note) => \r\n    {\r\n      handleOpen();\r\n      setIdUpdate(note._id);\r\n      \r\n    }\r\n\r\n//xs={12}  lg={4}\r\n    return(\r\n      \r\n      <Container className={classes.page}>\r\n          {/* <Modal open={open}>\r\n            <Update id={idUpdate} handleClose={handleClose} />\r\n          </Modal>   */}\r\n          <ToastContainer />\r\n\r\n            <TextField\r\n              variant=\"standard\"\r\n              value={q}\r\n              onChange={(e) => setQ(e.target.value)}\r\n              placeholder=\"Search category…          \"\r\n              sx={{\r\n                width: {\r\n                  xs: 1,\r\n                  sm: 'auto',\r\n                  lg: 'auto'\r\n                },\r\n                m: (theme) => theme.spacing(1, 0.5, 1.5),\r\n                '& .MuiSvgIcon-root': {\r\n                  mr: 0.5,\r\n                },\r\n                '& .MuiInput-underline:before': {\r\n                  borderBottom: 1,\r\n                  borderColor: 'divider',\r\n                },\r\n              }}\r\n            ></TextField>\r\n\r\n        <Grid container spacing={3}>\r\n        <ReactDragListView {...dragProps}>\r\n          {search(notes).map(note => (\r\n            <Grid key={note._id} item xs={12} md={6} lg={4}>\r\n              <NoteCard note={note} handleDelete={() => handleDelete(note._id)} \r\n                handleUpdate={() => handleUpdate(note)}\r\n              />\r\n            </Grid>\r\n          ))}\r\n        </ReactDragListView>\r\n        </Grid>\r\n\r\n\r\n\r\n          <Modal\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"modal-modal-title\"\r\n            aria-describedby=\"modal-modal-description\"\r\n          >\r\n              <Update id={idUpdate} handleClose={handleClose} notify={notify}/>\r\n          </Modal>  \r\n\r\n\r\n      </Container>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}