{"ast":null,"code":"import { createStyles } from '@mantine/styles';\nconst sizes = {\n  xs: 3,\n  sm: 5,\n  md: 8,\n  lg: 12,\n  xl: 16\n};\nvar useStyles = createStyles((theme, _ref) => {\n  let {\n    color,\n    radius,\n    size,\n    striped\n  } = _ref;\n  return {\n    root: {\n      position: \"relative\",\n      height: theme.fn.size({\n        size,\n        sizes\n      }),\n      backgroundColor: theme.colorScheme === \"dark\" ? theme.colors.dark[4] : theme.colors.gray[2],\n      borderRadius: theme.fn.size({\n        size: radius,\n        sizes: theme.radius\n      }),\n      overflow: \"hidden\"\n    },\n    bar: {\n      position: \"absolute\",\n      top: 0,\n      bottom: 0,\n      left: 0,\n      height: \"100%\",\n      backgroundColor: theme.fn.themeColor(color, theme.colorScheme === \"dark\" ? 4 : 6),\n      transition: `width 200ms ${theme.transitionTimingFunction}`,\n      backgroundSize: `${theme.spacing.md}px ${theme.spacing.md}px`,\n      backgroundImage: striped ? \"linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent)\" : \"none\",\n      \"&:last-of-type\": {\n        borderTopRightRadius: theme.fn.size({\n          size: radius,\n          sizes: theme.radius\n        }),\n        borderBottomRightRadius: theme.fn.size({\n          size: radius,\n          sizes: theme.radius\n        })\n      },\n      \"&:first-of-type\": {\n        borderTopLeftRadius: theme.fn.size({\n          size: radius,\n          sizes: theme.radius\n        }),\n        borderBottomLeftRadius: theme.fn.size({\n          size: radius,\n          sizes: theme.radius\n        })\n      },\n      \"@media (prefers-reduced-motion)\": {\n        transitionDuration: \"0ms\"\n      }\n    }\n  };\n});\nexport default useStyles;\nexport { sizes };","map":{"version":3,"sources":["../../../src/components/Progress/Progress.styles.ts"],"names":[],"mappings":";AACY,MAAC,KAAK,GAAG;AACnB,EAAA,EAAE,EAAE,CADe;AAEnB,EAAA,EAAE,EAAE,CAFe;AAGnB,EAAA,EAAE,EAAE,CAHe;AAInB,EAAA,EAAE,EAAE,EAJe;AAKnB,EAAA,EAAE,EAAE;AALe,CAAT;AAOZ,IAAA,SAAA,GAAe,YAAY,CAAC,CAAC,KAAD;AAAA,MAAQ;AAAE,IAAA,KAAF;AAAS,IAAA,MAAT;AAAiB,IAAA,IAAjB;AAAuB,IAAA;AAAvB,GAAR;AAAA,SAA8C;AACxE,IAAA,IAAI,EAAE;AACJ,MAAA,QAAQ,EAAE,UADN;AAEJ,MAAA,MAAM,EAAE,KAAK,CAAC,EAAN,CAAS,IAAT,CAAc;AAAE,QAAA,IAAF;AAAQ,QAAA;AAAR,OAAd,CAFJ;AAGJ,MAAA,eAAe,EAAE,KAAK,CAAC,WAAN,KAAsB,MAAtB,GAA+B,KAAK,CAAC,MAAN,CAAa,IAAb,CAAkB,CAAlB,CAA/B,GAAsD,KAAK,CAAC,MAAN,CAAa,IAAb,CAAkB,CAAlB,CAHnE;AAIJ,MAAA,YAAY,EAAE,KAAK,CAAC,EAAN,CAAS,IAAT,CAAc;AAAE,QAAA,IAAI,EAAE,MAAR;AAAgB,QAAA,KAAK,EAAE,KAAK,CAAC;AAA7B,OAAd,CAJV;AAKJ,MAAA,QAAQ,EAAE;AALN,KADkE;AAQxE,IAAA,GAAG,EAAE;AACH,MAAA,QAAQ,EAAE,UADP;AAEH,MAAA,GAAG,EAAE,CAFF;AAGH,MAAA,MAAM,EAAE,CAHL;AAIH,MAAA,IAAI,EAAE,CAJH;AAKH,MAAA,MAAM,EAAE,MALL;AAMH,MAAA,eAAe,EAAE,KAAK,CAAC,EAAN,CAAS,UAAT,CAAoB,KAApB,EAA2B,KAAK,CAAC,WAAN,KAAsB,MAAtB,GAA+B,CAA/B,GAAmC,CAA9D,CANd;AAOH,MAAA,UAAU,EAAG,eAAc,KAAK,CAAC,wBAAyB,EAPvD;AAQH,MAAA,cAAc,EAAG,GAAE,KAAK,CAAC,OAAN,CAAc,EAAG,MAAK,KAAK,CAAC,OAAN,CAAc,EAAG,IARvD;AASH,MAAA,eAAe,EAAE,OAAO,GAAG,qLAAH,GAA2L,MAThN;AAUH,wBAAkB;AAChB,QAAA,oBAAoB,EAAE,KAAK,CAAC,EAAN,CAAS,IAAT,CAAc;AAAE,UAAA,IAAI,EAAE,MAAR;AAAgB,UAAA,KAAK,EAAE,KAAK,CAAC;AAA7B,SAAd,CADN;AAEhB,QAAA,uBAAuB,EAAE,KAAK,CAAC,EAAN,CAAS,IAAT,CAAc;AAAE,UAAA,IAAI,EAAE,MAAR;AAAgB,UAAA,KAAK,EAAE,KAAK,CAAC;AAA7B,SAAd;AAFT,OAVf;AAcH,yBAAmB;AACjB,QAAA,mBAAmB,EAAE,KAAK,CAAC,EAAN,CAAS,IAAT,CAAc;AAAE,UAAA,IAAI,EAAE,MAAR;AAAgB,UAAA,KAAK,EAAE,KAAK,CAAC;AAA7B,SAAd,CADJ;AAEjB,QAAA,sBAAsB,EAAE,KAAK,CAAC,EAAN,CAAS,IAAT,CAAc;AAAE,UAAA,IAAI,EAAE,MAAR;AAAgB,UAAA,KAAK,EAAE,KAAK,CAAC;AAA7B,SAAd;AAFP,OAdhB;AAkBH,yCAAmC;AACjC,QAAA,kBAAkB,EAAE;AADa;AAlBhC;AARmE,GAA9C;AAAA,CAAD,CAA3B","sourcesContent":["import { createStyles, MantineNumberSize, MantineColor } from '@mantine/styles';\n\nexport const sizes = {\n  xs: 3,\n  sm: 5,\n  md: 8,\n  lg: 12,\n  xl: 16,\n};\n\ninterface ProgressStyles {\n  color: MantineColor;\n  radius: MantineNumberSize;\n  size: MantineNumberSize;\n  striped: boolean;\n}\n\nexport default createStyles((theme, { color, radius, size, striped }: ProgressStyles) => ({\n  root: {\n    position: 'relative',\n    height: theme.fn.size({ size, sizes }),\n    backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[4] : theme.colors.gray[2],\n    borderRadius: theme.fn.size({ size: radius, sizes: theme.radius }),\n    overflow: 'hidden',\n  },\n\n  bar: {\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    left: 0,\n    height: '100%',\n    backgroundColor: theme.fn.themeColor(color, theme.colorScheme === 'dark' ? 4 : 6),\n    transition: `width 200ms ${theme.transitionTimingFunction}`,\n    backgroundSize: `${theme.spacing.md}px ${theme.spacing.md}px`,\n    backgroundImage: striped\n      ? 'linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent)'\n      : 'none',\n\n    '&:last-of-type': {\n      borderTopRightRadius: theme.fn.size({ size: radius, sizes: theme.radius }),\n      borderBottomRightRadius: theme.fn.size({ size: radius, sizes: theme.radius }),\n    },\n\n    '&:first-of-type': {\n      borderTopLeftRadius: theme.fn.size({ size: radius, sizes: theme.radius }),\n      borderBottomLeftRadius: theme.fn.size({ size: radius, sizes: theme.radius }),\n    },\n\n    '@media (prefers-reduced-motion)': {\n      transitionDuration: '0ms',\n    },\n  },\n}));\n"]},"metadata":{},"sourceType":"module"}