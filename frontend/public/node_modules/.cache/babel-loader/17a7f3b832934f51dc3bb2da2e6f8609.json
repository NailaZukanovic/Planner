{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Naila\\\\Desktop\\\\projekatSi\\\\frontend\\\\src\\\\Components\\\\NewsContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport News from './News';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@mui/material/TextField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: 40\n  },\n  item: {\n    marginBottom: 30\n  },\n  search: {\n    marginLeft: 30\n  }\n}));\n\nconst NewsContainer = () => {\n  _s();\n\n  const classes = useStyles();\n  const [category, setCategory] = useState('general');\n  const [news, setNews] = useState([]);\n  const [query, setQuery] = useState('');\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState({});\n  useEffect(() => {\n    if (category === '') return;\n    setLoading({\n      status: true,\n      maxPercent: 80\n    });\n\n    const getData = async () => {\n      const url = `https://api.currentsapi.services/v1/latest-news?apiKey=Iv0ingCnOq7YDglaNcaU8Lnz8iHVNygfdHIyH_aVypU0J_WT&category=${category}`;\n      const response = await fetch(url);\n      const data = await response.json();\n      setLoading({\n        status: true,\n        maxPercent: 100\n      });\n\n      if (data.news.length) {\n        setError(false);\n      } else {\n        setError(true);\n        setLoading({\n          status: false,\n          maxPercent: 0\n        });\n      }\n\n      setNews(data.news);\n    }; // setNews([]);\n\n\n    setCategory('general');\n    getData();\n  }, [category]);\n\n  const handleChange = event => {\n    setCategory(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      id: \"outlined-name\",\n      label: \"Enter category\",\n      value: category,\n      onChange: handleChange,\n      className: classes.search\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      className: classes.root,\n      container: true,\n      justify: 'space-evenly',\n      children: news.map(newsData => newsData.image !== 'None' ? /*#__PURE__*/_jsxDEV(Grid, {\n        className: classes.item,\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(News, {\n          newsData: newsData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 29\n        }, this)\n      }, newsData.url, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }, this) : null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(NewsContainer, \"y1j4+C+G9jKX5HG3QiIieGOoY7w=\", false, function () {\n  return [useStyles];\n});\n\n_c = NewsContainer;\nexport default NewsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewsContainer\");","map":{"version":3,"sources":["C:/Users/Naila/Desktop/projekatSi/frontend/src/Components/NewsContainer.jsx"],"names":["React","useState","useEffect","News","Grid","makeStyles","TextField","useStyles","theme","root","marginTop","item","marginBottom","search","marginLeft","NewsContainer","classes","category","setCategory","news","setNews","query","setQuery","error","setError","loading","setLoading","status","maxPercent","getData","url","response","fetch","data","json","length","handleChange","event","target","value","map","newsData","image"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport News from './News';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@mui/material/TextField';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        marginTop: 40,\r\n    },\r\n    item: {\r\n        marginBottom: 30,\r\n    },\r\n\r\n    search: {\r\n        marginLeft:30\r\n    }\r\n}));\r\nconst NewsContainer = () => {\r\n    const classes = useStyles();\r\n    const [category, setCategory] = useState('general');\r\n    const [news, setNews] = useState([]);\r\n    const [query, setQuery] = useState('');\r\n    const [error, setError] = useState(false);\r\n    const [loading, setLoading] = useState({});\r\n    useEffect(() => {\r\n        if (category === '') return;\r\n        setLoading({\r\n            status: true,\r\n            maxPercent: 80,\r\n        });\r\n        const getData = async () => {\r\n            const url = `https://api.currentsapi.services/v1/latest-news?apiKey=Iv0ingCnOq7YDglaNcaU8Lnz8iHVNygfdHIyH_aVypU0J_WT&category=${category}`;\r\n  \r\n            const response = await fetch(url);\r\n            const data = await response.json();\r\n            setLoading({\r\n                status: true,\r\n                maxPercent: 100,\r\n            });\r\n            if (data.news.length) {\r\n                setError(false);\r\n            } else {\r\n                setError(true);\r\n                setLoading({\r\n                    status: false,\r\n                    maxPercent: 0,\r\n                });\r\n            }\r\n  \r\n            setNews(data.news);\r\n        };\r\n        // setNews([]);\r\n        setCategory('general');\r\n        getData();\r\n    }, [category]);\r\n\r\n    const handleChange = (event) => {\r\n        setCategory(event.target.value);\r\n      };\r\n    return (\r\n            <>\r\n                <TextField\r\n                id=\"outlined-name\"\r\n                label=\"Enter category\"\r\n                value={category}\r\n                onChange={handleChange}\r\n                className={classes.search}\r\n            />\r\n            <Grid className={classes.root} container justify={'space-evenly'}>\r\n                {news.map((newsData) =>\r\n                    newsData.image !== 'None' ? (\r\n                        <Grid className={classes.item} item key={newsData.url}>\r\n                            <News newsData={newsData} />\r\n                        </Grid>\r\n                    ) : null\r\n                )}\r\n            </Grid>\r\n            </>\r\n    );\r\n};\r\n\r\nexport default NewsContainer;"]},"metadata":{},"sourceType":"module"}