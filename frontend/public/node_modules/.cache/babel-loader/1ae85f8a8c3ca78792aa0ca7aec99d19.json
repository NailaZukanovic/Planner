{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Naila\\\\Desktop\\\\projekatSi\\\\frontend\\\\src\\\\Components\\\\realAuth\\\\Auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useForm } from '@mantine/hooks';\nimport { EnvelopeClosedIcon, LockClosedIcon } from '@modulz/radix-icons';\nimport { TextInput, PasswordInput, Group, Checkbox, Button, Paper, Text, LoadingOverlay, Anchor, useMantineTheme } from '@mantine/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AuthenticationForm(_ref) {\n  _s();\n\n  let {\n    noShadow,\n    noPadding,\n    noSubmit,\n    style\n  } = _ref;\n  const [formType, setFormType] = useState < 'register' | 'login' > 'register';\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState < string > null;\n  const theme = useMantineTheme();\n\n  const toggleFormType = () => {\n    setFormType(current => current === 'register' ? 'login' : 'register');\n    setError(null);\n  };\n\n  const form = useForm({\n    initialValues: {\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      termsOfService: true\n    },\n    validationRules: {\n      firstName: value => formType === 'login' || value.trim().length >= 2,\n      lastName: value => formType === 'login' || value.trim().length >= 2,\n      email: value => /^\\S+@\\S+$/.test(value),\n      password: value => /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{6,}$/.test(value),\n      confirmPassword: (val, values) => formType === 'login' || val === values.password\n    },\n    errorMessages: {\n      email: 'Invalid email',\n      password: 'Password should contain 1 number, 1 letter and at least 6 characters',\n      confirmPassword: \"Passwords don't match. Try again\"\n    }\n  });\n\n  const handleSubmit = () => {\n    setLoading(true);\n    setError(null);\n    setTimeout(() => {\n      setLoading(false);\n      setError(formType === 'register' ? 'User with this email already exists' : 'User with this email does not exist');\n    }, 3000);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    padding: noPadding ? 0 : 'lg',\n    shadow: noShadow ? null : 'sm',\n    style: {\n      position: 'relative',\n      backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[7] : theme.white,\n      ...style\n    },\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: form.onSubmit(handleSubmit),\n      children: [/*#__PURE__*/_jsxDEV(LoadingOverlay, {\n        visible: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), formType === 'register' && /*#__PURE__*/_jsxDEV(Group, {\n        grow: true,\n        children: [/*#__PURE__*/_jsxDEV(TextInput, {\n          \"data-autofocus\": true,\n          required: true,\n          placeholder: \"Your first name\",\n          label: \"First name\",\n          ...form.getInputProps('firstName')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n          required: true,\n          placeholder: \"Your last name\",\n          label: \"Last name\",\n          ...form.getInputProps('lastName')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n        mt: \"md\",\n        required: true,\n        placeholder: \"Your email\",\n        label: \"Email\",\n        icon: /*#__PURE__*/_jsxDEV(EnvelopeClosedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }, this),\n        ...form.getInputProps('email')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PasswordInput, {\n        mt: \"md\",\n        required: true,\n        placeholder: \"Password\",\n        label: \"Password\",\n        icon: /*#__PURE__*/_jsxDEV(LockClosedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }, this),\n        ...form.getInputProps('password')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), formType === 'register' && /*#__PURE__*/_jsxDEV(PasswordInput, {\n        mt: \"md\",\n        required: true,\n        label: \"Confirm Password\",\n        placeholder: \"Confirm password\",\n        icon: /*#__PURE__*/_jsxDEV(LockClosedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 19\n        }, this),\n        ...form.getInputProps('confirmPassword')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), formType === 'register' && /*#__PURE__*/_jsxDEV(Checkbox, {\n        mt: \"xl\",\n        label: \"I agree to sell my soul and privacy to this corporation\",\n        ...form.getInputProps('termsOfService', {\n          type: 'checkbox'\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(Text, {\n        color: \"red\",\n        size: \"sm\",\n        mt: \"sm\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this), !noSubmit && /*#__PURE__*/_jsxDEV(Group, {\n        position: \"apart\",\n        mt: \"xl\",\n        children: [/*#__PURE__*/_jsxDEV(Anchor, {\n          component: \"button\",\n          type: \"button\",\n          color: \"gray\",\n          onClick: toggleFormType,\n          size: \"sm\",\n          children: formType === 'register' ? 'Have an account? Login' : \"Don't have an account? Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"blue\",\n          type: \"submit\",\n          children: formType === 'register' ? 'Register' : 'Login'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AuthenticationForm, \"+xKiuEq15cTvObzKD9IWFwmuQOo=\", false, function () {\n  return [useMantineTheme, useForm];\n});\n\n_c = AuthenticationForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthenticationForm\");","map":{"version":3,"sources":["C:/Users/Naila/Desktop/projekatSi/frontend/src/Components/realAuth/Auth.js"],"names":["React","useState","useForm","EnvelopeClosedIcon","LockClosedIcon","TextInput","PasswordInput","Group","Checkbox","Button","Paper","Text","LoadingOverlay","Anchor","useMantineTheme","AuthenticationForm","noShadow","noPadding","noSubmit","style","formType","setFormType","loading","setLoading","error","setError","string","theme","toggleFormType","current","form","initialValues","firstName","lastName","email","password","confirmPassword","termsOfService","validationRules","value","trim","length","test","val","values","errorMessages","handleSubmit","setTimeout","position","backgroundColor","colorScheme","colors","dark","white","onSubmit","getInputProps","type"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { useForm } from '@mantine/hooks';\r\nimport { EnvelopeClosedIcon, LockClosedIcon } from '@modulz/radix-icons';\r\nimport {\r\n  TextInput,\r\n  PasswordInput,\r\n  Group,\r\n  Checkbox,\r\n  Button,\r\n  Paper,\r\n  Text,\r\n  LoadingOverlay,\r\n  Anchor,\r\n  useMantineTheme,\r\n} from '@mantine/core';\r\n\r\n\r\nexport default function AuthenticationForm({\r\n  noShadow,\r\n  noPadding,\r\n  noSubmit,\r\n  style,\r\n}) {\r\n  const [formType, setFormType] = useState<'register' | 'login'>('register');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string>(null);\r\n  const theme = useMantineTheme();\r\n\r\n  const toggleFormType = () => {\r\n    setFormType((current) => (current === 'register' ? 'login' : 'register'));\r\n    setError(null);\r\n  };\r\n\r\n  const form = useForm({\r\n    initialValues: {\r\n      firstName: '',\r\n      lastName: '',\r\n      email: '',\r\n      password: '',\r\n      confirmPassword: '',\r\n      termsOfService: true,\r\n    },\r\n\r\n    validationRules: {\r\n      firstName: (value) => formType === 'login' || value.trim().length >= 2,\r\n      lastName: (value) => formType === 'login' || value.trim().length >= 2,\r\n      email: (value) => /^\\S+@\\S+$/.test(value),\r\n      password: (value) => /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{6,}$/.test(value),\r\n      confirmPassword: (val, values) => formType === 'login' || val === values.password,\r\n    },\r\n\r\n    errorMessages: {\r\n      email: 'Invalid email',\r\n      password: 'Password should contain 1 number, 1 letter and at least 6 characters',\r\n      confirmPassword: \"Passwords don't match. Try again\",\r\n    },\r\n  });\r\n\r\n  const handleSubmit = () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n      setError(\r\n        formType === 'register'\r\n          ? 'User with this email already exists'\r\n          : 'User with this email does not exist'\r\n      );\r\n    }, 3000);\r\n  };\r\n\r\n  return (\r\n    <Paper\r\n      padding={noPadding ? 0 : 'lg'}\r\n      shadow={noShadow ? null : 'sm'}\r\n      style={{\r\n        position: 'relative',\r\n        backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[7] : theme.white,\r\n        ...style,\r\n      }}\r\n    >\r\n      <form onSubmit={form.onSubmit(handleSubmit)}>\r\n        <LoadingOverlay visible={loading} />\r\n        {formType === 'register' && (\r\n          <Group grow>\r\n            <TextInput\r\n              data-autofocus\r\n              required\r\n              placeholder=\"Your first name\"\r\n              label=\"First name\"\r\n              {...form.getInputProps('firstName')}\r\n            />\r\n\r\n            <TextInput\r\n              required\r\n              placeholder=\"Your last name\"\r\n              label=\"Last name\"\r\n              {...form.getInputProps('lastName')}\r\n            />\r\n          </Group>\r\n        )}\r\n\r\n        <TextInput\r\n          mt=\"md\"\r\n          required\r\n          placeholder=\"Your email\"\r\n          label=\"Email\"\r\n          icon={<EnvelopeClosedIcon />}\r\n          {...form.getInputProps('email')}\r\n        />\r\n\r\n        <PasswordInput\r\n          mt=\"md\"\r\n          required\r\n          placeholder=\"Password\"\r\n          label=\"Password\"\r\n          icon={<LockClosedIcon />}\r\n          {...form.getInputProps('password')}\r\n        />\r\n\r\n        {formType === 'register' && (\r\n          <PasswordInput\r\n            mt=\"md\"\r\n            required\r\n            label=\"Confirm Password\"\r\n            placeholder=\"Confirm password\"\r\n            icon={<LockClosedIcon />}\r\n            {...form.getInputProps('confirmPassword')}\r\n          />\r\n        )}\r\n\r\n        {formType === 'register' && (\r\n          <Checkbox\r\n            mt=\"xl\"\r\n            label=\"I agree to sell my soul and privacy to this corporation\"\r\n            {...form.getInputProps('termsOfService', { type: 'checkbox' })}\r\n          />\r\n        )}\r\n\r\n        {error && (\r\n          <Text color=\"red\" size=\"sm\" mt=\"sm\">\r\n            {error}\r\n          </Text>\r\n        )}\r\n\r\n        {!noSubmit && (\r\n          <Group position=\"apart\" mt=\"xl\">\r\n            <Anchor\r\n              component=\"button\"\r\n              type=\"button\"\r\n              color=\"gray\"\r\n              onClick={toggleFormType}\r\n              size=\"sm\"\r\n            >\r\n              {formType === 'register'\r\n                ? 'Have an account? Login'\r\n                : \"Don't have an account? Register\"}\r\n            </Anchor>\r\n\r\n            <Button color=\"blue\" type=\"submit\">\r\n              {formType === 'register' ? 'Register' : 'Login'}\r\n            </Button>\r\n          </Group>\r\n        )}\r\n      </form>\r\n    </Paper>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}