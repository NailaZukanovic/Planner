{"ast":null,"code":"import { createStyles } from '@mantine/styles';\nvar useStyles = createStyles((theme, _ref) => {\n  let {\n    smallerThan,\n    largerThan,\n    query,\n    styles\n  } = _ref;\n  const media = {};\n\n  if (smallerThan) {\n    media[`@media (min-width: ${theme.fn.size({\n      size: smallerThan,\n      sizes: theme.breakpoints\n    }) + 1}px)`] = styles;\n  }\n\n  if (largerThan) {\n    media[`@media (max-width: ${theme.fn.size({\n      size: largerThan,\n      sizes: theme.breakpoints\n    })}px)`] = styles;\n  }\n\n  if (query) {\n    media[`@media ${query}`] = styles;\n  }\n\n  return {\n    media\n  };\n});\nexport default useStyles;","map":{"version":3,"sources":["../../../src/components/MediaQuery/MediaQuery.styles.ts"],"names":[],"mappings":";AACA,IAAA,SAAA,GAAe,YAAY,CAAC,CAAC,KAAD,WAAuD;AAAA,MAA/C;AAAE,IAAA,WAAF;AAAe,IAAA,UAAf;AAA2B,IAAA,KAA3B;AAAkC,IAAA;AAAlC,GAA+C;AACjF,QAAM,KAAK,GAAG,EAAd;;AACA,MAAI,WAAJ,EAAiB;AACf,IAAA,KAAK,CAAE,sBAAqB,KAAK,CAAC,EAAN,CAAS,IAAT,CAAc;AAAE,MAAA,IAAI,EAAE,WAAR;AAAqB,MAAA,KAAK,EAAE,KAAK,CAAC;AAAlC,KAAd,IAAiE,CAAE,KAA1F,CAAL,GAAuG,MAAvG;AACD;;AACD,MAAI,UAAJ,EAAgB;AACd,IAAA,KAAK,CAAE,sBAAqB,KAAK,CAAC,EAAN,CAAS,IAAT,CAAc;AAAE,MAAA,IAAI,EAAE,UAAR;AAAoB,MAAA,KAAK,EAAE,KAAK,CAAC;AAAjC,KAAd,CAA8D,KAArF,CAAL,GAAkG,MAAlG;AACD;;AACD,MAAI,KAAJ,EAAW;AACT,IAAA,KAAK,CAAE,UAAS,KAAM,EAAjB,CAAL,GAA2B,MAA3B;AACD;;AACD,SAAO;AAAE,IAAA;AAAF,GAAP;AACD,CAZ0B,CAA3B","sourcesContent":["import { createStyles, MantineNumberSize, CSSObject } from '@mantine/styles';\n\ninterface MediaQueryStyles {\n  smallerThan: MantineNumberSize;\n  largerThan: MantineNumberSize;\n  styles: CSSObject;\n  query: string;\n}\n\nexport default createStyles(\n  (theme, { smallerThan, largerThan, query, styles }: MediaQueryStyles) => {\n    const media: CSSObject = {};\n\n    if (smallerThan) {\n      media[\n        `@media (min-width: ${\n          theme.fn.size({ size: smallerThan, sizes: theme.breakpoints }) + 1\n        }px)`\n      ] = styles;\n    }\n\n    if (largerThan) {\n      media[\n        `@media (max-width: ${theme.fn.size({ size: largerThan, sizes: theme.breakpoints })}px)`\n      ] = styles;\n    }\n\n    if (query) {\n      media[`@media ${query}`] = styles;\n    }\n\n    return { media };\n  }\n);\n"]},"metadata":{},"sourceType":"module"}