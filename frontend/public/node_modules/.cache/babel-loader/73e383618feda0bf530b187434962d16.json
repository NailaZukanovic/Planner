{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Naila\\\\Desktop\\\\projekatSi\\\\frontend\\\\src\\\\Components\\\\pages\\\\Notes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { Container } from '@material-ui/core';\nimport NoteCard from './component_note/NoteCard.js';\nimport { makeStyles } from '@material-ui/core';\nimport TextField from '@mui/material/TextField';\nimport Update from './Update';\nimport Modal from '@mui/material/Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst axios = require('axios');\n\nconst useStyles = makeStyles({\n  page: {\n    background: '#f9f9f9',\n    width: '100%',\n    padding: 20\n  },\n  field: {\n    marginTop: 20,\n    marginBotton: 20,\n    display: 'block'\n  }\n});\nexport default function Notes() {\n  _s();\n\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [notes, setNotes] = useState([]);\n  const [idUpdate, setIdUpdate] = useState(0); //     set search query to empty string\n\n  const [q, setQ] = useState(\"\"); //     set search parameters\n  //     we only what to search countries by capital and name\n  //     this list can be longer if you want\n  //     you can search countries even by their population\n  // just add it to this array\n\n  const [searchParam] = useState([\"category\"]);\n\n  const handleOpen = () => setOpen(true);\n\n  const handleClose = () => setOpen(false);\n\n  const search = items => {\n    return items.filter(item => {\n      return searchParam.some(newItem => {\n        return item[newItem].toString().toLowerCase().indexOf(q.toLowerCase()) > -1;\n      });\n    });\n  };\n\n  const cancelSearch = () => {\n    setQ(\"\");\n  };\n\n  useEffect(() => {\n    axios.get('http://localhost:4000/notes') // .then(res => res.json())\n    .then(data => {\n      setNotes(data.data.notes);\n      console.log(data);\n    });\n  }, []);\n\n  const handleDelete = async _id => {\n    console.log(_id);\n    await fetch('http://localhost:4000/notes/' + _id, {\n      method: 'DELETE'\n    }).then(res => console.log(res)).catch(err => console.log(err));\n    console.log(notes);\n    const newNotes = notes.filter(note => note._id != _id);\n    setNotes(newNotes);\n  };\n\n  const handleUpdate = note => {\n    handleOpen();\n    setIdUpdate(note._id);\n  }; //xs={12}  lg={4}\n\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: classes.page,\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      variant: \"standard\",\n      value: q,\n      onChange: e => setQ(e.target.value),\n      placeholder: \"Search category\\u2026          \" // InputProps={<SearchIcon/>}\n      //   <IconButton\n      //     title=\"Clear\"\n      //     aria-label=\"Clear\"\n      //     size=\"small\"\n      //     // style={{ visibility: props.value ? 'visible' : 'hidden' }}\n      //     style=\"visible\"\n      //     // onClick={props.clearSearch}\n      //   >\n      //     <ClearIcon fontSize=\"small\" />\n      //   </IconButton>\n      //   }\n      ,\n      sx: {\n        width: {\n          xs: 1,\n          sm: 'auto' // lg: 'auto'\n\n        },\n        m: theme => theme.spacing(1, 0.5, 1.5),\n        '& .MuiSvgIcon-root': {\n          mr: 0.5\n        },\n        '& .MuiInput-underline:before': {\n          borderBottom: 1,\n          borderColor: 'divider'\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: search(notes).map(note => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        lg: 4,\n        children: /*#__PURE__*/_jsxDEV(NoteCard, {\n          note: note,\n          handleDelete: () => handleDelete(note._id),\n          handleUpdate: () => handleUpdate(note)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 15\n        }, this)\n      }, note._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"modal-modal-title\",\n      \"aria-describedby\": \"modal-modal-description\",\n      component: motion.div,\n      children: /*#__PURE__*/_jsxDEV(Update, {\n        id: idUpdate,\n        handleClose: handleClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Notes, \"/zPO9wZ4mtDN0e67xF3tR7HC3tk=\", false, function () {\n  return [useStyles];\n});\n\n_c = Notes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Notes\");","map":{"version":3,"sources":["C:/Users/Naila/Desktop/projekatSi/frontend/src/Components/pages/Notes.js"],"names":["React","useEffect","useState","Grid","Paper","Container","NoteCard","makeStyles","TextField","Update","Modal","axios","require","useStyles","page","background","width","padding","field","marginTop","marginBotton","display","Notes","classes","open","setOpen","notes","setNotes","idUpdate","setIdUpdate","q","setQ","searchParam","handleOpen","handleClose","search","items","filter","item","some","newItem","toString","toLowerCase","indexOf","cancelSearch","get","then","data","console","log","handleDelete","_id","fetch","method","res","catch","err","newNotes","note","handleUpdate","e","target","value","xs","sm","m","theme","spacing","mr","borderBottom","borderColor","map","motion","div"],"mappings":"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","sourcesContent":["import React, { useEffect, useState} from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Container } from '@material-ui/core';\r\nimport NoteCard from './component_note/NoteCard.js';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport TextField from '@mui/material/TextField';\r\nimport Update from './Update';\r\nimport Modal from '@mui/material/Modal';\r\n\r\nconst axios = require('axios');\r\n\r\nconst useStyles = makeStyles({\r\n    page: \r\n    {\r\n      background: '#f9f9f9',\r\n      width: '100%',\r\n      padding:20 \r\n    },\r\n    \r\n    field: {\r\n      marginTop: 20,\r\n      marginBotton: 20,\r\n      display: 'block'\r\n    }\r\n});\r\n  \r\n\r\n\r\nexport default function Notes() {\r\n\r\n    const classes = useStyles();\r\n    const [open,setOpen] = useState(false);\r\n    const [notes, setNotes] = useState([]);\r\n\r\n    const [idUpdate, setIdUpdate] = useState(0);\r\n\r\n     //     set search query to empty string\r\n     const [q, setQ] = useState(\"\");\r\n     //     set search parameters\r\n     //     we only what to search countries by capital and name\r\n     //     this list can be longer if you want\r\n     //     you can search countries even by their population\r\n     // just add it to this array\r\n     const [searchParam] = useState([\"category\"]);\r\n\r\n     const handleOpen = () => setOpen(true);\r\n     const handleClose = () => setOpen(false);\r\n   \r\n\r\n     const search = (items) => {\r\n      return items.filter((item) => {\r\n        return searchParam.some((newItem) => {\r\n            return (\r\n                item[newItem]\r\n                    .toString()\r\n                    .toLowerCase()\r\n                    .indexOf(q.toLowerCase()) > -1\r\n              );\r\n          });\r\n      });\r\n    }\r\n\r\n    const cancelSearch = () => {\r\n      setQ(\"\");\r\n    };\r\n  \r\n    useEffect(() => {\r\n      axios.get('http://localhost:4000/notes')\r\n        // .then(res => res.json())\r\n        .then(data => \r\n          { setNotes(data.data.notes);\r\n              console.log(data); }\r\n        )\r\n    }, [])\r\n  \r\n    const handleDelete = async (_id) => {\r\n      console.log(_id);\r\n\r\n      await fetch('http://localhost:4000/notes/' + _id, {\r\n        method: 'DELETE'\r\n      }).then(res => console.log(res)).catch(err => console.log(err));\r\n\r\n      console.log(notes);\r\n\r\n      const newNotes = notes.filter(note => note._id != _id)\r\n      setNotes(newNotes)\r\n    }\r\n\r\n    const handleUpdate = (note) => \r\n    {\r\n      handleOpen();\r\n      setIdUpdate(note._id);\r\n    }\r\n//xs={12}  lg={4}\r\n    return(\r\n      <Container className={classes.page}>\r\n        \r\n            <TextField\r\n              variant=\"standard\"\r\n              value={q}\r\n              onChange={(e) => setQ(e.target.value)}\r\n              placeholder=\"Search category…          \"\r\n              // InputProps={<SearchIcon/>}\r\n                //   <IconButton\r\n                //     title=\"Clear\"\r\n                //     aria-label=\"Clear\"\r\n                //     size=\"small\"\r\n                //     // style={{ visibility: props.value ? 'visible' : 'hidden' }}\r\n                //     style=\"visible\"\r\n                //     // onClick={props.clearSearch}\r\n                //   >\r\n                //     <ClearIcon fontSize=\"small\" />\r\n                //   </IconButton>\r\n                //   }\r\n              sx={{\r\n                width: {\r\n                  xs: 1,\r\n                  sm: 'auto'\r\n                  // lg: 'auto'\r\n                },\r\n                m: (theme) => theme.spacing(1, 0.5, 1.5),\r\n                '& .MuiSvgIcon-root': {\r\n                  mr: 0.5,\r\n                },\r\n                '& .MuiInput-underline:before': {\r\n                  borderBottom: 1,\r\n                  borderColor: 'divider',\r\n                },\r\n              }}\r\n            ></TextField>\r\n\r\n        <Grid container spacing={3}>\r\n          {search(notes).map(note => (\r\n            <Grid key={note._id} item xs={12} md={6} lg={4}>\r\n              <NoteCard note={note} handleDelete={() => handleDelete(note._id)} \r\n                handleUpdate={() => handleUpdate(note)}\r\n              />\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n\r\n  \r\n        <Modal\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"modal-modal-title\"\r\n          aria-describedby=\"modal-modal-description\"\r\n          component={motion.div}\r\n          \r\n        >\r\n            <Update id={idUpdate} handleClose={handleClose} />\r\n        </Modal>  \r\n      </Container>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}