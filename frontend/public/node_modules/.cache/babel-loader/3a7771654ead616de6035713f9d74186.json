{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Naila\\\\Desktop\\\\projekatSi\\\\frontend\\\\src\\\\Components\\\\pages\\\\Create.js\",\n    _s = $RefreshSig$();\n\nimport 'react-toastify/dist/ReactToastify.css';\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { makeStyles } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst axios = require('axios');\n\nconst useStyles = makeStyles({\n  page: {\n    background: '#f9f9f9',\n    width: '100%',\n    padding: 20\n  },\n  field: {\n    marginTop: 20,\n    marginBotton: 20,\n    display: 'block'\n  }\n});\nexport default function Create() {\n  _s();\n\n  const classes = useStyles();\n  const navigate = useNavigate();\n  const [title, setTitle] = useState('');\n  const [details, setDetails] = useState('');\n  const [titleError, setTitleError] = useState(false);\n  const [detailsError, setDetailsError] = useState(false);\n  const [category, setCategory] = useState('money');\n\n  const notify = () => toast.success(\"Uspesno!\", {\n    theme: \"colored\"\n  });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setTitleError(false);\n    setDetailsError(false);\n    notify();\n\n    if (title === '') {\n      setTitleError(true);\n    }\n\n    if (details === '') {\n      setDetailsError(true);\n    }\n\n    if (title && details) {\n      fetch('http://localhost:4000/notes', {\n        method: 'POST',\n        headers: {\n          \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          title,\n          details,\n          category\n        })\n      }).then(() => navigate('/Notes')); // let res = axios.post('http://localhost:4000/users/', { title, details, category });\n      // console.log(res.data);\n      // console.log('post this on backend');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    size: \"sm\",\n    className: classes.page,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      color: \"textSecondary\",\n      component: \"h2\",\n      gutterBottom: true,\n      children: \"Create a New Note\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      noValidate: true,\n      autoComplete: \"off\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        className: classes.field,\n        onChange: e => setTitle(e.target.value),\n        label: \"Note Title\",\n        variant: \"outlined\",\n        color: \"secondary\",\n        fullWidth: true,\n        required: true,\n        error: titleError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        className: classes.field,\n        onChange: e => setDetails(e.target.value),\n        label: \"Details\",\n        variant: \"outlined\",\n        color: \"secondary\",\n        multiline: true,\n        rows: 4,\n        fullWidth: true,\n        required: true,\n        error: detailsError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        className: classes.field,\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          children: \"Note Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n          value: category,\n          onChange: e => setCategory(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n            value: \"money\",\n            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 54\n            }, this),\n            label: \"Money\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            value: \"todos\",\n            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 54\n            }, this),\n            label: \"Todos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            value: \"reminders\",\n            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 58\n            }, this),\n            label: \"Reminders\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            value: \"work\",\n            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 53\n            }, this),\n            label: \"Work\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        color: \"secondary\",\n        variant: \"contained\",\n        endIcon: /*#__PURE__*/_jsxDEV(KeyboardArrowRightIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 20\n        }, this),\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Create, \"ACHond5AaAyVHN2IUyvOJJ5ke6c=\", false, function () {\n  return [useStyles, useNavigate];\n});\n\n_c = Create;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"sources":["C:/Users/Naila/Desktop/projekatSi/frontend/src/Components/pages/Create.js"],"names":["React","useState","useNavigate","toast","makeStyles","Button","Container","FormControl","FormControlLabel","FormLabel","Radio","RadioGroup","TextField","Typography","KeyboardArrowRightIcon","axios","require","useStyles","page","background","width","padding","field","marginTop","marginBotton","display","Create","classes","navigate","title","setTitle","details","setDetails","titleError","setTitleError","detailsError","setDetailsError","category","setCategory","notify","success","theme","handleSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","then","target","value"],"mappings":"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","sourcesContent":["import 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport React, { useState } from 'react';\r\n\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport { makeStyles } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport Container from '@material-ui/core/Container';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\r\n\r\nconst axios = require('axios');\r\n\r\nconst useStyles = makeStyles({\r\n  page: \r\n  {\r\n    background: '#f9f9f9',\r\n    width: '100%',\r\n    padding: 20 \r\n  },\r\n  \r\n  field: {\r\n    marginTop: 20,\r\n    marginBotton: 20,\r\n    display: 'block'\r\n  }\r\n});\r\n\r\n\r\nexport default function Create() {\r\n  const classes = useStyles()\r\n  const navigate = useNavigate()\r\n  const [title, setTitle] = useState('')\r\n  const [details, setDetails] = useState('')\r\n  const [titleError, setTitleError] = useState(false)\r\n  const [detailsError, setDetailsError] = useState(false)\r\n  const [category, setCategory] = useState('money')\r\n\r\n\r\n  const notify = () => toast.success(\"Uspesno!\", {\r\n    theme: \"colored\"\r\n  });\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    setTitleError(false)\r\n    setDetailsError(false)\r\n\r\n    notify();\r\n    \r\n    if (title === '') {\r\n      setTitleError(true)\r\n    }\r\n    if (details === '') {\r\n      setDetailsError(true)\r\n    }\r\n    if (title && details) {\r\n      fetch('http://localhost:4000/notes', {\r\n        method: 'POST',\r\n        headers: {\"Content-type\": \"application/json\"},\r\n        body: JSON.stringify({ title, details, category })\r\n      }).then(() => navigate('/Notes'))\r\n\r\n      // let res = axios.post('http://localhost:4000/users/', { title, details, category });\r\n\r\n      // console.log(res.data);\r\n\r\n      // console.log('post this on backend');\r\n    } \r\n  }\r\n\r\n  return (\r\n    <Container size=\"sm\" className={classes.page}>\r\n      <Typography\r\n        variant=\"h6\" \r\n        color=\"textSecondary\"\r\n        component=\"h2\"\r\n        gutterBottom\r\n      >\r\n        Create a New Note\r\n      </Typography>\r\n      \r\n      <form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\r\n        <TextField className={classes.field}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          label=\"Note Title\" \r\n          variant=\"outlined\" \r\n          color=\"secondary\" \r\n          fullWidth\r\n          required\r\n          error={titleError}\r\n        />\r\n        <TextField className={classes.field}\r\n          onChange={(e) => setDetails(e.target.value)}\r\n          label=\"Details\"\r\n          variant=\"outlined\"\r\n          color=\"secondary\"\r\n          multiline\r\n          rows={4}\r\n          fullWidth\r\n          required\r\n          error={detailsError}\r\n        />\r\n\r\n        {/* <Radio value=\"hello\" />\r\n        <Radio value=\"goodbye\" /> */}\r\n\r\n        <FormControl className={classes.field}>\r\n          <FormLabel>Note Category</FormLabel>\r\n          <RadioGroup value={category} onChange={(e) => setCategory(e.target.value)}>\r\n            <FormControlLabel value=\"money\" control={<Radio />} label=\"Money\" />\r\n            <FormControlLabel value=\"todos\" control={<Radio />} label=\"Todos\" />\r\n            <FormControlLabel value=\"reminders\" control={<Radio />} label=\"Reminders\" />\r\n            <FormControlLabel value=\"work\" control={<Radio />} label=\"Work\" />\r\n          </RadioGroup>\r\n        </FormControl>\r\n\r\n        <Button\r\n          type=\"submit\" \r\n          color=\"secondary\" \r\n          variant=\"contained\"\r\n          endIcon={<KeyboardArrowRightIcon />}>\r\n          Submit\r\n        </Button>\r\n      </form>\r\n\r\n      \r\n    </Container>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}