{"ast":null,"code":"var Br = Object.defineProperty,\n    Mr = Object.defineProperties;\nvar Gr = Object.getOwnPropertyDescriptors;\nvar L = Object.getOwnPropertySymbols;\nvar Se = Object.prototype.hasOwnProperty,\n    ye = Object.prototype.propertyIsEnumerable;\n\nvar Ce = (r, e, a) => e in r ? Br(r, e, {\n  enumerable: !0,\n  configurable: !0,\n  writable: !0,\n  value: a\n}) : r[e] = a,\n    m = (r, e) => {\n  for (var a in e || (e = {})) Se.call(e, a) && Ce(r, a, e[a]);\n\n  if (L) for (var a of L(e)) ye.call(e, a) && Ce(r, a, e[a]);\n  return r;\n},\n    y = (r, e) => Mr(r, Gr(e));\n\nvar H = (r, e) => {\n  var a = {};\n\n  for (var t in r) Se.call(r, t) && e.indexOf(t) < 0 && (a[t] = r[t]);\n\n  if (r != null && L) for (var t of L(r)) e.indexOf(t) < 0 && ye.call(r, t) && (a[t] = r[t]);\n  return a;\n};\n\nvar Lr = (r, e) => () => (r && (e = r(r = 0)), e);\n\nvar c = (r, e) => () => (e || r((e = {\n  exports: {}\n}).exports, e), e.exports);\n\nvar o = Lr(() => {});\nvar bo = c((On, ho) => {\n  o();\n  ho.exports = {\n    alignItems: {\n      value: \"center\"\n    },\n    justifyContent: {\n      value: \"space-between\"\n    },\n    color: {\n      value: \"{colors.font.primary.value}\"\n    },\n    backgroundColor: {\n      value: \"{colors.background.tertiary.value}\"\n    },\n    paddingBlock: {\n      value: \"{space.small.value}\"\n    },\n    paddingInline: {\n      value: \"{space.medium.value}\"\n    },\n    icon: {\n      size: {\n        value: \"{fontSizes.xl.value}\"\n      }\n    },\n    heading: {\n      fontSize: {\n        value: \"{fontSizes.medium.value}\"\n      },\n      fontWeight: {\n        value: \"{fontWeights.bold.value}\"\n      }\n    },\n    info: {\n      color: {\n        value: \"{colors.font.info.value}\"\n      },\n      backgroundColor: {\n        value: \"{colors.background.info.value}\"\n      }\n    },\n    error: {\n      color: {\n        value: \"{colors.font.error.value}\"\n      },\n      backgroundColor: {\n        value: \"{colors.background.error.value}\"\n      }\n    },\n    warning: {\n      color: {\n        value: \"{colors.font.warning.value}\"\n      },\n      backgroundColor: {\n        value: \"{colors.background.warning.value}\"\n      }\n    },\n    success: {\n      color: {\n        value: \"{colors.font.success.value}\"\n      },\n      backgroundColor: {\n        value: \"{colors.background.success.value}\"\n      }\n    }\n  };\n});\nvar yo = c((Fn, So) => {\n  o();\n  So.exports = {\n    color: {\n      value: \"{colors.font.primary.value}\"\n    },\n    lineHeight: {\n      value: 1\n    },\n    fontWeight: {\n      value: \"{fontWeights.semibold.value}\"\n    },\n    fontSize: {\n      value: \"{fontSizes.small.value}\"\n    },\n    textAlign: {\n      value: \"center\"\n    },\n    paddingVertical: {\n      value: \"{space.xs.value}\"\n    },\n    paddingHorizontal: {\n      value: \"{space.small.value}\"\n    },\n    backgroundColor: {\n      value: \"{colors.background.tertiary.value}\"\n    },\n    borderRadius: {\n      value: \"{radii.xl.value}\"\n    },\n    info: {\n      color: {\n        value: \"{colors.font.info.value}\"\n      },\n      backgroundColor: {\n        value: \"{colors.background.info.value}\"\n      }\n    },\n    warning: {\n      color: {\n        value: \"{colors.font.warning.value}\"\n      },\n      backgroundColor: {\n        value: \"{colors.background.warning.value}\"\n      }\n    },\n    success: {\n      color: {\n        value: \"{colors.font.success.value}\"\n      },\n      backgroundColor: {\n        value: \"{colors.background.success.value}\"\n      }\n    },\n    error: {\n      color: {\n        value: \"{colors.font.error.value}\"\n      },\n      backgroundColor: {\n        value: \"{colors.background.error.value}\"\n      }\n    },\n    small: {\n      fontSize: {\n        value: \"{fontSizes.xs.value}\"\n      },\n      paddingVertical: {\n        value: \"{space.xxs.value}\"\n      },\n      paddingHorizontal: {\n        value: \"{space.xs.value}\"\n      }\n    },\n    large: {\n      fontSize: {\n        value: \"{fontSizes.medium.value}\"\n      },\n      paddingVertical: {\n        value: \"{space.small.value}\"\n      },\n      paddingHorizontal: {\n        value: \"{space.medium.value}\"\n      }\n    }\n  };\n});\nvar xo = c((zn, Co) => {\n  o();\n  Co.exports = {\n    fontWeight: {\n      value: \"{fontWeights.bold.value}\"\n    },\n    transitionDuration: {\n      value: \"{components.fieldcontrol.transitionDuration.value}\"\n    },\n    fontSize: {\n      value: \"{components.fieldcontrol.fontSize.value}\"\n    },\n    lineHeight: {\n      value: \"{components.fieldcontrol.lineHeight.value}\"\n    },\n    paddingBlockStart: {\n      value: \"{components.fieldcontrol.paddingBlockStart.value}\"\n    },\n    paddingBlockEnd: {\n      value: \"{components.fieldcontrol.paddingBlockEnd.value}\"\n    },\n    paddingInlineStart: {\n      value: \"{components.fieldcontrol.paddingInlineStart.value}\"\n    },\n    paddingInlineEnd: {\n      value: \"{components.fieldcontrol.paddingInlineEnd.value}\"\n    },\n    borderColor: {\n      value: \"{components.fieldcontrol.borderColor.value}\"\n    },\n    borderWidth: {\n      value: \"{components.fieldcontrol.borderWidth.value}\"\n    },\n    borderStyle: {\n      value: \"{components.fieldcontrol.borderStyle.value}\"\n    },\n    borderRadius: {\n      value: \"{components.fieldcontrol.borderRadius.value}\"\n    },\n    color: {\n      value: \"{colors.font.primary.value}\"\n    },\n    _hover: {\n      color: {\n        value: \"{colors.font.focus.value}\"\n      },\n      backgroundColor: {\n        value: \"{colors.brand.primary.10.value}\"\n      },\n      borderColor: {\n        value: \"{colors.brand.primary.60.value}\"\n      }\n    },\n    _focus: {\n      color: {\n        value: \"{colors.font.focus.value}\"\n      },\n      backgroundColor: {\n        value: \"{colors.brand.primary.10.value}\"\n      },\n      borderColor: {\n        value: \"{colors.border.focus.value}\"\n      },\n      boxShadow: {\n        value: \"{components.fieldcontrol._focus.boxShadow.value}\"\n      }\n    },\n    _active: {\n      color: {\n        value: \"{colors.font.active.value}\"\n      },\n      backgroundColor: {\n        value: \"{colors.brand.primary.20.value}\"\n      },\n      borderColor: {\n        value: \"{colors.brand.primary.100.value}\"\n      }\n    },\n    _loading: {\n      color: {\n        value: \"{colors.font.tertiary.value}\"\n      },\n      backgroundColor: {\n        value: \"transparent\"\n      },\n      borderColor: {\n        value: \"{colors.border.tertiary.value}\"\n      }\n    },\n    _disabled: {\n      color: {\n        value: \"{colors.font.disabled.value}\"\n      },\n      backgroundColor: {\n        value: \"transparent\"\n      },\n      borderColor: {\n        value: \"{colors.border.tertiary.value}\"\n      }\n    },\n    primary: {\n      borderColor: {\n        value: \"transparent\"\n      },\n      borderWidth: {\n        value: \"{borderWidths.small.value}\"\n      },\n      borderStyle: {\n        value: \"solid\"\n      },\n      backgroundColor: {\n        value: \"{colors.brand.primary.80.value}\"\n      },\n      color: {\n        value: \"{colors.font.inverse.value}\"\n      },\n      _disabled: {\n        borderColor: {\n          value: \"transparent\"\n        },\n        backgroundColor: {\n          value: \"{colors.background.disabled.value}\"\n        },\n        color: {\n          value: \"{colors.font.disabled.value}\"\n        }\n      },\n      _loading: {\n        borderColor: {\n          value: \"transparent\"\n        },\n        backgroundColor: {\n          value: \"{colors.background.tertiary.value}\"\n        },\n        color: {\n          value: \"{colors.font.inverse.value}\"\n        }\n      },\n      _hover: {\n        borderColor: {\n          value: \"transparent\"\n        },\n        backgroundColor: {\n          value: \"{colors.brand.primary.90.value}\"\n        },\n        color: {\n          value: \"{colors.font.inverse.value}\"\n        }\n      },\n      _focus: {\n        borderColor: {\n          value: \"transparent\"\n        },\n        backgroundColor: {\n          value: \"{colors.brand.primary.90.value}\"\n        },\n        color: {\n          value: \"{colors.font.inverse.value}\"\n        },\n        boxShadow: {\n          value: \"{components.fieldcontrol._focus.boxShadow.value}\"\n        }\n      },\n      _active: {\n        borderColor: {\n          value: \"transparent\"\n        },\n        backgroundColor: {\n          value: \"{colors.brand.primary.100.value}\"\n        },\n        color: {\n          value: \"{colors.font.inverse.value}\"\n        }\n      }\n    },\n    menu: {\n      borderWidth: {\n        value: 0\n      },\n      backgroundColor: {\n        value: \"transparent\"\n      },\n      justifyContent: {\n        value: \"start\"\n      },\n      _hover: {\n        color: {\n          value: \"{colors.font.inverse.value}\"\n        },\n        backgroundColor: {\n          value: \"{colors.brand.primary.80.value}\"\n        }\n      },\n      _focus: {\n        color: {\n          value: \"{colors.font.inverse.value}\"\n        },\n        backgroundColor: {\n          value: \"{colors.brand.primary.80.value}\"\n        }\n      },\n      _active: {\n        color: {\n          value: \"{colors.font.inverse.value}\"\n        },\n        backgroundColor: {\n          value: \"{colors.brand.primary.90.value}\"\n        }\n      },\n      _disabled: {\n        color: {\n          value: \"{colors.font.disabled.value}\"\n        }\n      }\n    },\n    link: {\n      borderWidth: {\n        value: 0\n      },\n      borderColor: {\n        value: \"transparent\"\n      },\n      backgroundColor: {\n        value: \"transparent\"\n      },\n      color: {\n        value: \"{colors.font.interactive.value}\"\n      },\n      _hover: {\n        borderColor: {\n          value: \"transparent\"\n        },\n        backgroundColor: {\n          value: \"{colors.brand.primary.10.value}\"\n        },\n        color: {\n          value: \"{colors.font.hover.value}\"\n        }\n      },\n      _focus: {\n        borderColor: {\n          value: \"transparent\"\n        },\n        backgroundColor: {\n          value: \"{colors.brand.primary.10.value}\"\n        },\n        color: {\n          value: \"{colors.font.focus.value}\"\n        },\n        boxShadow: {\n          value: \"{components.fieldcontrol._focus.boxShadow.value}\"\n        }\n      },\n      _active: {\n        borderColor: {\n          value: \"transparent\"\n        },\n        backgroundColor: {\n          value: \"{colors.brand.primary.20.value}\"\n        },\n        color: {\n          value: \"{colors.font.active.value}\"\n        }\n      },\n      _disabled: {\n        borderColor: {\n          value: \"transparent\"\n        },\n        backgroundColor: {\n          value: \"transparent\"\n        },\n        color: {\n          value: \"{colors.font.disabled.value}\"\n        }\n      },\n      _loading: {\n        borderColor: {\n          value: \"transparent\"\n        },\n        backgroundColor: {\n          value: \"transparent\"\n        },\n        color: {\n          value: \"{colors.font.disabled.value}\"\n        }\n      }\n    },\n    small: {\n      fontSize: {\n        value: \"{components.fieldcontrol.small.fontSize.value}\"\n      },\n      paddingBlockStart: {\n        value: \"{components.fieldcontrol.small.paddingBlockStart.value}\"\n      },\n      paddingBlockEnd: {\n        value: \"{components.fieldcontrol.small.paddingBlockEnd.value}\"\n      },\n      paddingInlineStart: {\n        value: \"{components.fieldcontrol.small.paddingInlineStart.value}\"\n      },\n      paddingInlineEnd: {\n        value: \"{components.fieldcontrol.small.paddingInlineEnd.value}\"\n      }\n    },\n    large: {\n      fontSize: {\n        value: \"{components.fieldcontrol.large.fontSize.value}\"\n      },\n      paddingBlockStart: {\n        value: \"{components.fieldcontrol.large.paddingBlockStart.value}\"\n      },\n      paddingBlockEnd: {\n        value: \"{components.fieldcontrol.large.paddingBlockEnd.value}\"\n      },\n      paddingInlineStart: {\n        value: \"{components.fieldcontrol.large.paddingInlineStart.value}\"\n      },\n      paddingInlineEnd: {\n        value: \"{components.fieldcontrol.large.paddingInlineEnd.value}\"\n      }\n    }\n  };\n});\nvar wo = c((Bn, ko) => {\n  o();\n  ko.exports = {\n    backgroundColor: {\n      value: \"{colors.background.primary.value}\"\n    },\n    borderRadius: {\n      value: \"{radii.xs.value}\"\n    },\n    borderWidth: {\n      value: \"0\"\n    },\n    borderStyle: {\n      value: \"solid\"\n    },\n    borderColor: {\n      value: \"transparent\"\n    },\n    boxShadow: {\n      value: \"none\"\n    },\n    padding: {\n      value: \"{space.medium.value}\"\n    },\n    outlined: {\n      backgroundColor: {\n        value: \"{components.card.backgroundColor.value}\"\n      },\n      borderRadius: {\n        value: \"{radii.xs.value}\"\n      },\n      borderWidth: {\n        value: \"{borderWidths.small.value}\"\n      },\n      borderStyle: {\n        value: \"solid\"\n      },\n      borderColor: {\n        value: \"{colors.border.primary.value}\"\n      }\n    },\n    elevated: {\n      backgroundColor: {\n        value: \"{components.card.backgroundColor.value}\"\n      },\n      borderRadius: {\n        value: \"{radii.xs.value}\"\n      },\n      borderWidth: {\n        value: \"0\"\n      },\n      borderStyle: {\n        value: \"solid\"\n      },\n      borderColor: {\n        value: \"transparent\"\n      },\n      boxShadow: {\n        value: \"{shadows.medium.value}\"\n      }\n    }\n  };\n});\nvar Ao = c((Mn, To) => {\n  o();\n  To.exports = {\n    cursor: {\n      value: \"pointer\"\n    },\n    alignItems: {\n      value: \"center\"\n    },\n    _disabled: {\n      cursor: {\n        value: \"not-allowed\"\n      }\n    },\n    button: {\n      position: {\n        value: \"relative\"\n      },\n      alignItems: {\n        value: \"center\"\n      },\n      justifyContent: {\n        value: \"center\"\n      },\n      color: {\n        value: \"{colors.white.value}\"\n      },\n      before: {\n        width: {\n          value: \"100%\"\n        },\n        height: {\n          value: \"100%\"\n        },\n        borderWidth: {\n          value: \"{borderWidths.medium.value}\"\n        },\n        borderRadius: {\n          value: \"20%\"\n        },\n        borderStyle: {\n          value: \"solid\"\n        },\n        borderColor: {\n          value: \"{colors.border.primary.value}\"\n        }\n      },\n      _focus: {\n        outlineColor: {\n          value: \"{colors.transparent.value}\"\n        },\n        outlineStyle: {\n          value: \"solid\"\n        },\n        outlineWidth: {\n          value: \"{outlineWidths.medium.value}\"\n        },\n        outlineOffset: {\n          value: \"{outlineOffsets.medium.value}\"\n        },\n        borderColor: {\n          value: \"{colors.transparent.value}\"\n        },\n        boxShadow: {\n          value: {\n            offsetX: \"0px\",\n            offsetY: \"0px\",\n            blurRadius: \"0px\",\n            spreadRadius: \"2px\",\n            color: \"{colors.border.focus.value}\"\n          }\n        }\n      },\n      _disabled: {\n        borderColor: {\n          value: \"{colors.border.disabled.value}\"\n        }\n      },\n      _error: {\n        borderColor: {\n          value: \"{colors.border.error.value}\"\n        },\n        _focus: {\n          borderColor: {\n            value: \"{colors.transparent.value}\"\n          },\n          boxShadow: {\n            value: {\n              offsetX: \"0px\",\n              offsetY: \"0px\",\n              blurRadius: \"0px\",\n              spreadRadius: \"2px\",\n              color: \"{colors.border.error.value}\"\n            }\n          }\n        }\n      }\n    },\n    icon: {\n      backgroundColor: {\n        value: \"{colors.brand.primary.80.value}\"\n      },\n      borderRadius: {\n        value: \"20%\"\n      },\n      opacity: {\n        value: \"{opacities.0.value}\"\n      },\n      transform: {\n        value: \"scale(0)\"\n      },\n      transitionProperty: {\n        value: \"all\"\n      },\n      transitionDuration: {\n        value: \"{time.short.value}\"\n      },\n      transitionTimingFunction: {\n        value: \"ease-in-out\"\n      },\n      _checked: {\n        opacity: {\n          value: \"{opacities.100.value}\"\n        },\n        transform: {\n          value: \"scale(1)\"\n        },\n        _disabled: {\n          backgroundColor: {\n            value: \"{colors.background.disabled.value}\"\n          }\n        }\n      }\n    },\n    label: {\n      _disabled: {\n        color: {\n          value: \"{colors.font.disabled.value}\"\n        }\n      }\n    }\n  };\n});\nvar Do = c((Gn, Eo) => {\n  o();\n  Eo.exports = {\n    alignItems: {\n      value: \"flex-start\"\n    },\n    alignContent: {\n      value: \"center\"\n    },\n    flexDirection: {\n      value: \"column\"\n    },\n    justifyContent: {\n      value: \"center\"\n    }\n  };\n});\nvar Po = c((Ln, Io) => {\n  o();\n  Io.exports = {\n    height: {\n      value: \"100%\"\n    }\n  };\n});\nvar Wo = c((Hn, Ro) => {\n  o();\n  Ro.exports = {\n    borderStyle: {\n      value: \"solid\"\n    },\n    borderColor: {\n      value: \"{colors.border.primary.value}\"\n    },\n    borderWidth: {\n      value: \"{borderWidths.medium.value}\"\n    },\n    small: {\n      borderWidth: {\n        value: \"{borderWidths.small.value}\"\n      }\n    },\n    large: {\n      borderWidth: {\n        value: \"{borderWidths.large.value}\"\n      }\n    },\n    opacity: {\n      value: \"{opacities.60.value}\"\n    }\n  };\n});\n\nvar _o = c((qn, Vo) => {\n  o();\n  Vo.exports = {\n    display: {\n      value: \"block\"\n    },\n    backgroundColor: {\n      value: \"{colors.white.value}\"\n    },\n    borderRadius: {\n      value: \"{radii.medium.value}\"\n    },\n    boxShadow: {\n      value: \"{shadows.large.value}\"\n    },\n    width: {\n      value: \"100%\"\n    },\n    item: {\n      marginTop: {\n        value: \"1px\"\n      },\n      boxShadow: {\n        value: \"{shadows.small.value}\"\n      },\n      borderBottomLeftRadius: {\n        value: \"{radii.medium.value}\"\n      },\n      borderBottomRightRadius: {\n        value: \"{radii.medium.value}\"\n      },\n      borderTopLeftRadius: {\n        value: \"{radii.medium.value}\"\n      },\n      borderTopRightRadius: {\n        value: \"{radii.medium.value}\"\n      },\n      borderStartStartRadius: {\n        value: \"{radii.medium.value}\"\n      },\n      borderStartEndRadius: {\n        value: \"{radii.medium.value}\"\n      },\n      borderEndStartRadius: {\n        value: \"{radii.medium.value}\"\n      },\n      borderEndEndRadius: {\n        value: \"{radii.medium.value}\"\n      },\n      _focus: {\n        boxShadow: {\n          value: {\n            offsetX: \"0\",\n            offsetY: \"0\",\n            blurRadius: \"0\",\n            spreadRadius: \"2px\",\n            color: \"{colors.border.focus.value}\"\n          }\n        }\n      }\n    },\n    header: {\n      boxShadow: {\n        value: {\n          offsetX: \"0\",\n          offsetY: \"1px\",\n          blurRadius: \"0\",\n          color: \"{colors.overlay.20.value}\"\n        }\n      }\n    },\n    trigger: {\n      minHeight: {\n        value: \"3rem\"\n      },\n      paddingInlineStart: {\n        value: \"{space.large.value}\"\n      },\n      paddingInlineEnd: {\n        value: \"{space.large.value}\"\n      },\n      alignItems: {\n        value: \"center\"\n      },\n      justifyContent: {\n        value: \"space-between\"\n      },\n      _hover: {\n        backgroundColor: {\n          value: \"{colors.overlay.10.value}\"\n        }\n      }\n    },\n    content: {\n      paddingInlineStart: {\n        value: \"{space.large.value}\"\n      },\n      paddingInlineEnd: {\n        value: \"{space.large.value}\"\n      },\n      text: {\n        color: {\n          value: \"{colors.font.secondary.value}\"\n        },\n        paddingBlockStart: {\n          value: \"{space.medium.value}\"\n        },\n        paddingBlockEnd: {\n          value: \"{space.medium.value}\"\n        }\n      },\n      _open: {\n        animationDuration: {\n          value: \"{time.medium.value}\"\n        },\n        animationTimingFunction: {\n          value: \"cubic-bezier(0.87, 0, 0.13, 1)\"\n        }\n      },\n      _closed: {\n        animationDuration: {\n          value: \"{time.medium.value}\"\n        },\n        animationTimingFunction: {\n          value: \"cubic-bezier(0.87, 0, 0.13, 1)\"\n        }\n      }\n    },\n    icon: {\n      transitionDuration: {\n        value: \"{time.medium.value}\"\n      },\n      transitionTimingFunction: {\n        value: \"cubic-bezier(0.87, 0, 0.13, 1)\"\n      }\n    }\n  };\n});\n\nvar No = c((jn, Uo) => {\n  o();\n  Uo.exports = {\n    gap: {\n      value: \"{space.xs.value}\"\n    },\n    fontSize: {\n      value: \"{fontSizes.medium.value}\"\n    },\n    small: {\n      gap: {\n        value: \"{space.xxxs.value}\"\n      },\n      fontSize: {\n        value: \"{fontSizes.small.value}\"\n      }\n    },\n    large: {\n      gap: {\n        value: \"{space.small.value}\"\n      },\n      fontSize: {\n        value: \"{fontSizes.large.value}\"\n      }\n    },\n    label: {\n      color: {\n        value: \"{colors.font.secondary.value}\"\n      }\n    }\n  };\n});\nvar Fo = c(($n, Oo) => {\n  o();\n  Oo.exports = {\n    borderStyle: {\n      value: \"solid\"\n    },\n    borderColor: {\n      value: \"{colors.border.primary.value}\"\n    },\n    borderWidth: {\n      value: \"{borderWidths.small.value}\"\n    },\n    borderRadius: {\n      value: \"{radii.small.value}\"\n    },\n    color: {\n      value: \"{colors.font.primary.value}\"\n    },\n    paddingBlockStart: {\n      value: \"{space.xs.value}\"\n    },\n    paddingBlockEnd: {\n      value: \"{space.xs.value}\"\n    },\n    paddingInlineStart: {\n      value: \"{space.medium.value}\"\n    },\n    paddingInlineEnd: {\n      value: \"{space.medium.value}\"\n    },\n    fontSize: {\n      value: \"{components.field.fontSize.value}\"\n    },\n    lineHeight: {\n      value: \"{lineHeights.medium.value}\"\n    },\n    transitionDuration: {\n      value: \"{time.medium.value}\"\n    },\n    outlineColor: {\n      value: \"{colors.transparent.value}\"\n    },\n    outlineStyle: {\n      value: \"solid\"\n    },\n    outlineWidth: {\n      value: \"{outlineWidths.medium.value}\"\n    },\n    outlineOffset: {\n      value: \"{outlineOffsets.medium.value}\"\n    },\n    small: {\n      fontSize: {\n        value: \"{components.field.small.fontSize.value}\"\n      },\n      paddingBlockStart: {\n        value: \"{space.xs.value}\"\n      },\n      paddingBlockEnd: {\n        value: \"{space.xs.value}\"\n      },\n      paddingInlineStart: {\n        value: \"{space.small.value}\"\n      },\n      paddingInlineEnd: {\n        value: \"{space.small.value}\"\n      }\n    },\n    large: {\n      fontSize: {\n        value: \"{components.field.large.fontSize.value}\"\n      },\n      paddingBlockStart: {\n        value: \"{space.xs.value}\"\n      },\n      paddingBlockEnd: {\n        value: \"{space.xs.value}\"\n      },\n      paddingInlineStart: {\n        value: \"{space.medium.value}\"\n      },\n      paddingInlineEnd: {\n        value: \"{space.medium.value}\"\n      }\n    },\n    quiet: {\n      borderStyle: {\n        value: \"none\"\n      },\n      borderBlockEnd: {\n        value: \"{borderWidths.small.value} solid {colors.border.primary.value}\"\n      },\n      borderInlineStart: {\n        value: \"none\"\n      },\n      borderInlineEnd: {\n        value: \"none\"\n      },\n      borderBlockStart: {\n        value: \"none\"\n      },\n      borderRadius: {\n        value: \"0\"\n      },\n      _focus: {\n        borderBlockEndColor: {\n          value: \"{colors.border.focus.value}\"\n        },\n        boxShadow: {\n          value: {\n            offsetX: \"0px\",\n            offsetY: \"1px\",\n            color: \"{colors.border.focus.value}\"\n          }\n        }\n      },\n      _error: {\n        borderBlockEndColor: {\n          value: \"{colors.border.error.value}\"\n        },\n        _focus: {\n          boxShadow: {\n            value: {\n              offsetX: \"0px\",\n              offsetY: \"1px\",\n              color: \"{colors.border.error.value}\"\n            }\n          }\n        }\n      }\n    },\n    _focus: {\n      borderColor: {\n        value: \"{colors.border.focus.value}\"\n      },\n      boxShadow: {\n        value: {\n          offsetX: \"0px\",\n          offsetY: \"0px\",\n          blurRadius: \"0px\",\n          spreadRadius: \"1px\",\n          color: \"{colors.border.focus.value}\"\n        }\n      }\n    },\n    _disabled: {\n      color: {\n        value: \"{colors.font.disabled.value}\"\n      },\n      cursor: {\n        value: \"not-allowed\"\n      },\n      borderColor: {\n        value: \"{colors.transparent.value}\"\n      },\n      backgroundColor: {\n        value: \"{colors.background.disabled.value}\"\n      }\n    },\n    _error: {\n      borderColor: {\n        value: \"{colors.border.error.value}\"\n      },\n      _focus: {\n        boxShadow: {\n          value: {\n            offsetX: \"0px\",\n            offsetY: \"0px\",\n            blurRadius: \"0px\",\n            spreadRadius: \"1px\",\n            color: \"{colors.border.error.value}\"\n          }\n        }\n      }\n    }\n  };\n});\nvar Bo = c((Kn, zo) => {\n  o();\n  zo.exports = {\n    gap: {\n      value: 0\n    },\n    vertical: {\n      alignItems: {\n        value: \"center\"\n      }\n    },\n    outer: {\n      alignItems: {\n        value: \"center\"\n      }\n    }\n  };\n});\nvar Go = c((Yn, Mo) => {\n  o();\n  Mo.exports = {\n    error: {\n      color: {\n        value: \"{colors.font.error.value}\"\n      },\n      fontSize: {\n        value: \"{fontSizes.small.value}\"\n      }\n    },\n    description: {\n      color: {\n        value: \"{colors.font.secondary.value}\"\n      },\n      fontStyle: {\n        value: \"italic\"\n      },\n      fontSize: {\n        value: \"{fontSizes.small.value}\"\n      }\n    }\n  };\n});\nvar Ho = c((Xn, Lo) => {\n  o();\n  Lo.exports = {\n    gap: {\n      value: \"{space.medium.value}\"\n    },\n    justifyContent: {\n      value: \"normal\"\n    },\n    alignItems: {\n      value: \"stretch\"\n    },\n    alignContent: {\n      value: \"normal\"\n    },\n    flexWrap: {\n      value: \"nowrap\"\n    }\n  };\n});\nvar jo = c((Zn, qo) => {\n  o();\n  qo.exports = {\n    color: {\n      value: \"{colors.font.primary.value}\"\n    },\n    lineHeight: {\n      value: 1.25\n    },\n    1: {\n      fontSize: {\n        value: \"{fontSizes.xxxxl.value}\"\n      },\n      fontWeight: {\n        value: \"{fontWeights.light.value}\"\n      }\n    },\n    2: {\n      fontSize: {\n        value: \"{fontSizes.xxxl.value}\"\n      },\n      fontWeight: {\n        value: \"{fontWeights.light.value}\"\n      }\n    },\n    3: {\n      fontSize: {\n        value: \"{fontSizes.xxl.value}\"\n      },\n      fontWeight: {\n        value: \"{fontWeights.normal.value}\"\n      }\n    },\n    4: {\n      fontSize: {\n        value: \"{fontSizes.xl.value}\"\n      },\n      fontWeight: {\n        value: \"{fontWeights.medium.value}\"\n      }\n    },\n    5: {\n      fontSize: {\n        value: \"{fontSizes.large.value}\"\n      },\n      fontWeight: {\n        value: \"{fontWeights.semibold.value}\"\n      }\n    },\n    6: {\n      fontSize: {\n        value: \"{fontSizes.medium.value}\"\n      },\n      fontWeight: {\n        value: \"{fontWeights.bold.value}\"\n      }\n    }\n  };\n});\nvar Ko = c((Qn, $o) => {\n  o();\n  $o.exports = {\n    lineHeight: {\n      value: 1\n    },\n    height: {\n      value: \"1em\"\n    }\n  };\n});\nvar Xo = c((Jn, Yo) => {\n  o();\n  Yo.exports = {\n    maxWidth: {\n      value: \"100%\"\n    },\n    height: {\n      value: \"auto\"\n    },\n    objectFit: {\n      value: \"initial\"\n    },\n    objectPosition: {\n      value: \"initial\"\n    }\n  };\n});\nvar Qo = c((ei, Zo) => {\n  o();\n  Zo.exports = {\n    active: {\n      color: {\n        value: \"{colors.font.active.value}\"\n      }\n    },\n    color: {\n      value: \"{colors.font.interactive.value}\"\n    },\n    focus: {\n      color: {\n        value: \"{colors.font.focus.value}\"\n      }\n    },\n    hover: {\n      color: {\n        value: \"{colors.font.hover.value}\"\n      }\n    },\n    large: {\n      fontSize: {\n        value: \"{fontSizes.large.value}\"\n      }\n    },\n    small: {\n      fontSize: {\n        value: \"{fontSizes.small.value}\"\n      }\n    },\n    visited: {\n      color: {\n        value: \"{colors.font.interactive.value}\"\n      }\n    }\n  };\n});\nvar er = c((oi, Jo) => {\n  o();\n  Jo.exports = {\n    width: {\n      value: \"{fontSizes.xxl.value}\"\n    },\n    height: {\n      value: \"{fontSizes.xxl.value}\"\n    },\n    strokeEmpty: {\n      value: \"{colors.neutral.20.value}\"\n    },\n    strokeFilled: {\n      value: \"{colors.brand.primary.80.value}\"\n    },\n    strokeLinecap: {\n      value: \"round\"\n    },\n    animationDuration: {\n      value: \"1s\"\n    },\n    small: {\n      width: {\n        value: \"{fontSizes.medium.value}\"\n      },\n      height: {\n        value: \"{fontSizes.medium.value}\"\n      }\n    },\n    large: {\n      width: {\n        value: \"{fontSizes.xxxl.value}\"\n      },\n      height: {\n        value: \"{fontSizes.xxxl.value}\"\n      }\n    },\n    linear: {\n      width: {\n        value: \"100%\"\n      },\n      minWidth: {\n        value: \"5rem\"\n      },\n      height: {\n        value: \"{fontSizes.xxs.value}\"\n      },\n      strokeWidth: {\n        value: \"{fontSizes.xxs.value}\"\n      },\n      strokeFilled: {\n        value: \"{colors.brand.primary.80.value}\"\n      },\n      strokeEmpty: {\n        value: \"{colors.neutral.20.value}\"\n      },\n      strokeLinecap: {\n        value: \"round\"\n      },\n      animationDuration: {\n        value: \"1s\"\n      },\n      small: {\n        height: {\n          value: \"{fontSizes.xxxs.value}\"\n        },\n        strokeWidth: {\n          value: \"{fontSizes.xxxs.value}\"\n        }\n      },\n      large: {\n        height: {\n          value: \"{fontSizes.xs.value}\"\n        },\n        strokeWidth: {\n          value: \"{fontSizes.xs.value}\"\n        }\n      }\n    }\n  };\n});\nvar rr = c((ri, or) => {\n  o();\n  or.exports = {\n    backgroundColor: {\n      value: \"{colors.white.value}\"\n    },\n    borderRadius: {\n      value: \"{radii.medium.value}\"\n    },\n    boxShadow: {\n      value: \"{shadows.large.value}\"\n    },\n    flexDirection: {\n      value: \"column\"\n    },\n    gap: {\n      value: 0\n    },\n    maxWidth: {\n      value: \"30rem\"\n    },\n    minWidth: {\n      value: \"14rem\"\n    },\n    small: {\n      width: {\n        value: \"{fontSizes.medium.value}\"\n      },\n      height: {\n        value: \"{fontSizes.medium.value}\"\n      }\n    },\n    large: {\n      width: {\n        value: \"{fontSizes.xxxl.value}\"\n      },\n      height: {\n        value: \"{fontSizes.xxxl.value}\"\n      }\n    },\n    item: {\n      minHeight: {\n        value: \"2.5rem\"\n      },\n      paddingInlineStart: {\n        value: \"{space.medium.value}\"\n      },\n      paddingInlineEnd: {\n        value: \"{space.medium.value}\"\n      }\n    }\n  };\n});\nvar tr = c((ai, ar) => {\n  o();\n  ar.exports = {\n    current: {\n      alignItems: {\n        value: \"center\"\n      },\n      justifyContent: {\n        value: \"center\"\n      },\n      color: {\n        value: \"{colors.white.value}\"\n      },\n      fontSize: {\n        value: \"{fontSizes.small.value}\"\n      },\n      backgroundColor: {\n        value: \"{colors.overlay.40.value}\"\n      }\n    },\n    button: {\n      color: {\n        value: \"{colors.font.primary.value}\"\n      },\n      paddingInlineStart: {\n        value: \"{space.xxs.value}\"\n      },\n      paddingInlineEnd: {\n        value: \"{space.xxs.value}\"\n      },\n      transitionProperty: {\n        value: \"background-color\"\n      },\n      transitionDuration: {\n        value: \"{time.medium.value}\"\n      },\n      hover: {\n        backgroundColor: {\n          value: \"{colors.overlay.10.value}\"\n        },\n        color: {\n          value: \"{colors.font.primary.value}\"\n        }\n      },\n      disabled: {\n        color: {\n          value: \"{colors.font.disabled.value}\"\n        }\n      }\n    },\n    ellipsis: {\n      alignItems: {\n        value: \"baseline\"\n      },\n      justifyContent: {\n        value: \"center\"\n      },\n      paddingInlineStart: {\n        value: \"{space.xs.value}\"\n      },\n      paddingInlineEnd: {\n        value: \"{space.xs.value}\"\n      }\n    },\n    itemContainer: {\n      marginLeft: {\n        value: \"{space.xxxs.value}\"\n      },\n      marginRight: {\n        value: \"{space.xxxs.value}\"\n      }\n    },\n    itemShared: {\n      height: {\n        value: \"{fontSizes.xxl.value}\"\n      },\n      minWidth: {\n        value: \"{fontSizes.xxl.value}\"\n      },\n      borderRadius: {\n        value: \"{fontSizes.medium.value}\"\n      }\n    }\n  };\n});\nvar ir = c((ti, nr) => {\n  o();\n  nr.exports = {};\n});\nvar lr = c((ni, sr) => {\n  o();\n  sr.exports = {\n    borderRadius: {\n      value: \"{radii.small.value}\"\n    },\n    transitionDuration: {\n      value: \"{time.long.value}\"\n    },\n    startColor: {\n      value: \"{colors.background.secondary.value}\"\n    },\n    endColor: {\n      value: \"{colors.background.tertiary.value}\"\n    },\n    small: {\n      height: {\n        value: \"{space.small.value}\"\n      }\n    },\n    default: {\n      height: {\n        value: \"{space.medium.value}\"\n      }\n    },\n    large: {\n      height: {\n        value: \"{space.large.value}\"\n      }\n    }\n  };\n});\nvar dr = c((ii, ur) => {\n  o();\n  ur.exports = {\n    alignItems: {\n      value: \"center\"\n    },\n    justifyContent: {\n      value: \"flex-start\"\n    },\n    gap: {\n      value: \"inherit\"\n    },\n    _disabled: {\n      cursor: {\n        value: \"not-allowed\"\n      }\n    },\n    button: {\n      alignItems: {\n        value: \"center\"\n      },\n      justifyContent: {\n        value: \"center\"\n      },\n      width: {\n        value: \"{fontSizes.medium.value}\"\n      },\n      height: {\n        value: \"{fontSizes.medium.value}\"\n      },\n      boxSizing: {\n        value: \"border-box\"\n      },\n      borderWidth: {\n        value: \"{borderWidths.medium.value}\"\n      },\n      borderStyle: {\n        value: \"solid\"\n      },\n      borderRadius: {\n        value: \"50%\"\n      },\n      borderColor: {\n        value: \"{colors.border.primary.value}\"\n      },\n      color: {\n        value: \"{colors.white.value}\"\n      },\n      backgroundColor: {\n        value: \"{colors.white.value}\"\n      },\n      transitionProperty: {\n        value: \"all\"\n      },\n      transitionDuration: {\n        value: \"{time.medium.value}\"\n      },\n      outlineColor: {\n        value: \"{colors.transparent.value}\"\n      },\n      outlineStyle: {\n        value: \"solid\"\n      },\n      outlineWidth: {\n        value: \"{outlineWidths.medium.value}\"\n      },\n      outlineOffset: {\n        value: \"{outlineOffsets.medium.value}\"\n      },\n      padding: {\n        value: \"{borderWidths.medium.value}\"\n      },\n      small: {\n        width: {\n          value: \"{fontSizes.small.value}\"\n        },\n        height: {\n          value: \"{fontSizes.small.value}\"\n        }\n      },\n      large: {\n        width: {\n          value: \"{fontSizes.large.value}\"\n        },\n        height: {\n          value: \"{fontSizes.large.value}\"\n        }\n      },\n      _checked: {\n        color: {\n          value: \"{colors.brand.primary.80.value}\"\n        },\n        _disabled: {\n          color: {\n            value: \"{colors.background.disabled.value}\"\n          }\n        }\n      },\n      _focus: {\n        borderColor: {\n          value: \"{colors.border.focus.value}\"\n        },\n        boxShadow: {\n          value: \"{components.fieldcontrol._focus.boxShadow.value}\"\n        }\n      },\n      _error: {\n        borderColor: {\n          value: \"{colors.border.error.value}\"\n        },\n        _focus: {\n          boxShadow: {\n            value: \"{components.fieldcontrol._error._focus.boxShadow.value}\"\n          }\n        }\n      },\n      _disabled: {\n        borderColor: {\n          value: \"{colors.border.disabled.value}\"\n        },\n        backgroundColor: {\n          value: \"{colors.background.primary.value}\"\n        }\n      }\n    },\n    label: {\n      _disabled: {\n        color: {\n          value: \"{colors.font.disabled.value}\"\n        }\n      }\n    }\n  };\n});\nvar mr = c((si, cr) => {\n  o();\n  cr.exports = {\n    large: {\n      size: {\n        value: \"{fontSizes.xxxl.value}\"\n      }\n    },\n    default: {\n      size: {\n        value: \"{fontSizes.xl.value}\"\n      }\n    },\n    small: {\n      size: {\n        value: \"{fontSizes.small.value}\"\n      }\n    },\n    filled: {\n      color: {\n        value: \"{colors.brand.secondary.80.value}\"\n      }\n    },\n    empty: {\n      color: {\n        value: \"{colors.background.tertiary.value}\"\n      }\n    }\n  };\n});\nvar pr = c((li, vr) => {\n  o();\n  vr.exports = {\n    paddingInlineEnd: {\n      value: \"{space.xxl.value}\"\n    },\n    wrapper: {\n      flex: {\n        value: \"1\"\n      },\n      display: {\n        value: \"block\"\n      },\n      position: {\n        value: \"relative\"\n      },\n      cursor: {\n        value: \"pointer\"\n      }\n    },\n    iconWrapper: {\n      alignItems: {\n        value: \"center\"\n      },\n      position: {\n        value: \"absolute\"\n      },\n      top: {\n        value: \"50%\"\n      },\n      right: {\n        value: \"{space.medium.value}\"\n      },\n      transform: {\n        value: \"translateY(-50%)\"\n      },\n      pointerEvents: {\n        value: \"none\"\n      }\n    },\n    option: {\n      backgroundColor: {\n        value: \"{colors.background.primary.value}\"\n      }\n    },\n    whiteSpace: {\n      value: \"nowrap\"\n    },\n    minWidth: {\n      value: \"6.5rem\"\n    },\n    small: {\n      minWidth: {\n        value: \"5.5rem\"\n      }\n    },\n    large: {\n      minWidth: {\n        value: \"7.5rem\"\n      }\n    }\n  };\n});\nvar fr = c((ui, gr) => {\n  o();\n  gr.exports = {\n    flexDirection: {\n      value: \"column\"\n    }\n  };\n});\nvar br = c((di, hr) => {\n  o();\n  hr.exports = {\n    paddingBlock: {\n      value: \"{space.xs.value}\"\n    },\n    track: {\n      backgroundColor: {\n        value: \"{colors.background.tertiary.value}\"\n      },\n      borderRadius: {\n        value: \"9999px\"\n      },\n      height: {\n        value: \"0.375rem\"\n      },\n      minWidth: {\n        value: \"10rem\"\n      }\n    },\n    range: {\n      backgroundColor: {\n        value: \"{colors.brand.primary.80.value}\"\n      },\n      borderRadius: {\n        value: \"9999px\"\n      },\n      _disabled: {\n        backgroundColor: {\n          value: \"{colors.background.disabled.value}\"\n        }\n      }\n    },\n    thumb: {\n      width: {\n        value: \"1.25rem\"\n      },\n      height: {\n        value: \"1.25rem\"\n      },\n      backgroundColor: {\n        value: \"{colors.background.primary.value}\"\n      },\n      boxShadow: {\n        value: \"{shadows.medium.value}\"\n      },\n      borderRadius: {\n        value: \"50%\"\n      },\n      borderWidth: {\n        value: \"{borderWidths.small.value}\"\n      },\n      borderColor: {\n        value: \"{colors.border.primary.value}\"\n      },\n      borderStyle: {\n        value: \"solid\"\n      },\n      _disabled: {\n        backgroundColor: {\n          value: \"{colors.background.disabled.value}\"\n        },\n        borderColor: {\n          value: \"transparent\"\n        },\n        boxShadow: {\n          value: \"none\"\n        }\n      },\n      _hover: {\n        backgroundColor: {\n          value: \"{colors.background.primary.value}\"\n        },\n        borderColor: {\n          value: \"{colors.border.focus.value}\"\n        }\n      },\n      _focus: {\n        boxShadow: {\n          value: {\n            offsetX: \"0\",\n            offsetY: \"0\",\n            blurRadius: \"0\",\n            spreadRadius: \"3px\",\n            color: \"{colors.border.focus.value}\"\n          }\n        }\n      }\n    },\n    small: {\n      track: {\n        height: {\n          value: \"0.25rem\"\n        }\n      },\n      thumb: {\n        width: {\n          value: \"1rem\"\n        },\n        height: {\n          value: \"1rem\"\n        }\n      }\n    },\n    large: {\n      track: {\n        height: {\n          value: \"0.625rem\"\n        }\n      },\n      thumb: {\n        width: {\n          value: \"1.5rem\"\n        },\n        height: {\n          value: \"1.5rem\"\n        }\n      }\n    }\n  };\n});\nvar yr = c((ci, Sr) => {\n  o();\n  Sr.exports = {\n    flexDirection: {\n      value: \"column\"\n    },\n    input: {\n      textAlign: {\n        value: \"center\"\n      }\n    }\n  };\n});\nvar xr = c((mi, Cr) => {\n  o();\n  Cr.exports = {\n    disabled: {\n      opacity: {\n        value: \"{opacities.60.value}\"\n      }\n    },\n    focused: {\n      shadow: {\n        value: \"{shadows.small.value}\"\n      }\n    },\n    label: {\n      padding: {\n        value: \"{space.xs.value}\"\n      }\n    },\n    large: {\n      font: {\n        size: {\n          value: \"{fontSizes.large.value}\"\n        }\n      }\n    },\n    small: {\n      font: {\n        size: {\n          value: \"{fontSizes.small.value}\"\n        }\n      }\n    },\n    thumb: {\n      backgroundColor: {\n        value: \"{colors.background.primary.value}\"\n      },\n      borderColor: {\n        value: \"{colors.border.tertiary.value}\"\n      },\n      borderRadius: {\n        value: \"{radii.xxxl.value}\"\n      },\n      checked: {\n        transform: {\n          value: \"{transforms.slideX.medium.value}\"\n        }\n      },\n      transition: {\n        duration: {\n          value: \"{time.medium.value}\"\n        }\n      },\n      width: {\n        value: \"{space.relative.medium.value}\"\n      }\n    },\n    track: {\n      backgroundColor: {\n        value: \"{colors.background.tertiary.value}\"\n      },\n      borderRadius: {\n        value: \"{radii.xxxl.value}\"\n      },\n      checked: {\n        backgroundColor: {\n          value: \"{colors.brand.primary.60.value}\"\n        }\n      },\n      height: {\n        value: \"{space.relative.medium.value}\"\n      },\n      padding: {\n        value: \"{outlineWidths.medium.value}\"\n      },\n      transition: {\n        duration: {\n          value: \"{time.short.value}\"\n        }\n      },\n      width: {\n        value: \"{space.relative.xl.value}\"\n      }\n    }\n  };\n});\nvar wr = c((vi, kr) => {\n  o();\n  kr.exports = {\n    borderCollapse: {\n      value: \"collapse\"\n    },\n    display: {\n      value: \"table\"\n    },\n    width: {\n      value: \"100%\"\n    },\n    head: {\n      display: {\n        value: \"table-header-group\"\n      },\n      verticalAlign: {\n        value: \"middle\"\n      }\n    },\n    body: {\n      display: {\n        value: \"table-row-group\"\n      },\n      verticalAlign: {\n        value: \"middle\"\n      }\n    },\n    foot: {\n      display: {\n        value: \"table-footer-group\"\n      },\n      verticalAlign: {\n        value: \"middle\"\n      }\n    },\n    row: {\n      display: {\n        value: \"table-row\"\n      },\n      verticalAlign: {\n        value: \"middle\"\n      },\n      hover: {\n        backgroundColor: {\n          value: \"{colors.background.tertiary.value}\"\n        }\n      },\n      striped: {\n        backgroundColor: {\n          value: \"{colors.background.secondary.value}\"\n        }\n      }\n    },\n    header: {\n      borderColor: {\n        value: \"{colors.border.tertiary.value}\"\n      },\n      borderStyle: {\n        value: \"solid\"\n      },\n      borderWidth: {\n        value: \"{borderWidths.small.value}\"\n      },\n      color: {\n        value: \"{colors.font.primary.value}\"\n      },\n      display: {\n        value: \"table-cell\"\n      },\n      fontSize: {\n        value: \"{fontSizes.medium.value}\"\n      },\n      fontWeight: {\n        value: \"{fontWeights.bold.value}\"\n      },\n      padding: {\n        value: \"{space.medium.value}\"\n      },\n      verticalAlign: {\n        value: \"middle\"\n      },\n      large: {\n        fontSize: {\n          value: \"{fontSizes.large.value}\"\n        },\n        padding: {\n          value: \"{space.large.value}\"\n        }\n      },\n      small: {\n        fontSize: {\n          value: \"{fontSizes.small.value}\"\n        },\n        padding: {\n          value: \"{space.xs.value}\"\n        }\n      }\n    },\n    data: {\n      borderColor: {\n        value: \"{colors.border.tertiary.value}\"\n      },\n      borderStyle: {\n        value: \"solid\"\n      },\n      borderWidth: {\n        value: \"{borderWidths.small.value}\"\n      },\n      color: {\n        value: \"{colors.font.primary.value}\"\n      },\n      display: {\n        value: \"table-cell\"\n      },\n      fontSize: {\n        value: \"{fontSizes.medium.value}\"\n      },\n      fontWeight: {\n        value: \"{fontWeights.normal.value}\"\n      },\n      padding: {\n        value: \"{space.medium.value}\"\n      },\n      verticalAlign: {\n        value: \"middle\"\n      },\n      large: {\n        fontSize: {\n          value: \"{fontSizes.large.value}\"\n        },\n        padding: {\n          value: \"{space.large.value}\"\n        }\n      },\n      small: {\n        fontSize: {\n          value: \"{fontSizes.small.value}\"\n        },\n        padding: {\n          value: \"{space.xs.value}\"\n        }\n      }\n    },\n    caption: {\n      captionSide: {\n        value: \"bottom\"\n      },\n      color: {\n        value: \"{colors.font.primary.value}\"\n      },\n      display: {\n        value: \"table-caption\"\n      },\n      fontSize: {\n        value: \"{fontSizes.medium.value}\"\n      },\n      textAlign: {\n        value: \"center\"\n      },\n      wordBreak: {\n        value: \"break-all\"\n      },\n      large: {\n        fontSize: {\n          value: \"{fontSizes.large.value}\"\n        }\n      },\n      small: {\n        fontSize: {\n          value: \"{fontSizes.small.value}\"\n        }\n      }\n    }\n  };\n});\nvar Ar = c((pi, Tr) => {\n  o();\n  Tr.exports = {\n    backgroundColor: {\n      value: \"transparent\"\n    },\n    borderColor: {\n      value: \"{colors.border.secondary.value}\"\n    },\n    borderStyle: {\n      value: \"solid\"\n    },\n    borderWidth: {\n      value: \"{borderWidths.medium.value}\"\n    },\n    gap: {\n      value: \"0\"\n    },\n    item: {\n      backgroundColor: {\n        value: \"transparent\"\n      },\n      borderColor: {\n        value: \"{colors.border.secondary.value}\"\n      },\n      borderStyle: {\n        value: \"solid\"\n      },\n      borderWidth: {\n        value: \"{borderWidths.medium.value}\"\n      },\n      color: {\n        value: \"{colors.font.secondary.value}\"\n      },\n      fontSize: {\n        value: \"{fontSizes.medium.value}\"\n      },\n      fontWeight: {\n        value: \"{fontWeights.bold.value}\"\n      },\n      paddingVertical: {\n        value: \"{space.small.value}\"\n      },\n      paddingHorizontal: {\n        value: \"{space.medium.value}\"\n      },\n      textAlign: {\n        value: \"center\"\n      },\n      transitionDuration: {\n        value: \"{time.medium.value}\"\n      },\n      _hover: {\n        color: {\n          value: \"{colors.font.hover.value}\"\n        }\n      },\n      _focus: {\n        color: {\n          value: \"{colors.font.focus.value}\"\n        }\n      },\n      _active: {\n        color: {\n          value: \"{colors.font.interactive.value}\"\n        },\n        borderColor: {\n          value: \"{colors.font.interactive.value}\"\n        },\n        backgroundColor: {\n          value: \"transparent\"\n        }\n      },\n      _disabled: {\n        color: {\n          value: \"{colors.font.disabled.value}\"\n        },\n        backgroundColor: {\n          value: \"transparent\"\n        },\n        borderColor: {\n          value: \"{colors.border.tertiary.value}\"\n        }\n      }\n    }\n  };\n});\nvar Dr = c((gi, Er) => {\n  o();\n  Er.exports = {\n    color: {\n      value: \"{colors.font.primary.value}\"\n    },\n    primary: {\n      color: {\n        value: \"{colors.font.primary.value}\"\n      }\n    },\n    secondary: {\n      color: {\n        value: \"{colors.font.secondary.value}\"\n      }\n    },\n    tertiary: {\n      color: {\n        value: \"{colors.font.tertiary.value}\"\n      }\n    },\n    error: {\n      color: {\n        value: \"{colors.font.error.value}\"\n      }\n    },\n    warning: {\n      color: {\n        value: \"{colors.font.warning.value}\"\n      }\n    },\n    success: {\n      color: {\n        value: \"{colors.font.success.value}\"\n      }\n    },\n    info: {\n      color: {\n        value: \"{colors.font.info.value}\"\n      }\n    }\n  };\n});\nvar Pr = c((fi, Ir) => {\n  o();\n  Ir.exports = {\n    borderColor: {\n      value: \"{colors.border.primary.value}\"\n    },\n    color: {\n      value: \"{colors.overlay.50.value}\"\n    },\n    _hover: {\n      backgroundColor: {\n        value: \"{colors.overlay.10.value}\"\n      }\n    },\n    _focus: {\n      borderColor: {\n        value: \"{colors.border.focus.value}\"\n      },\n      color: {\n        value: \"{colors.overlay.50.value}\"\n      }\n    },\n    _active: {\n      backgroundColor: {\n        value: \"{colors.transparent.value}\"\n      }\n    },\n    _disabled: {\n      backgroundColor: {\n        value: \"{colors.transparent.value}\"\n      },\n      borderColor: {\n        value: \"{colors.border.secondary.value}\"\n      },\n      color: {\n        value: \"{colors.font.disabled.value}\"\n      }\n    },\n    _pressed: {\n      color: {\n        value: \"{colors.overlay.90.value}\"\n      },\n      backgroundColor: {\n        value: \"{colors.overlay.20.value}\"\n      },\n      _hover: {\n        backgroundColor: {\n          value: \"{colors.overlay.30.value}\"\n        }\n      }\n    },\n    primary: {\n      backgroundColor: {\n        value: \"{colors.transparent.value}\"\n      },\n      borderWidth: {\n        value: \"{borderWidths.small.value}\"\n      },\n      _focus: {\n        borderColor: {\n          value: \"{colors.border.focus.value}\"\n        },\n        backgroundColor: {\n          value: \"{colors.transparent.value}\"\n        },\n        boxShadow: {\n          value: \"{components.fieldcontrol._focus.boxShadow.value}\"\n        },\n        color: {\n          value: \"{colors.overlay.50.value}\"\n        }\n      },\n      _hover: {\n        backgroundColor: {\n          value: \"{colors.overlay.10.value}\"\n        },\n        color: {\n          value: \"{colors.overlay.50.value}\"\n        }\n      },\n      _disabled: {\n        backgroundColor: {\n          value: \"{colors.background.tertiary.value}\"\n        },\n        color: {\n          value: \"{colors.font.disabled.value}\"\n        }\n      },\n      _pressed: {\n        backgroundColor: {\n          value: \"{colors.brand.primary.80.value}\"\n        },\n        borderColor: {\n          value: \"{colors.brand.primary.80.value}\"\n        },\n        color: {\n          value: \"{colors.white.value}\"\n        },\n        _focus: {\n          backgroundColor: {\n            value: \"{colors.border.focus.value}\"\n          },\n          borderColor: {\n            value: \"{colors.border.focus.value}\"\n          }\n        },\n        _hover: {\n          borderColor: {\n            value: \"{colors.brand.primary.60.value}\"\n          },\n          backgroundColor: {\n            value: \"{colors.brand.primary.60.value}\"\n          }\n        }\n      }\n    },\n    link: {\n      color: {\n        value: \"{colors.overlay.50.value}\"\n      },\n      _hover: {\n        backgroundColor: {\n          value: \"{colors.transparent.value}\"\n        },\n        color: {\n          value: \"{colors.overlay.50.value}\"\n        }\n      },\n      _focus: {\n        backgroundColor: {\n          value: \"{colors.transparent.value}\"\n        },\n        color: {\n          value: \"{colors.overlay.50.value}\"\n        }\n      },\n      _disabled: {\n        color: {\n          value: \"{colors.font.disabled.value}\"\n        }\n      },\n      _pressed: {\n        backgroundColor: {\n          value: \"{colors.transparent.value}\"\n        },\n        color: {\n          value: \"{colors.overlay.90.value}\"\n        },\n        _hover: {\n          backgroundColor: {\n            value: \"{colors.transparent.value}\"\n          }\n        }\n      }\n    }\n  };\n});\nvar Wr = c((hi, Rr) => {\n  o();\n  Rr.exports = {\n    alignItems: {\n      value: \"center\"\n    },\n    alignContent: {\n      value: \"center\"\n    },\n    justifyContent: {\n      value: \"flex-start\"\n    }\n  };\n});\n\nvar _r = c((bi, Vr) => {\n  o();\n  Vr.exports = {\n    alert: bo(),\n    badge: yo(),\n    button: xo(),\n    card: wo(),\n    checkbox: Ao(),\n    checkboxfield: Do(),\n    countrycodeselect: Po(),\n    divider: Wo(),\n    expander: _o(),\n    field: No(),\n    fieldcontrol: Fo(),\n    fieldgroup: Bo(),\n    fieldmessages: Go(),\n    flex: Ho(),\n    heading: jo(),\n    icon: Ko(),\n    image: Xo(),\n    link: Qo(),\n    loader: er(),\n    menu: rr(),\n    pagination: tr(),\n    phonenumberfield: ir(),\n    placeholder: lr(),\n    radio: dr(),\n    rating: mr(),\n    select: pr(),\n    selectfield: fr(),\n    sliderfield: br(),\n    stepperfield: yr(),\n    switchfield: xr(),\n    table: wr(),\n    tabs: Ar(),\n    text: Dr(),\n    togglebutton: Pr(),\n    togglebuttongroup: Wr()\n  };\n});\n\no();\no();\no();\nimport { Hub as Hr } from \"aws-amplify\";\nimport xe from \"lodash/includes\";\no();\no();\n\nvar ga = [\"birthdate\", \"email\", \"family_name\", \"given_name\", \"middle_name\", \"name\", \"nickname\", \"phone_number\", \"preferred_username\", \"profile\", \"website\"],\n    fa = [\"address\", \"gender\", \"locale\", \"picture\", \"updated_at\", \"zoneinfo\"],\n    C = (l => (l.SMS_MFA = \"SMS_MFA\", l.SOFTWARE_TOKEN_MFA = \"SOFTWARE_TOKEN_MFA\", l.NEW_PASSWORD_REQUIRED = \"NEW_PASSWORD_REQUIRED\", l.RESET_REQUIRED = \"RESET_REQUIRED\", l.MFA_SETUP = \"MFA_SETUP\", l))(C || {}),\n    q = [\"username\", \"email\", \"phone_number\"];\n\no();\n\nvar M = {\n  birthdate: {\n    label: \"Birthdate\",\n    placeholder: \"Birthdate\",\n    type: \"date\",\n    autocomplete: \"bday\"\n  },\n  confirmation_code: {\n    label: \"Confirmation Code\",\n    placeholder: \"Code\",\n    type: \"text\",\n    autocomplete: \"one-time-code\"\n  },\n  email: {\n    label: \"Email\",\n    type: \"email\",\n    placeholder: \"Email\",\n    autocomplete: \"username\"\n  },\n  family_name: {\n    label: \"Family Name\",\n    placeholder: \"Family Name\",\n    type: \"text\",\n    autocomplete: \"family-name\"\n  },\n  given_name: {\n    label: \"Given Name\",\n    placeholder: \"Given Name\",\n    type: \"text\",\n    autocomplete: \"given-name\"\n  },\n  middle_name: {\n    label: \"Middle Name\",\n    placeholder: \"Middle Name\",\n    type: \"text\",\n    autocomplete: \"additional-name\"\n  },\n  name: {\n    label: \"Name\",\n    placeholder: \"Name\",\n    type: \"text\",\n    autocomplete: \"name\"\n  },\n  nickname: {\n    label: \"Nickname\",\n    placeholder: \"Nickname\",\n    type: \"text\",\n    autocomplete: \"tel\"\n  },\n  password: {\n    label: \"Password\",\n    placeholder: \"Password\",\n    type: \"password\",\n    autocomplete: \"password\"\n  },\n  phone_number: {\n    label: \"Phone Number\",\n    placeholder: \"Phone\",\n    type: \"tel\",\n    autocomplete: \"tel\"\n  },\n  preferred_username: {\n    label: \"Preferred Username\",\n    placeholder: \"Preferred Username\",\n    type: \"text\"\n  },\n  profile: {\n    label: \"Profile\",\n    placeholder: \"Profile\",\n    type: \"url\",\n    autocomplete: \"url\"\n  },\n  website: {\n    label: \"Website\",\n    placeholder: \"Website\",\n    type: \"url\",\n    autocomplete: \"url\"\n  },\n  username: {\n    label: \"Username\",\n    type: \"text\",\n    placeholder: \"Username\",\n    autocomplete: \"username\"\n  }\n},\n    qr = (s => (s.Apple = \"SignInWithApple\", s.Amazon = \"LoginWithAmazon\", s.Facebook = \"Facebook\", s.Google = \"Google\", s))(qr || {}),\n    _a = (r, e) => {\n  var u, v, d, b, g;\n  let a = (u = r.config) == null ? void 0 : u.loginMechanisms,\n      t = (d = (v = r.actorRef) == null ? void 0 : v.context) == null ? void 0 : d.validationError.username;\n  if (q.includes(e)) return {\n    label: M[e].label,\n    type: M[e].type,\n    error: t\n  };\n  let s = \"text\",\n      l = a.filter(f => xe(q, f)).map(f => {\n    var z, B;\n    return (B = (z = M[f]) == null ? void 0 : z.label) != null ? B : M.username.label;\n  }).join(\" or \");\n  return a.length === 1 && (s = (g = (b = M[a[0]]) == null ? void 0 : b.type) != null ? g : \"text\"), {\n    label: l,\n    type: s,\n    error: t\n  };\n},\n    Ua = r => {\n  var l;\n  let a = ((l = r.config) == null ? void 0 : l.loginMechanisms).filter(u => xe(q, u)),\n      [t, ...s] = a;\n  return {\n    primaryAlias: t,\n    secondaryAliases: s\n  };\n},\n    Q = r => {\n  var e;\n  return (e = r.context.actorRef) == null ? void 0 : e.getSnapshot();\n},\n    jr = r => {\n  var e;\n  return (e = Q(r)) == null ? void 0 : e.context;\n},\n    $r = r => {\n  let e = a => t => r({\n    type: a,\n    data: t\n  });\n\n  return {\n    resendCode: e(\"RESEND\"),\n    signOut: e(\"SIGN_OUT\"),\n    submitForm: e(\"SUBMIT\"),\n    updateForm: e(\"CHANGE\"),\n    updateBlur: e(\"BLUR\"),\n    toFederatedSignIn: e(\"FEDERATED_SIGN_IN\"),\n    toResetPassword: e(\"RESET_PASSWORD\"),\n    toSignIn: e(\"SIGN_IN\"),\n    toSignUp: e(\"SIGN_UP\"),\n    skipVerification: e(\"SKIP\")\n  };\n},\n    Kr = r => {\n  var g, f;\n\n  let e = (g = r.context) == null ? void 0 : g.user,\n      a = Q(r),\n      t = jr(r),\n      s = t == null ? void 0 : t.remoteError,\n      l = m({}, t == null ? void 0 : t.validationError),\n      u = t == null ? void 0 : t.codeDeliveryDetails,\n      v = Object.keys(l).length > 0,\n      d = r.hasTag(\"pending\") || ((f = Q(r)) == null ? void 0 : f.hasTag(\"pending\")),\n      b = (() => {\n    switch (!0) {\n      case r.matches(\"idle\"):\n        return \"idle\";\n\n      case r.matches(\"setup\"):\n        return \"setup\";\n\n      case r.matches(\"signOut\"):\n        return \"signOut\";\n\n      case r.matches(\"authenticated\"):\n        return \"authenticated\";\n\n      case a == null ? void 0 : a.matches(\"confirmSignUp\"):\n        return \"confirmSignUp\";\n\n      case a == null ? void 0 : a.matches(\"confirmSignIn\"):\n        return \"confirmSignIn\";\n\n      case a == null ? void 0 : a.matches(\"setupTOTP\"):\n        return \"setupTOTP\";\n\n      case a == null ? void 0 : a.matches(\"signIn\"):\n        return \"signIn\";\n\n      case a == null ? void 0 : a.matches(\"signUp\"):\n        return \"signUp\";\n\n      case a == null ? void 0 : a.matches(\"forceNewPassword\"):\n        return \"forceNewPassword\";\n\n      case a == null ? void 0 : a.matches(\"resetPassword\"):\n        return \"resetPassword\";\n\n      case a == null ? void 0 : a.matches(\"confirmResetPassword\"):\n        return \"confirmResetPassword\";\n\n      case a == null ? void 0 : a.matches(\"verifyUser\"):\n        return \"verifyUser\";\n\n      case a == null ? void 0 : a.matches(\"confirmVerifyUser\"):\n        return \"confirmVerifyUser\";\n\n      default:\n        return console.debug(\"Cannot infer `route` from Authenticator state:\", r.value), null;\n    }\n  })();\n\n  return {\n    error: s,\n    hasValidationErrors: v,\n    isPending: d,\n    route: b,\n    user: e,\n    validationErrors: l,\n    codeDeliveryDetails: u\n  };\n},\n    Na = _ref => {\n  let {\n    send: r,\n    state: e\n  } = _ref;\n  let a = $r(r),\n      t = Kr(e);\n  return m(m({}, a), t);\n},\n    Oa = r => Hr.listen(\"auth\", e => {\n  switch (e.payload.event) {\n    case \"signOut\":\n      r(\"SIGN_OUT\");\n      break;\n  }\n});\n\no();\n\nvar za = r => {\n  let e = r.trim().split(\"\");\n\n  for (let a = 0; a < e.length; a++) a > 0 && a < e.length - 1 && (e[a] = \"*\");\n\n  return e.join(\"\");\n},\n    Ba = r => {\n  if (r.length < 4) return r;\n  let e = r.split(\"\");\n\n  for (let a = 0; a < e.length - 4; a++) e[a] = \"*\";\n\n  return e.join(\"\");\n};\n\no();\no();\nvar qa = [\"+1\", \"+7\", \"+20\", \"+27\", \"+30\", \"+31\", \"+32\", \"+33\", \"+34\", \"+36\", \"+39\", \"+40\", \"+41\", \"+43\", \"+44\", \"+45\", \"+46\", \"+47\", \"+48\", \"+49\", \"+51\", \"+52\", \"+53\", \"+54\", \"+55\", \"+56\", \"+57\", \"+58\", \"+60\", \"+61\", \"+62\", \"+63\", \"+64\", \"+65\", \"+66\", \"+81\", \"+82\", \"+84\", \"+86\", \"+90\", \"+91\", \"+92\", \"+93\", \"+94\", \"+95\", \"+98\", \"+212\", \"+213\", \"+216\", \"+218\", \"+220\", \"+221\", \"+222\", \"+223\", \"+224\", \"+225\", \"+226\", \"+227\", \"+228\", \"+229\", \"+230\", \"+231\", \"+232\", \"+233\", \"+234\", \"+235\", \"+236\", \"+237\", \"+238\", \"+239\", \"+240\", \"+241\", \"+242\", \"+243\", \"+244\", \"+245\", \"+246\", \"+248\", \"+249\", \"+250\", \"+251\", \"+252\", \"+253\", \"+254\", \"+255\", \"+256\", \"+257\", \"+258\", \"+260\", \"+261\", \"+262\", \"+263\", \"+264\", \"+265\", \"+266\", \"+267\", \"+268\", \"+269\", \"+290\", \"+291\", \"+297\", \"+298\", \"+299\", \"+345\", \"+350\", \"+351\", \"+352\", \"+353\", \"+354\", \"+355\", \"+356\", \"+357\", \"+358\", \"+359\", \"+370\", \"+371\", \"+372\", \"+373\", \"+374\", \"+375\", \"+376\", \"+377\", \"+378\", \"+379\", \"+380\", \"+381\", \"+382\", \"+385\", \"+386\", \"+387\", \"+389\", \"+420\", \"+421\", \"+423\", \"+500\", \"+501\", \"+502\", \"+503\", \"+504\", \"+505\", \"+506\", \"+507\", \"+508\", \"+509\", \"+537\", \"+590\", \"+591\", \"+593\", \"+594\", \"+595\", \"+596\", \"+597\", \"+598\", \"+599\", \"+670\", \"+672\", \"+673\", \"+674\", \"+675\", \"+676\", \"+677\", \"+678\", \"+679\", \"+680\", \"+681\", \"+682\", \"+683\", \"+685\", \"+686\", \"+687\", \"+688\", \"+689\", \"+690\", \"+691\", \"+692\", \"+850\", \"+852\", \"+853\", \"+855\", \"+856\", \"+872\", \"+880\", \"+886\", \"+960\", \"+961\", \"+962\", \"+963\", \"+964\", \"+965\", \"+966\", \"+967\", \"+968\", \"+970\", \"+971\", \"+972\", \"+973\", \"+974\", \"+975\", \"+976\", \"+977\", \"+992\", \"+993\", \"+994\", \"+995\", \"+996\", \"+998\"];\no();\nimport { I18n as Ne } from \"aws-amplify\";\no();\no();\no();\nvar J = {\n  \"Account recovery requires verified contact information\": \"Zur\\xFCcksetzen des Account ben\\xF6tigt einen verifizierten Account\",\n  \"An account with the given email already exists.\": \"Ein Account mit dieser Email existiert bereits.\",\n  \"Back to Sign In\": \"Zur\\xFCck zur Anmeldung\",\n  \"Change Password\": \"Passwort \\xE4ndern\",\n  Code: \"Code\",\n  Confirm: \"Best\\xE4tigen\",\n  \"Confirm Password\": \"Passwort best\\xE4tigen\",\n  \"Confirm a Code\": \"Code best\\xE4tigen\",\n  \"Confirm Sign In\": \"Anmeldung best\\xE4tigen\",\n  \"Confirm Sign Up\": \"Registrierung best\\xE4tigen\",\n  \"Confirm SMS Code\": \"SMS-Code best\\xE4tigen\",\n  \"Confirm TOTP Code\": \"TOTP-Code best\\xE4tigen\",\n  \"Confirmation Code\": \"Best\\xE4tigungs-Code\",\n  \"Create a new account\": \"Einen neuen Account erstellen\",\n  \"Create account\": \"Hier registrieren\",\n  \"Create Account\": \"Account erstellen\",\n  \"Creating Account\": \"Account wird erstellt\",\n  Email: \"Email\",\n  \"Enter your code\": \"Geben Sie Ihren Code ein\",\n  \"Enter your password\": \"Geben Sie Ihr Passwort ein\",\n  \"Enter your username\": \"Geben Sie Ihren Benutzernamen ein\",\n  \"Enter your phone number\": \"Geben Sie Ihre Telefonnummer ein\",\n  \"Enter your email\": \"Geben Sie ihre Email ein\",\n  \"Forgot your password?\": \"Passwort vergessen? \",\n  \"Forgot Password\": \"Passwort vergessen\",\n  \"Hide password\": \"Passwort verbergen\",\n  \"Have an account? \": \"Schon registriert? \",\n  \"Incorrect username or password\": \"Falscher Benutzername oder falsches Passwort\",\n  \"Invalid password format\": \"Ung\\xFCltiges Passwort-Format\",\n  \"Invalid phone number format\": \"Ung\\xFCltiges Telefonummern-Format. Benutze eine Nummer im Format: +12345678900\",\n  \"Lost your code? \": \"Code verloren? \",\n  \"New Password\": \"Neues Passwort\",\n  \"No account? \": \"Kein Account? \",\n  or: \"oder\",\n  Password: \"Passwort\",\n  \"Password attempts exceeded\": \"Die maximale Anzahl der fehlerhaften Anmeldeversuche wurde erreicht\",\n  \"Phone Number\": \"Telefonnummer\",\n  \"Resend Code\": \"Code erneut senden\",\n  \"Reset password\": \"Passwort zur\\xFCcksetzen\",\n  \"Reset your password\": \"Zur\\xFCcksetzen des Passworts\",\n  \"Send Code\": \"Code senden\",\n  \"Sign in\": \"Anmelden\",\n  \"Sign In\": \"Anmelden\",\n  \"Sign in to your account\": \"Melden Sie sich mit Ihrem Account an\",\n  \"Sign Out\": \"Abmelden\",\n  \"Sign Up\": \"Registrieren\",\n  Skip: \"\\xDCberspringen\",\n  Submit: \"Abschicken\",\n  \"User already exists\": \"Dieser Benutzer existiert bereits\",\n  \"User does not exist\": \"Dieser Benutzer existiert nicht\",\n  Username: \"Benutzername\",\n  \"Username cannot be empty\": \"Benutzername darf nicht leer sein\",\n  Verify: \"Verifizieren\",\n  \"Verify Contact\": \"Kontakt verifizieren\"\n};\no();\nvar ee = {\n  \"Account recovery requires verified contact information\": \"Account recovery requires verified contact information\",\n  \"Back to Sign In\": \"Back to Sign In\",\n  \"Change Password\": \"Change Password\",\n  Changing: \"Changing\",\n  Code: \"Code\",\n  Confirm: \"Confirm\",\n  \"Confirm Password\": \"Confirm Password\",\n  \"Confirm Sign Up\": \"Confirm Sign Up\",\n  \"Confirm SMS Code\": \"Confirm SMS Code\",\n  \"Confirm TOTP Code\": \"Confirm TOTP Code\",\n  \"Confirmation Code\": \"Confirmation Code\",\n  Confirming: \"Confirming\",\n  \"Create Account\": \"Create Account\",\n  \"Creating Account\": \"Creating Account\",\n  Email: \"Email\",\n  \"Enter your code\": \"Enter your code\",\n  \"Enter your username\": \"Enter your username\",\n  \"Enter your phone number\": \"Enter your phone number\",\n  \"Enter your email\": \"Enter your email\",\n  \"Forgot your password?\": \"Forgot your password?\",\n  \"Hide password\": \"Hide password\",\n  Loading: \"Loading\",\n  Username: \"Username\",\n  \"New password\": \"New password\",\n  Password: \"Password\",\n  \"Phone Number\": \"Phone Number\",\n  \"Resend Code\": \"Resend Code\",\n  \"Reset your password\": \"Reset your password\",\n  \"Reset your Password\": \"Reset your Password\",\n  \"Send Code\": \"Send Code\",\n  \"Send code\": \"Send code\",\n  Sending: \"Sending\",\n  \"Setup TOTP\": \"Setup TOTP\",\n  \"Show password\": \"Show password\",\n  \"Sign in\": \"Sign in\",\n  \"Sign In\": \"Sign In\",\n  \"Sign In with Amazon\": \"Sign In with Amazon\",\n  \"Sign In with Apple\": \"Sign In with Apple\",\n  \"Sign In with Facebook\": \"Sign In with Facebook\",\n  \"Sign In with Google\": \"Sign In with Google\",\n  \"Sign in to your account\": \"Sign in to your account\",\n  \"Create a new account\": \"Create a new account\",\n  \"Signing in\": \"Signing in\",\n  Skip: \"Skip\",\n  Submit: \"Submit\",\n  Submitting: \"Submitting\",\n  \"Verify Contact\": \"Verify Contact\",\n  Verify: \"Verify\"\n};\no();\nvar oe = {\n  \"Account recovery requires verified contact information\": \"La recuperaci\\xF3n de la cuenta requiere informaci\\xF3n de contacto verificada\",\n  \"Back to Sign In\": \"Volver a inicio de sesi\\xF3n\",\n  \"Change Password\": \"Cambiar contrase\\xF1a\",\n  Code: \"C\\xF3digo\",\n  Confirm: \"Confirmar\",\n  \"Confirm a Code\": \"Confirmar un c\\xF3digo\",\n  \"Confirm Password\": \"Confirmar contrase\\xF1a\",\n  \"Confirm Sign In\": \"Confirmar inicio de sesi\\xF3n\",\n  \"Confirm Sign Up\": \"Confirmar registro\",\n  \"Confirmation Code\": \"C\\xF3digo de confirmaci\\xF3n\",\n  \"Create a new account\": \"Crear una cuenta nueva\",\n  Email: \"Email\",\n  \"Forgot Password\": \"Olvid\\xE9 mi contrase\\xF1a\",\n  \"Incorrect username or password\": \"Nombre de usuario o contrase\\xF1a incorrecta\",\n  \"Invalid password format\": \"Formato de contrase\\xF1a inv\\xE1lido\",\n  \"Invalid phone number format\": \"Formato de n\\xFAmero de tel\\xE9fono inv\\xE1lido\",\n  \"Loading...\": \"Cargando...\",\n  \"New Password\": \"Nueva contrase\\xF1a\",\n  or: \"o\",\n  Password: \"Contrase\\xF1a\",\n  \"Phone Number\": \"N\\xFAmero de tel\\xE9fono\",\n  \"Resend a Code\": \"Reenviar un c\\xF3digo\",\n  \"Resend Code\": \"Reenviar c\\xF3digo\",\n  \"Send Code\": \"Enviar c\\xF3digo\",\n  \"Sign In\": \"Iniciar sesi\\xF3n\",\n  \"Sign in to your account\": \"Iniciar sesi\\xF3n en tu cuenta\",\n  \"Sign Out\": \"Cerrar sesi\\xF3n\",\n  \"Sign Up\": \"Crear cuenta\",\n  Skip: \"Omitir\",\n  Submit: \"Enviar\",\n  \"User already exists\": \"El usuario ya existe\",\n  \"User does not exist\": \"El usuario no existe\",\n  Username: \"Nombre de usuario\",\n  \"Username cannot be empty\": \"El nombre de usuario no puede estar vac\\xEDo\",\n  Verify: \"Verificar\",\n  \"Verify Contact\": \"Verificar contacto\"\n};\no();\nvar re = {\n  \"Account recovery requires verified contact information\": \"La r\\xE9cup\\xE9ration du compte n\\xE9cessite des informations de contact v\\xE9rifi\\xE9es\",\n  \"An account with the given email already exists.\": \"Un utilisateur avec cette adresse email existe d\\xE9j\\xE0.\",\n  \"Back to Sign In\": \"Retour \\xE0 la connexion\",\n  Change: \"Modifier\",\n  \"Change Password\": \"Modifier le mot de passe\",\n  Code: \"Code\",\n  Confirm: \"Confirmer\",\n  \"Confirm a Code\": \"Confirmer un code\",\n  \"Confirm Password\": \"Confirmez le mot de passe\",\n  \"Confirm Sign In\": \"Confirmer la connexion\",\n  \"Confirm Sign Up\": \"Confirmer l'inscription\",\n  \"Confirm SMS Code\": \"Confirmer le code SMS\",\n  \"Confirm TOTP Code\": \"Confirmer le code TOTP\",\n  \"Confirmation Code\": \"Code de confirmation\",\n  \"Create a new account\": \"Cr\\xE9er un nouveau compte\",\n  \"Create account\": \"Cr\\xE9er un compte\",\n  \"Create Account\": \"Cr\\xE9er un compte\",\n  Email: \"Email\",\n  \"Enter your code\": \"Saisissez cotre code de confirmation\",\n  \"Enter your email\": \"Saisissez votre adresse email\",\n  \"Enter your password\": \"Saisissez votre mot de passe\",\n  \"Enter your phone number\": \"Saisissez votre num\\xE9ro de t\\xE9l\\xE9phone\",\n  \"Enter your username\": \"Saisissez votre nom d'utilisateur\",\n  \"Forgot Password\": \"Mot de passe oubli\\xE9\",\n  \"Forgot your password?\": \"Mot de passe oubli\\xE9 ? \",\n  \"Have an account? \": \"D\\xE9j\\xE0 un compte ? \",\n  Hello: \"Bonjour\",\n  \"Incorrect username or password\": \"Identifiant ou mot de passe incorrect\",\n  \"Invalid password format\": \"Format de mot de passe invalide\",\n  \"Invalid phone number format\": \"Format de num\\xE9ro de t\\xE9l\\xE9phone invalide. Veuillez utiliser un format +12345678900\",\n  \"Loading...\": \"Chargement...\",\n  \"Lost your code? \": \"Vous avez perdu votre code ? \",\n  \"Network error\": \"Erreur r\\xE9seau\",\n  \"New Password\": \"Nouveau mot de passe\",\n  \"No account? \": \"Pas de compte ? \",\n  or: \"ou\",\n  Password: \"Mot de passe\",\n  \"Phone Number\": \"Num\\xE9ro de t\\xE9l\\xE9phone\",\n  \"Resend a Code\": \"Renvoyer un code\",\n  \"Resend Code\": \"Renvoyer le code\",\n  \"Reset password\": \"R\\xE9initialisez votre mot de passe\",\n  \"Reset your password\": \"R\\xE9initialisez votre mot de passe\",\n  Send: \"Envoyer\",\n  \"Send Code\": \"M'envoyer un code\",\n  \"Sign in\": \"Se connecter\",\n  \"Sign In\": \"Se connecter\",\n  \"Sign in to your account\": \"Connexion \\xE0 votre compte\",\n  \"Sign In with Amazon\": \"Se connecter avec Amazon\",\n  \"Sign In with AWS\": \"Se connecter avec AWS\",\n  \"Sign In with Facebook\": \"Se connecter avec Facebook\",\n  \"Sign In with Google\": \"Se connecter avec Google\",\n  \"Sign Out\": \"D\\xE9connexion\",\n  \"Sign Up\": \"S'inscrire\",\n  Skip: \"Passer\",\n  SMS: \"SMS\",\n  Submit: \"Soumettre\",\n  \"User already exists\": \"L'utilisateur existe d\\xE9j\\xE0\",\n  \"User does not exist\": \"L'utilisateur n'existe pas\",\n  Username: \"Nom d'utilisateur\",\n  \"Username cannot be empty\": \"Le nom d'utilisateur doit \\xEAtre renseign\\xE9\",\n  \"Username/client id combination not found.\": \"L'utilisateur n'existe pas\",\n  Verify: \"V\\xE9rifier\",\n  \"Verify Contact\": \"V\\xE9rifier le contact\"\n};\no();\nvar ae = {\n  \"Account recovery requires verified contact information\": \"Ripristino del conto richiede un account verificati\",\n  \"An account with the given email already exists.\": \"Un account con questa email esiste gi\\xE0.\",\n  \"Back to Sign In\": \"Torna alla Accesso\",\n  \"Change Password\": \"Cambia la password\",\n  Code: \"Codice\",\n  Confirm: \"Conferma\",\n  \"Confirm a Code\": \"Codice Conferma\",\n  \"Confirm Password\": \"Conferma la password\",\n  \"Confirm Sign In\": \"Conferma di applicazione\",\n  \"Confirm Sign Up\": \"Registrazione Conferma\",\n  \"Confirmation Code\": \"Codice di verifica\",\n  \"Create a new account\": \"Creare un nuovo account\",\n  \"Create account\": \"Registrati\",\n  \"Create Account\": \"Crea account\",\n  Email: \"E-mail\",\n  \"Enter your password\": \"Inserire la password\",\n  \"Enter your username\": \"Inserisci il tuo nome utente\",\n  \"Forgot Password\": \"Password dimenticata\",\n  \"Forgot your password?\": \"Password dimenticata?\",\n  \"Have an account? \": \"Gi\\xE0 registrato?\",\n  \"Incorrect username or password\": \"Nome utente o password errati\",\n  \"Invalid password format\": \"Formato della password non valido\",\n  \"Invalid phone number format\": \"Utilizzo non valido Telefonummern formattare un numero nel formato :. 12.345.678,9 mille\",\n  \"Lost your code?\": \"Perso codice?\",\n  \"New Password\": \"Nuova password\",\n  or: \"o\",\n  \"No account? \": \"Nessun account?\",\n  Password: \"Password\",\n  \"Password attempts exceeded\": \"Il numero massimo di tentativi di accesso falliti \\xE8 stato raggiunto\",\n  \"Phone Number\": \"Numero di telefono\",\n  \"Resend Code\": \"Codice Rispedisci\",\n  \"Reset password\": \"Ripristina password\",\n  \"Reset your password\": \"Resetta password\",\n  \"Send Code\": \"Invia codice\",\n  \"Sign in\": \"Accesso\",\n  \"Sign In\": \"Accesso\",\n  \"Sign in to your account\": \"Accedi con il tuo account a\",\n  \"Sign Out\": \"Esci\",\n  \"Sign Up\": \"Iscriviti\",\n  Skip: \"Salta\",\n  Submit: \"Sottoscrivi\",\n  \"User already exists\": \"Questo utente esiste gi\\xE0\",\n  \"User does not exist\": \"Questo utente non esiste\",\n  Username: \"Nome utente\",\n  \"Username cannot be empty\": \"Nome utente non pu\\xF2 essere vuoto\",\n  Verify: \"Verifica\",\n  \"Verify Contact\": \"Contatto verifica\"\n};\no();\nvar te = {\n  \"Account recovery requires verified contact information\": \"\\u30A2\\u30AB\\u30A6\\u30F3\\u30C8\\u306E\\u5FA9\\u65E7\\u306B\\u306F\\u78BA\\u8A8D\\u6E08\\u307F\\u306E\\u9023\\u7D61\\u5148\\u304C\\u5FC5\\u8981\\u3067\\u3059\",\n  \"An account with the given email already exists.\": \"\\u5165\\u529B\\u3055\\u308C\\u305F\\u30E1\\u30FC\\u30EB\\u30A2\\u30C9\\u30EC\\u30B9\\u306E\\u30A2\\u30AB\\u30A6\\u30F3\\u30C8\\u304C\\u65E2\\u306B\\u5B58\\u5728\\u3057\\u307E\\u3059\",\n  \"Back to Sign In\": \"\\u30B5\\u30A4\\u30F3\\u30A4\\u30F3\\u306B\\u623B\\u308B\",\n  \"Change Password\": \"\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\\u3092\\u5909\\u3048\\u308B \",\n  Code: \"\\u30B3\\u30FC\\u30C9\",\n  Confirm: \"\\u78BA\\u5B9A\",\n  \"Confirm a Code\": \"\\u30B3\\u30FC\\u30C9\\u3092\\u78BA\\u8A8D\",\n  \"Confirm Password\": \"\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\\u306E\\u78BA\\u8A8D\",\n  \"Confirm Sign In\": \"\\u30B5\\u30A4\\u30F3\\u30A4\\u30F3\\u3059\\u308B\",\n  \"Confirm Sign Up\": \"\\u767B\\u9332\\u3059\\u308B\",\n  \"Confirmation Code\": \"\\u78BA\\u8A8D\\u30B3\\u30FC\\u30C9\",\n  \"Create a new account\": \"\\u65B0\\u3057\\u3044\\u30A2\\u30AB\\u30A6\\u30F3\\u30C8\\u3092\\u4F5C\\u308B\",\n  \"Create account\": \"\\u30A2\\u30AB\\u30A6\\u30F3\\u30C8\\u3092\\u4F5C\\u308B \",\n  \"Create Account\": \"\\u30A2\\u30AB\\u30A6\\u30F3\\u30C8\\u3092\\u4F5C\\u308B\",\n  Email: \"\\u30E1\\u30FC\\u30EB\\u30A2\\u30C9\\u30EC\\u30B9\",\n  \"Enter your password\": \"\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\\u3092\\u5165\\u529B \",\n  \"Enter your username\": \"\\u30E6\\u30FC\\u30B6\\u30FC\\u540D\\u3092\\u5165\\u529B \",\n  \"Forgot Password\": \"\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\\u3092\\u5FD8\\u308C\\u305F \",\n  \"Forgot your password?\": \"\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\\u3092\\u5FD8\\u308C\\u307E\\u3057\\u305F\\u304B\\uFF1F \",\n  \"Have an account? \": \"\\u30A2\\u30AB\\u30A6\\u30F3\\u30C8\\u3092\\u6301\\u3063\\u3066\\u3044\\u307E\\u3059\\u304B\\uFF1F\",\n  \"Incorrect username or password\": \"\\u30E6\\u30FC\\u30B6\\u30FC\\u540D\\u304B\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\\u304C\\u7570\\u306A\\u308A\\u307E\\u3059 \",\n  \"Invalid password format\": \"\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\\u306E\\u5F62\\u5F0F\\u304C\\u7121\\u52B9\\u3067\\u3059 \",\n  \"Invalid phone number format\": `\\u4E0D\\u6B63\\u306A\\u96FB\\u8A71\\u756A\\u53F7\\u306E\\u5F62\\u5F0F\\u3067\\u3059\\u3002\n+12345678900 \\u306E\\u5F62\\u5F0F\\u3067\\u5165\\u529B\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044`,\n  \"Lost your code? \": \"\\u30B3\\u30FC\\u30C9\\u3092\\u5931\\u304F\\u3057\\u307E\\u3057\\u305F\\u304B\\uFF1F\",\n  \"New Password\": \"\\u65B0\\u3057\\u3044\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\",\n  \"No account? \": \"\\u30A2\\u30AB\\u30A6\\u30F3\\u30C8\\u304C\\u7121\\u3044\\u3068\\u304D \",\n  or: \"\\u53C8\\u306F\",\n  Password: \"\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9 \",\n  \"Password attempts exceeded\": \"\\u30B5\\u30A4\\u30F3\\u30A4\\u30F3\\u306E\\u8A66\\u884C\\u56DE\\u6570\\u304C\\u4E0A\\u9650\\u306B\\u9054\\u3057\\u307E\\u3057\\u305F\",\n  \"Phone Number\": \"\\u96FB\\u8A71\\u756A\\u53F7\",\n  \"Resend Code\": \"\\u30B3\\u30FC\\u30C9\\u3092\\u518D\\u9001\\u4FE1\",\n  \"Reset password\": \"\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\\u3092\\u30EA\\u30BB\\u30C3\\u30C8 \",\n  \"Reset your password\": \"\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\\u3092\\u30EA\\u30BB\\u30C3\\u30C8\\u3059\\u308B\",\n  \"Send Code\": \"\\u30B3\\u30FC\\u30C9\\u3092\\u9001\\u4FE1\",\n  \"Sign in\": \"\\u30B5\\u30A4\\u30F3\\u30A4\\u30F3\",\n  \"Sign In\": \"\\u30B5\\u30A4\\u30F3\\u30A4\\u30F3 \",\n  \"Sign in to your account\": \"\\u30A2\\u30AB\\u30A6\\u30F3\\u30C8\\u306B\\u30B5\\u30A4\\u30F3\\u30A4\\u30F3 \",\n  \"Sign In with Amazon\": \"Amazon\\u3067\\u30B5\\u30A4\\u30F3\\u30A4\\u30F3\",\n  \"Sign In with Facebook\": \"Facebook\\u3067\\u30B5\\u30A4\\u30F3\\u30A4\\u30F3\",\n  \"Sign In with Google\": \"Google\\u3067\\u30B5\\u30A4\\u30F3\\u30A4\\u30F3\",\n  \"Sign Out\": \"\\u30B5\\u30A4\\u30F3\\u30A2\\u30A6\\u30C8 \",\n  \"Sign Up\": \"\\u767B\\u9332 \",\n  Skip: \"\\u30B9\\u30AD\\u30C3\\u30D7\",\n  Submit: \"\\u9001\\u4FE1\",\n  \"User already exists\": \"\\u65E2\\u306B\\u30E6\\u30FC\\u30B6\\u30FC\\u304C\\u5B58\\u5728\\u3057\\u3066\\u3044\\u307E\\u3059 \",\n  \"User does not exist\": \"\\u30E6\\u30FC\\u30B6\\u30FC\\u304C\\u5B58\\u5728\\u3057\\u307E\\u305B\\u3093 \",\n  Username: \"\\u30E6\\u30FC\\u30B6\\u30FC\\u540D \",\n  \"Username cannot be empty\": \"\\u30E6\\u30FC\\u30B6\\u30FC\\u540D\\u306F\\u5165\\u529B\\u5FC5\\u9808\\u3067\\u3059\",\n  Verify: \"\\u78BA\\u8A8D\",\n  \"Verify Contact\": \"\\u9023\\u7D61\\u5148\\u3092\\u78BA\\u8A8D\"\n};\no();\nvar ne = {\n  \"Back to Sign In\": \"\\uB85C\\uADF8\\uC778\\uC73C\\uB85C \\uB3CC\\uC544\\uAC00\\uAE30\",\n  Birthdate: \"\\uC0DD\\uB144\\uC6D4\\uC77C\",\n  \"Change Password\": \"\\uBE44\\uBC00\\uBC88\\uD638 \\uBCC0\\uACBD\\uD558\\uAE30\",\n  Changing: \"\\uBCC0\\uACBD\\uC911\",\n  Code: \"\\uCF54\\uB4DC\",\n  \"Confirm Password\": \"\\uBE44\\uBC00\\uBC88\\uD638 \\uC7AC\\uD655\\uC778\",\n  \"Reset your Password\": \"\\uBE44\\uBC00\\uBC88\\uD638 \\uC7AC\\uC124\\uC815\",\n  \"Confirm Sign Up\": \"\\uD68C\\uC6D0\\uAC00\\uC785 \\uD655\\uC778\",\n  \"Confirm SMS Code\": \"\\uD734\\uB300\\uD3F0 \\uBCF8\\uC778 \\uD655\\uC778\",\n  \"Confirm TOTP Code\": \"TOTP \\uC778\\uC99D\\uBC88\\uD638 \\uD655\\uC778\",\n  Confirm: \"\\uD655\\uC778\",\n  \"Confirmation Code\": \"\\uC778\\uC99D\\uBC88\\uD638\",\n  Confirming: \"\\uD655\\uC778\\uC911\",\n  \"Create Account\": \"\\uD68C\\uC6D0\\uAC00\\uC785\",\n  \"Creating Account\": \"\\uD68C\\uC6D0\\uAC00\\uC785\\uC911\",\n  Email: \"\\uC774\\uBA54\\uC77C\",\n  \"Enter your code\": \"\\uC778\\uC99D\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n  \"Enter your username\": \"\\uC544\\uC774\\uB514\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n  \"Family Name\": \"\\uC131\",\n  \"Given Name\": \"\\uC774\\uB984\",\n  \"Forgot your password?\": \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC78A\\uC73C\\uC168\\uB098\\uC694?\",\n  \"Hide password\": \"\\uBE44\\uBC00\\uBC88\\uD638 \\uC228\\uAE30\\uAE30\",\n  Loading: \"\\uB85C\\uB529\\uC911\",\n  Username: \"\\uC544\\uC774\\uB514\",\n  Name: \"\\uC131\\uD568\",\n  Nickname: \"\\uB2C9\\uB124\\uC784\",\n  \"New password\": \"\\uC0C8 \\uBE44\\uBC00\\uBC88\\uD638\",\n  Password: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n  \"Phone Number\": \"\\uC804\\uD654\\uBC88\\uD638\",\n  \"Preferred Username\": \"\\uB2C9\\uB124\\uC784\",\n  Profile: \"\\uD504\\uB85C\\uD544\",\n  \"Resend Code\": \"\\uC778\\uC99D\\uBC88\\uD638 \\uC7AC\\uC804\\uC1A1\",\n  \"Reset your password\": \"\\uBE44\\uBC00\\uBC88\\uD638 \\uC7AC\\uC124\\uC815\",\n  \"Reset Password\": \"\\uBE44\\uBC00\\uBC88\\uD638 \\uC7AC\\uC124\\uC815\",\n  \"Send code\": \"\\uC778\\uC99D\\uCF54\\uB4DC \\uBCF4\\uB0B4\\uAE30\",\n  Sending: \"\\uC804\\uC1A1\\uC911\",\n  \"Setup TOTP\": \"TOTP \\uC124\\uC815\\uD558\\uAE30\",\n  \"Show password\": \"\\uBE44\\uBC00\\uBC88\\uD638 \\uBCF4\\uC774\\uAE30\",\n  \"Sign in\": \"\\uB85C\\uADF8\\uC778\",\n  \"Sign In\": \"\\uB85C\\uADF8\\uC778\",\n  \"Sign In with Amazon\": \"Amazon \\uB85C\\uADF8\\uC778\",\n  \"Sign In with Apple\": \"Apple \\uB85C\\uADF8\\uC778\",\n  \"Sign In with Facebook\": \"Facebook \\uB85C\\uADF8\\uC778\",\n  \"Sign In with Google\": \"Google \\uB85C\\uADF8\\uC778\",\n  \"Sign in to your account\": \"\\uB85C\\uADF8\\uC778\",\n  \"Create a new account\": \"\\uD68C\\uC6D0\\uAC00\\uC785\",\n  \"Signing in\": \"\\uB85C\\uADF8\\uC778\\uC911\",\n  Skip: \"\\uB2E4\\uC74C\\uC5D0 \\uD558\\uAE30\",\n  Submit: \"\\uD655\\uC778\",\n  Submitting: \"\\uD655\\uC778\\uC911\",\n  \"Verify Contact\": \"\\uC5F0\\uB77D\\uCC98 \\uD655\\uC778\",\n  \"Account recovery requires verified contact information\": \"\\uACC4\\uC815 \\uBCF5\\uAD6C\\uB97C \\uC704\\uD574 \\uC5F0\\uB77D\\uCC98 \\uD655\\uC778\\uC774 \\uD544\\uC694\\uD569\\uB2C8\\uB2E4\",\n  Verify: \"\\uC778\\uC99D\",\n  Website: \"\\uC6F9\\uC0AC\\uC774\\uD2B8\"\n};\no();\nvar ie = {\n  \"Back to Sign In\": \"Terug naar inloggen\",\n  \"Change Password\": \"Wachtwoord wijzigen\",\n  Changing: \"Wordt aangepast\",\n  Code: \"Code\",\n  \"Confirm Password\": \"Bevestig Wachtwoord\",\n  \"Reset your Password\": \"Wachtwoord resetten\",\n  \"Confirm Sign Up\": \"Bevestig inschrijving\",\n  \"Confirm SMS Code\": \"Bevestig SMS Code\",\n  \"Confirm TOTP Code\": \"Bevestig TOTP Code\",\n  Confirm: \"Bevestig\",\n  \"Confirmation Code\": \"Bevestigingscode\",\n  Confirming: \"Bevestigen\",\n  \"Create Account\": \"Account aanmaken\",\n  \"Creating Account\": \"Account wordt aangemaakt\",\n  Email: \"E-mail\",\n  \"Enter your code\": \"Vul je code in\",\n  \"Enter your username\": \"Vul je gebruikersnaam in\",\n  \"Enter your phone number\": \"Vul je telefoonnummer in\",\n  \"Enter your email\": \"Vul je e-mail in\",\n  \"Forgot your password?\": \"Wachtwoord vergeten? \",\n  \"Hide password\": \"Verberg wachtwoord\",\n  Loading: \"Laden\",\n  Username: \"Gebruikersnaam\",\n  \"New password\": \"Nieuw wachtwoord\",\n  Password: \"Wachtwoord\",\n  \"Phone Number\": \"Telefoonnummer\",\n  \"Resend Code\": \"Verstuur code nogmaals\",\n  \"Reset your password\": \"Reset je wachtwoord\",\n  \"Send Code\": \"Verstuur Code\",\n  \"Send code\": \"Verstuur code\",\n  Sending: \"Versturen\",\n  \"Setup TOTP\": \"TOTP Instellingen\",\n  \"Show password\": \"Toon wachtwoord\",\n  \"Sign in\": \"Inloggen\",\n  \"Sign In\": \"Inloggen\",\n  \"Sign In with Amazon\": \"Inloggen met Amazon\",\n  \"Sign In with Apple\": \"Inloggen met Apple\",\n  \"Sign In with Facebook\": \"Inloggen met Facebook\",\n  \"Sign In with Google\": \"Inloggen met Google\",\n  \"Sign in to your account\": \"Inloggen op je account\",\n  \"Create a new account\": \"Nieuw account aanmaken\",\n  \"Signing in\": \"Inloggen\",\n  Skip: \"Overslaan\",\n  Submit: \"Versturen\",\n  Submitting: \"Wordt verstuurd\",\n  \"Verify Contact\": \"Verifieer Contact\",\n  \"Account recovery requires verified contact information\": \"Accountherstel vereist geverifieerde contactgegevens\",\n  Verify: \"Verifieer\"\n};\no();\nvar se = {\n  \"Back to Sign In\": \"Powr\\xF3t do logowania\",\n  Birthdate: \"Data urodzenia\",\n  \"Change Password\": \"Zmie\\u0144 has\\u0142o\",\n  Changing: \"Zmienianie\",\n  Code: \"Kod\",\n  \"Confirm Password\": \"Potwierd\\u017A Has\\u0142o\",\n  \"Reset your Password\": \"Zresetuj swoje has\\u0142o\",\n  \"Confirm Sign Up\": \"Potwierd\\u017A rejestracj\\u0119\",\n  \"Confirm SMS Code\": \"Potwierd\\u017A kod SMS\",\n  \"Confirm TOTP Code\": \"Potwierd\\u017A has\\u0142o jednorazowe\",\n  Confirm: \"Potwierd\\u017A\",\n  \"Confirmation Code\": \"Kod potwierdzenia\",\n  Confirming: \"Potwierdzanie\",\n  \"Create Account\": \"Utw\\xF3rz konto\",\n  \"Creating Account\": \"Tworzenie konta\",\n  Email: \"E-mail\",\n  \"Enter your code\": \"Wprowad\\u017A sw\\xF3j kod\",\n  \"Enter your username\": \"Wprowad\\u017A swoj\\u0105 nazw\\u0119 u\\u017Cytkownika\",\n  \"Family Name\": \"Nazwisko\",\n  \"Given Name\": \"Pierwsze imi\\u0119\",\n  \"Forgot your password?\": \"Zapomnia\\u0142e\\u015B has\\u0142a? \",\n  \"Hide password\": \"Ukryj has\\u0142o\",\n  Loading: \"\\u0141adowanie\",\n  Username: \"Nazwa u\\u017Cytkownika\",\n  \"Middle Name\": \"Drugie imi\\u0119\",\n  Name: \"Imi\\u0119 i nazwisko\",\n  Nickname: \"Pseudonim\",\n  \"New password\": \"Nowe has\\u0142o\",\n  Password: \"Has\\u0142o\",\n  \"Phone Number\": \"Numer telefonu\",\n  \"Preferred Username\": \"Preferowana nazwa u\\u017Cytkownika\",\n  Profile: \"Profil\",\n  \"Resend Code\": \"Wy\\u015Blij kod ponownie\",\n  \"Reset your password\": \"Zresetuj swoje has\\u0142o\",\n  \"Send Code\": \"Zresetuj has\\u0142o\",\n  \"Send code\": \"Wy\\u015Blij kod\",\n  Sending: \"Wysy\\u0142anie\",\n  \"Setup TOTP\": \"Konfiguruj TOTP\",\n  \"Show password\": \"Poka\\u017C has\\u0142o\",\n  \"Sign in\": \"Zaloguj\",\n  \"Sign In\": \"Logowanie\",\n  \"Sign In with Amazon\": \"Zaloguj z Amazon\",\n  \"Sign In with Apple\": \"Zaloguj z Apple\",\n  \"Sign In with Facebook\": \"Zaloguj z Facebook\",\n  \"Sign In with Google\": \"Zaloguj z Google\",\n  \"Sign in to your account\": \"Zaloguj si\\u0119 na swoje konto\",\n  \"Create a new account\": \"Utw\\xF3rz nowe konto\",\n  \"Signing in\": \"Logowanie\",\n  Skip: \"Pomi\\u0144\",\n  Submit: \"Wy\\u015Blij\",\n  Submitting: \"Wysy\\u0142anie\",\n  \"Verify Contact\": \"Weryfikacja danych kontaktowych\",\n  \"Account recovery requires verified contact information\": \"Odzyskanie konta wymaga zweryfikowanych danych kontaktowych\",\n  Verify: \"Zweryfikuj\",\n  Website: \"Strona internetowa\"\n};\no();\nvar le = {\n  \"Back to Sign In\": \"Voltar para Entrar\",\n  \"Change Password\": \"Mudar senha\",\n  Changing: \"Mudando\",\n  Code: \"C\\xF3digo\",\n  \"Confirm Password\": \"Confirme a Senha\",\n  \"Reset your Password\": \"Redefina sua senha\",\n  \"Confirm Sign Up\": \"Confirmar inscri\\xE7\\xE3o\",\n  \"Confirm SMS Code\": \"Confirme o c\\xF3digo SMS\",\n  \"Confirm TOTP Code\": \"Confirme o c\\xF3digo TOTP\",\n  Confirm: \"confirme\",\n  \"Confirmation Code\": \"C\\xF3digo de confirma\\xE7\\xE3o\",\n  Confirming: \"Confirmando\",\n  \"Create Account\": \"Criar Conta\",\n  \"Creating Account\": \"Criando conta\",\n  Email: \"O email\",\n  \"Enter your code\": \"Insira seu c\\xF3digo\",\n  \"Enter your username\": \"entre com seu nome de usu\\xE1rio\",\n  \"Enter your phone number\": \"Digite seu n\\xFAmero de telefone\",\n  \"Enter your email\": \"Digite seu e-mail\",\n  \"Forgot your password?\": \"Esqueceu sua senha? \",\n  \"Hide password\": \"Esconder a senha\",\n  Loading: \"Carregando\",\n  Username: \"Nome do usu\\xE1rio\",\n  \"New password\": \"Nova Senha\",\n  Password: \"Senha\",\n  \"Phone Number\": \"N\\xFAmero de telefone\",\n  \"Resend Code\": \"Reenviar c\\xF3digo\",\n  \"Reset your password\": \"Redefina sua senha\",\n  \"Send Code\": \"Enviar c\\xF3digo\",\n  \"Send code\": \"Enviar c\\xF3digo\",\n  Sending: \"Enviando\",\n  \"Setup TOTP\": \"Configurar TOTP\",\n  \"Show password\": \"Mostrar senha\",\n  \"Sign In\": \"Entrar\",\n  \"Sign in\": \"Entrar\",\n  \"Sign In with Amazon\": \"Entrar com a Amazon\",\n  \"Sign In with Apple\": \"Entrar com a Apple\",\n  \"Sign In with Facebook\": \"Entrar com o Facebook\",\n  \"Sign In with Google\": \"Fa\\xE7a login no Google\",\n  \"Sign in to your account\": \"Fa\\xE7a login em sua conta\",\n  \"Create a new account\": \"Criar uma nova conta\",\n  \"Signing in\": \"Entrando\",\n  Skip: \"Pular\",\n  Submit: \"Enviar\",\n  Submitting: \"Enviando\",\n  \"Verify Contact\": \"Verificar contato\",\n  \"Account recovery requires verified contact information\": \"A recupera\\xE7\\xE3o da conta requer informa\\xE7\\xF5es de contato verificadas\",\n  Verify: \"Verificar\"\n};\no();\nvar ue = {\n  \"Account recovery requires verified contact information\": \"\\u8D26\\u6237\\u6062\\u590D\\u9700\\u8981\\u9A8C\\u8BC1\\u8FC7\\u7684\\u8054\\u7CFB\\u65B9\\u5F0F\",\n  \"Back to Sign In\": \"\\u56DE\\u5230\\u767B\\u5F55\",\n  \"Change Password\": \"\\u6539\\u53D8\\u5BC6\\u7801\",\n  Code: \"\\u786E\\u8BA4\\u7801\",\n  Confirm: \"\\u786E\\u8BA4\",\n  \"Confirm a Code\": \"\\u786E\\u8BA4\\u7801\",\n  \"Confirm Password\": \"\\u786E\\u8BA4\\u5BC6\\u7801\",\n  \"Confirm Sign In\": \"\\u786E\\u8BA4\\u767B\\u5F55\",\n  \"Confirm Sign Up\": \"\\u786E\\u8BA4\\u6CE8\\u518C\",\n  Email: \"\\u90AE\\u7BB1\",\n  \"Forgot Password\": \"\\u5FD8\\u8BB0\\u5BC6\\u7801\",\n  \"Incorrect username or password\": \"\\u7528\\u6237\\u540D\\u6216\\u5BC6\\u7801\\u9519\\u8BEF\",\n  \"Invalid password format\": \"\\u5BC6\\u7801\\u683C\\u5F0F\\u9519\\u8BEF\",\n  \"Invalid phone number format\": \"\\u7535\\u8BDD\\u683C\\u5F0F\\u9519\\u8BEF\\uFF0C\\u8BF7\\u4F7F\\u7528\\u683C\\u5F0F +12345678900\",\n  \"New Password\": \"\\u65B0\\u5BC6\\u7801\",\n  or: \"\\u6216\\u8005\",\n  Password: \"\\u5BC6\\u7801\",\n  \"Phone Number\": \"\\u7535\\u8BDD\",\n  \"Resend a Code\": \"\\u91CD\\u53D1\\u786E\\u8BA4\\u7801\",\n  \"Send Code\": \"\\u53D1\\u9001\\u786E\\u8BA4\\u7801\",\n  \"Sign In\": \"\\u767B\\u5F55\",\n  \"Sign Out\": \"\\u9000\\u51FA\",\n  \"Sign Up\": \"\\u6CE8\\u518C\",\n  Skip: \"\\u8DF3\\u8FC7\",\n  Submit: \"\\u63D0\\u4EA4\",\n  \"User already exists\": \"\\u7528\\u6237\\u5DF2\\u7ECF\\u5B58\\u5728\",\n  \"User does not exist\": \"\\u7528\\u6237\\u4E0D\\u5B58\\u5728\",\n  Username: \"\\u7528\\u6237\\u540D\",\n  Verify: \"\\u9A8C\\u8BC1\",\n  \"Verify Contact\": \"\\u9A8C\\u8BC1\\u8054\\u7CFB\\u65B9\\u5F0F\"\n};\no();\nvar de = {\n  \"Account recovery requires verified contact information\": \"F\\xF6r att \\xE5terst\\xE4lla kontot beh\\xF6ver du ett verifierat konto\",\n  \"An account with the given email already exists.\": \"Det finns redan ett konto med denna e-postadress\",\n  \"Back to Sign In\": \"Tillbaka till inloggningen\",\n  \"Change Password\": \"Byt l\\xF6senord\",\n  \"Confirm Password\": \"Bekr\\xE4fta l\\xF6senord\",\n  Code: \"Kod\",\n  Confirm: \"Bekr\\xE4fta\",\n  \"Confirm a Code\": \"Bekr\\xE4fta koden\",\n  \"Confirm Sign In\": \"Bekr\\xE4fta inloggning\",\n  \"Confirm Sign Up\": \"Bekr\\xE4fta registrering\",\n  \"Confirmation Code\": \"Verifikationskod\",\n  \"Create a new account\": \"Skapa ett nytt konto\",\n  \"Create account\": \"Skapa konto\",\n  \"Create Account\": \"Skapa konto\",\n  Email: \"E-post\",\n  \"Enter your password\": \"Ange ditt l\\xF6senord\",\n  \"Enter your username\": \"Ange ditt anv\\xE4ndarnamn\",\n  \"Forgot Password\": \"Gl\\xF6mt l\\xF6senordet\",\n  \"Forgot your password?\": \"Gl\\xF6mt ditt l\\xF6senord? \",\n  \"Have an account? \": \"Redan registrerad? \",\n  \"Incorrect username or password\": \"Felaktigt anv\\xE4ndarnamn eller l\\xF6senord\",\n  \"Invalid password format\": \"Ogiltigt l\\xF6senordsformat\",\n  \"Invalid phone number format\": \"Ogiltigt format f\\xF6r telefonnummer\",\n  \"Lost your code? \": \"F\\xF6rlorat koden? \",\n  \"New Password\": \"Nytt l\\xF6senord\",\n  \"No account? \": \"Inget konto? \",\n  or: \"eller\",\n  Password: \"L\\xF6senord\",\n  \"Password attempts exceeded\": \"Maximalt antal felaktiga inloggningsf\\xF6rs\\xF6k har uppn\\xE5tts\",\n  \"Phone Number\": \"Telefonnummer\",\n  \"Resend Code\": \"Skicka koden igen\",\n  \"Reset password\": \"\\xC5terst\\xE4ll l\\xF6senord\",\n  \"Reset your password\": \"\\xC5terst\\xE4ll ditt l\\xF6senord\",\n  \"Send code\": \"Skicka kod\",\n  \"Sign in\": \"Logga in\",\n  \"Sign In\": \"Logga in\",\n  \"Sign in to your account\": \"Logga in till ditt konto\",\n  \"Sign Out\": \"Logga ut\",\n  \"Sign Up\": \"Registrering\",\n  \"We Emailed You\": \"Vi har skickat e-post till dig\",\n  \"Enter your code\": \"Skriv din kod\",\n  Skip: \"Hoppa \\xF6ver\",\n  Submit: \"Skicka\",\n  \"User already exists\": \"Anv\\xE4ndaren finns redan\",\n  \"User does not exist\": \"Anv\\xE4ndaren finns inte\",\n  Username: \"Anv\\xE4ndarnamn\",\n  \"Username cannot be empty\": \"Anv\\xE4ndarnamnet kan inte vara tomt\",\n  Verify: \"Verifiera\",\n  \"Verify Contact\": \"Verifiera kontakt\"\n};\no();\nvar ce = {\n  BACK_SIGN_IN: \"Back to Sign In\",\n  BIRTHDATE: \"Birthdate\",\n  CHANGE_PASSWORD: \"Change Password\",\n  CHANGING_PASSWORD: \"Changing\",\n  CODE: \"Code\",\n  CONFIRM_PASSWORD: \"Confirm Password\",\n  CONFIRM_RESET_PASSWORD_HEADING: \"Reset your Password\",\n  CONFIRM_SIGNUP_HEADING: \"Confirm Sign Up\",\n  CONFIRM_SMS: \"Confirm SMS Code\",\n  CONFIRM_TOTP: \"Confirm TOTP Code\",\n  CONFIRM: \"Confirm\",\n  CONFIRMATION_CODE: \"Confirmation Code\",\n  CONFIRMING: \"Confirming\",\n  CREATE_ACCOUNT: \"Create Account\",\n  CREATING_ACCOUNT: \"Creating Account\",\n  EMAIL_ADDRESS: \"Email\",\n  ENTER_CODE: \"Enter your code\",\n  ENTER_USERNAME: \"Enter your username\",\n  FAMILY_NAME: \"Family Name\",\n  GIVEN_NAME: \"Given Name\",\n  FORGOT_YOUR_PASSWORD: \"Forgot your password?\",\n  FORGOT_YOUR_PASSWORD_LEGACY: \"Forgot your password? \",\n  HIDE_PASSWORD: \"Hide password\",\n  LOADING: \"Loading\",\n  LOGIN_NAME: \"Username\",\n  MIDDLE_NAME: \"Middle Name\",\n  NAME: \"Name\",\n  NICKNAME: \"Nickname\",\n  NEW_PASSWORD: \"New password\",\n  PASSWORD: \"Password\",\n  PHONE_NUMBER: \"Phone Number\",\n  PREFERRED_USERNAME: \"Preferred Username\",\n  PROFILE: \"Profile\",\n  RESEND_CODE: \"Resend Code\",\n  RESET_PASSWORD_HEADING: \"Reset your password\",\n  RESET_PASSWORD: \"Reset Password\",\n  SEND_CODE: \"Send code\",\n  SENDING: \"Sending\",\n  SETUP_TOTP: \"Setup TOTP\",\n  SHOW_PASSWORD: \"Show password\",\n  SIGN_IN_BUTTON: \"Sign in\",\n  SIGN_IN_TAB: \"Sign In\",\n  SIGN_IN_WITH_AMAZON: \"Sign In with Amazon\",\n  SIGN_IN_WITH_APPLE: \"Sign In with Apple\",\n  SIGN_IN_WITH_FACEBOOK: \"Sign In with Facebook\",\n  SIGN_IN_WITH_GOOGLE: \"Sign In with Google\",\n  SIGN_IN: \"Sign in to your account\",\n  SIGN_UP_BUTTON: \"Create a new account\",\n  SIGNING_IN_BUTTON: \"Signing in\",\n  SKIP: \"Skip\",\n  SUBMIT: \"Submit\",\n  SUBMITTING: \"Submitting\",\n  VERIFY_CONTACT: \"Verify Contact\",\n  VERIFY_HEADING: \"Account recovery requires verified contact information\",\n  VERIFY: \"Verify\",\n  WEBSITE: \"Website\"\n};\n\nvar ke = m({}, J),\n    we = m({}, ee),\n    Te = m({}, oe),\n    Ae = m({}, re),\n    Ee = m({}, ae),\n    De = m({}, te),\n    Ie = m({}, ne),\n    Pe = m({}, ie),\n    Re = m({}, se),\n    We = m({}, le),\n    Ve = m({}, ue),\n    _e = m({}, de),\n    Ue = m({}, ce);\n\nvar xt = m({}, Ue);\n\nfunction kt(r) {\n  return Ne.get(r);\n}\n\nfunction wt(r) {\n  return Ne.get(r) !== r;\n}\n\nvar Tt = {\n  de: ke,\n  en: we,\n  es: Te,\n  fr: Ae,\n  it: Ee,\n  ja: De,\n  kr: Ie,\n  nl: Pe,\n  pl: Re,\n  pt: We,\n  zh: Ve,\n  sv: _e\n};\no();\no();\nimport { assign as w, createMachine as ia, forwardTo as sa, spawn as X } from \"xstate\";\no();\nimport { assign as p, stop as Xr } from \"xstate/lib/actions\";\n\nvar G = r => Xr(r),\n    Oe = p({\n  attributeToVerify: r => {}\n}),\n    Fe = p({\n  challengeName: r => {}\n}),\n    ze = p({\n  requiredAttributes: r => {}\n}),\n    E = p({\n  remoteError: r => \"\"\n}),\n    D = p({\n  formValues: r => ({})\n}),\n    I = p({\n  touched: r => ({})\n}),\n    Be = p({\n  unverifiedAttributes: r => {}\n}),\n    Me = p({\n  username: r => {}\n}),\n    P = p({\n  validationError: r => ({})\n}),\n    Ge = p({\n  challengeName: (r, e) => {\n    var a;\n    return (a = e.data) == null ? void 0 : a.challengeName;\n  }\n}),\n    Le = p({\n  requiredAttributes: (r, e) => {\n    var a, t;\n    return (t = (a = e.data) == null ? void 0 : a.challengeParam) == null ? void 0 : t.requiredAttributes;\n  }\n}),\n    He = p({\n  redirectIntent: r => \"confirmPasswordReset\"\n}),\n    qe = p({\n  redirectIntent: r => \"confirmSignUp\"\n}),\n    j = p({\n  authAttributes: (r, e) => {\n    var l, u;\n    let [a] = r.loginMechanisms,\n        t = (l = r.formValues[a]) != null ? l : r.formValues.username,\n        s = (u = r.formValues) == null ? void 0 : u.password;\n    return {\n      username: t,\n      password: s\n    };\n  }\n}),\n    R = p({\n  validationError: (r, e) => e.data\n}),\n    W = p({\n  remoteError: (r, e) => {\n    var a;\n    return e.data.name === \"NoUserPoolError\" ? \"Configuration error (see console) \\u2013 please contact the administrator\" : ((a = e.data) == null ? void 0 : a.message) || e.data;\n  }\n}),\n    je = p({\n  unverifiedAttributes: (r, e) => e.data.unverified\n}),\n    $ = p({\n  user: (r, e) => e.data.user || e.data\n}),\n    $e = p({\n  username: (r, e) => r.formValues.username\n}),\n    Ke = p({\n  codeDeliveryDetails: (r, e) => e.data.codeDeliveryDetails\n}),\n    Ye = p({\n  authAttributes: (r, e) => ({\n    username: r.formValues.username\n  })\n}),\n    V = p({\n  formValues: (r, e) => {\n    let {\n      name: a,\n      value: t\n    } = e.data;\n    return y(m({}, r.formValues), {\n      [a]: t\n    });\n  }\n}),\n    _ = p({\n  touched: (r, e) => {\n    let {\n      name: a\n    } = e.data;\n    return y(m({}, r.touched), {\n      [`${a}`]: !0\n    });\n  }\n}),\n    K = p({\n  formValues: (r, e) => {\n    var d;\n    let [a = \"username\"] = r.loginMechanisms;\n    if (!r.formValues.phone_number && a !== \"phone_number\") return r.formValues;\n    let {\n      formValues: t,\n      country_code: s\n    } = r,\n        l = t.phone_number ? \"phone_number\" : \"username\",\n        u = `${(d = t.country_code) != null ? d : s}${t[l]}`.replace(/[^A-Z0-9+]/gi, \"\"),\n        v = y(m({}, t), {\n      [l]: u\n    });\n    return delete v.country_code, v;\n  }\n});\n\no();\no();\nimport { Auth as O } from \"aws-amplify\";\nimport me from \"lodash/get\";\nimport Xe from \"lodash/isEmpty\";\nimport { createMachine as ea, sendUpdate as h } from \"xstate\";\no();\nimport Zr from \"lodash/isEmpty\";\nimport Qr from \"lodash/merge\";\n\nvar U = async (r, e, a) => {\n  let t = await Promise.all(a.map(l => l(r, e))),\n      s = Qr({}, ...t);\n  return Zr(s) ? Promise.resolve() : Promise.reject(s);\n};\n\no();\nimport { Amplify as Jr, Auth as A } from \"aws-amplify\";\nvar N = {\n  async getAmplifyConfig() {\n    return Jr.configure();\n  },\n\n  async getCurrentUser() {\n    return A.currentAuthenticatedUser();\n  },\n\n  async handleSignUp(r) {\n    return A.signUp(r);\n  },\n\n  async handleSignIn(_ref2) {\n    let {\n      username: r,\n      password: e\n    } = _ref2;\n    return A.signIn(r, e);\n  },\n\n  async handleConfirmSignIn(_ref3) {\n    let {\n      user: r,\n      code: e,\n      mfaType: a\n    } = _ref3;\n    return A.confirmSignIn(r, e, a);\n  },\n\n  async handleConfirmSignUp(_ref4) {\n    let {\n      username: r,\n      code: e\n    } = _ref4;\n    return await A.confirmSignUp(r, e);\n  },\n\n  async handleForgotPasswordSubmit(_ref5) {\n    let {\n      username: r,\n      code: e,\n      password: a\n    } = _ref5;\n    return A.forgotPasswordSubmit(r, e, a);\n  },\n\n  async handleForgotPassword(r) {\n    return A.forgotPassword(r);\n  },\n\n  async validateCustomSignUp(r, e) {},\n\n  async validateConfirmPassword(r, e) {\n    let {\n      password: a,\n      confirm_password: t\n    } = r,\n        {\n      confirm_password: s,\n      password: l\n    } = e;\n    if (!a && !t) return null;\n    if ((a || t) && a !== t && (s && l || a.length >= 6 && t.length >= 6)) return {\n      confirm_password: \"Your passwords must match\"\n    };\n  },\n\n  async validatePreferredUsername(r, e) {}\n\n};\n\nfunction Ze(_ref6) {\n  let {\n    services: r\n  } = _ref6;\n  return ea({\n    initial: \"init\",\n    id: \"signInActor\",\n    states: {\n      init: {\n        always: [{\n          target: \"signIn\"\n        }]\n      },\n      signIn: {\n        initial: \"edit\",\n        exit: [\"clearFormValues\", \"clearTouched\"],\n        states: {\n          edit: {\n            entry: h(),\n            on: {\n              SUBMIT: \"submit\",\n              CHANGE: {\n                actions: \"handleInput\"\n              },\n              FEDERATED_SIGN_IN: \"federatedSignIn\"\n            }\n          },\n          federatedSignIn: {\n            tags: [\"pending\"],\n            entry: [h(), \"clearError\"],\n            invoke: {\n              src: \"federatedSignIn\",\n              onError: {\n                actions: \"setRemoteError\"\n              }\n            }\n          },\n          submit: {\n            tags: [\"pending\"],\n            entry: [\"parsePhoneNumber\", \"clearError\", h()],\n            invoke: {\n              src: \"signIn\",\n              onDone: [{\n                cond: \"shouldSetupTOTP\",\n                actions: [\"setUser\", \"setChallengeName\"],\n                target: \"#signInActor.setupTOTP\"\n              }, {\n                cond: \"shouldConfirmSignIn\",\n                actions: [\"setUser\", \"setChallengeName\"],\n                target: \"#signInActor.confirmSignIn\"\n              }, {\n                cond: \"shouldForceChangePassword\",\n                actions: [\"setUser\", \"setChallengeName\", \"setRequiredAttributes\"],\n                target: \"#signInActor.forceNewPassword\"\n              }, {\n                actions: \"setUser\",\n                target: \"verifying\"\n              }],\n              onError: [{\n                cond: \"shouldRedirectToConfirmSignUp\",\n                actions: [\"setCredentials\", \"setConfirmSignUpIntent\"],\n                target: \"rejected\"\n              }, {\n                cond: \"shouldRedirectToConfirmResetPassword\",\n                actions: [\"setUsernameAuthAttributes\", \"setConfirmResetPasswordIntent\"],\n                target: \"rejected\"\n              }, {\n                actions: \"setRemoteError\",\n                target: \"edit\"\n              }]\n            }\n          },\n          verifying: {\n            tags: [\"pending\"],\n            entry: [\"clearError\", h()],\n            invoke: {\n              src: \"checkVerifiedContact\",\n              onDone: [{\n                cond: \"shouldRequestVerification\",\n                target: \"#signInActor.verifyUser\",\n                actions: \"setUnverifiedAttributes\"\n              }, {\n                target: \"resolved\"\n              }],\n              onError: {\n                actions: \"setRemoteError\",\n                target: \"edit\"\n              }\n            }\n          },\n          resolved: {\n            always: \"#signInActor.resolved\"\n          },\n          rejected: {\n            always: \"#signInActor.rejected\"\n          }\n        }\n      },\n      confirmSignIn: {\n        initial: \"edit\",\n        exit: [\"clearFormValues\", \"clearError\", \"clearTouched\"],\n        states: {\n          edit: {\n            entry: h(),\n            on: {\n              SUBMIT: \"submit\",\n              SIGN_IN: \"#signInActor.signIn\",\n              CHANGE: {\n                actions: \"handleInput\"\n              }\n            }\n          },\n          submit: {\n            tags: [\"pending\"],\n            entry: [\"clearError\", h()],\n            invoke: {\n              src: \"confirmSignIn\",\n              onDone: {\n                target: \"#signInActor.resolved\",\n                actions: [\"setUser\", \"clearChallengeName\", \"clearRequiredAttributes\"]\n              },\n              onError: {\n                target: \"edit\",\n                actions: \"setRemoteError\"\n              }\n            }\n          }\n        }\n      },\n      forceNewPassword: {\n        type: \"parallel\",\n        exit: [\"clearFormValues\", \"clearError\", \"clearTouched\"],\n        states: {\n          validation: {\n            initial: \"pending\",\n            states: {\n              pending: {\n                invoke: {\n                  src: \"validateFields\",\n                  onDone: {\n                    target: \"valid\",\n                    actions: \"clearValidationError\"\n                  },\n                  onError: {\n                    target: \"invalid\",\n                    actions: \"setFieldErrors\"\n                  }\n                }\n              },\n              valid: {\n                entry: h()\n              },\n              invalid: {\n                entry: h()\n              }\n            },\n            on: {\n              CHANGE: {\n                actions: \"handleInput\",\n                target: \".pending\"\n              },\n              BLUR: {\n                actions: \"handleBlur\",\n                target: \".pending\"\n              }\n            }\n          },\n          submit: {\n            initial: \"idle\",\n            entry: \"clearError\",\n            states: {\n              idle: {\n                entry: h(),\n                on: {\n                  SUBMIT: \"validate\"\n                }\n              },\n              validate: {\n                entry: h(),\n                invoke: {\n                  src: \"validateFields\",\n                  onDone: {\n                    target: \"pending\",\n                    actions: \"clearValidationError\"\n                  },\n                  onError: {\n                    target: \"idle\",\n                    actions: \"setFieldErrors\"\n                  }\n                }\n              },\n              pending: {\n                tags: [\"pending\"],\n                entry: [h(), \"clearError\"],\n                invoke: {\n                  src: \"forceNewPassword\",\n                  onDone: [{\n                    cond: \"shouldConfirmSignIn\",\n                    actions: [\"setUser\", \"setChallengeName\"],\n                    target: \"#signInActor.confirmSignIn\"\n                  }, {\n                    cond: \"shouldSetupTOTP\",\n                    actions: [\"setUser\", \"setChallengeName\"],\n                    target: \"#signInActor.setupTOTP\"\n                  }, {\n                    target: \"resolved\",\n                    actions: [\"setUser\", \"setCredentials\"]\n                  }],\n                  onError: {\n                    target: \"idle\",\n                    actions: \"setRemoteError\"\n                  }\n                }\n              },\n              resolved: {\n                type: \"final\",\n                always: \"#signInActor.resolved\"\n              }\n            }\n          }\n        }\n      },\n      setupTOTP: {\n        initial: \"edit\",\n        exit: [\"clearFormValues\", \"clearError\", \"clearTouched\"],\n        states: {\n          edit: {\n            entry: h(),\n            on: {\n              SUBMIT: \"submit\",\n              SIGN_IN: \"#signInActor.signIn\",\n              CHANGE: {\n                actions: \"handleInput\"\n              }\n            }\n          },\n          submit: {\n            tags: [\"pending\"],\n            entry: [h(), \"clearError\"],\n            invoke: {\n              src: \"verifyTotpToken\",\n              onDone: {\n                actions: [\"setUser\", \"clearChallengeName\", \"clearRequiredAttributes\"],\n                target: \"#signInActor.resolved\"\n              },\n              onError: {\n                actions: \"setRemoteError\",\n                target: \"edit\"\n              }\n            }\n          }\n        }\n      },\n      verifyUser: {\n        initial: \"edit\",\n        exit: [\"clearFormValues\", \"clearError\", \"clearTouched\"],\n        states: {\n          edit: {\n            entry: h(),\n            on: {\n              SUBMIT: \"submit\",\n              SKIP: \"#signInActor.resolved\",\n              CHANGE: {\n                actions: \"handleInput\"\n              }\n            }\n          },\n          submit: {\n            tags: [\"pending\"],\n            entry: \"clearError\",\n            invoke: {\n              src: \"verifyUser\",\n              onDone: {\n                target: \"#signInActor.confirmVerifyUser\"\n              },\n              onError: {\n                actions: \"setRemoteError\",\n                target: \"edit\"\n              }\n            }\n          }\n        }\n      },\n      confirmVerifyUser: {\n        initial: \"edit\",\n        exit: [\"clearFormValues\", \"clearError\", \"clearUnverifiedAttributes\", \"clearAttributeToVerify\", \"clearTouched\"],\n        states: {\n          edit: {\n            entry: h(),\n            on: {\n              SUBMIT: \"submit\",\n              SKIP: \"#signInActor.resolved\",\n              CHANGE: {\n                actions: \"handleInput\"\n              }\n            }\n          },\n          submit: {\n            tags: [\"pending\"],\n            entry: \"clearError\",\n            invoke: {\n              src: \"confirmVerifyUser\",\n              onDone: {\n                target: \"#signInActor.resolved\"\n              },\n              onError: {\n                actions: \"setRemoteError\",\n                target: \"edit\"\n              }\n            }\n          }\n        }\n      },\n      resolved: {\n        type: \"final\",\n        data: e => ({\n          user: e.user\n        })\n      },\n      rejected: {\n        type: \"final\",\n        data: (e, a) => ({\n          intent: e.redirectIntent,\n          authAttributes: e.authAttributes\n        })\n      }\n    }\n  }, {\n    actions: {\n      clearAttributeToVerify: Oe,\n      clearChallengeName: Fe,\n      clearRequiredAttributes: ze,\n      clearError: E,\n      clearFormValues: D,\n      clearTouched: I,\n      clearUnverifiedAttributes: Be,\n      clearValidationError: P,\n      handleInput: V,\n      handleBlur: _,\n      parsePhoneNumber: K,\n      setChallengeName: Ge,\n      setConfirmResetPasswordIntent: He,\n      setConfirmSignUpIntent: qe,\n      setRequiredAttributes: Le,\n      setCredentials: j,\n      setFieldErrors: R,\n      setRemoteError: W,\n      setUnverifiedAttributes: je,\n      setUser: $,\n      setUsernameAuthAttributes: Ye\n    },\n    guards: {\n      shouldConfirmSignIn: (e, a) => {\n        let t = me(a, \"data.challengeName\");\n        return [\"SMS_MFA\", \"SOFTWARE_TOKEN_MFA\"].includes(t);\n      },\n      shouldRedirectToConfirmSignUp: (e, a) => a.data.code === \"UserNotConfirmedException\",\n      shouldRedirectToConfirmResetPassword: (e, a) => a.data.code === \"PasswordResetRequiredException\",\n      shouldSetupTOTP: (e, a) => me(a, \"data.challengeName\") === \"MFA_SETUP\",\n      shouldForceChangePassword: (e, a) => me(a, \"data.challengeName\") === \"NEW_PASSWORD_REQUIRED\",\n      shouldRequestVerification: (e, a) => {\n        let {\n          unverified: t,\n          verified: s\n        } = a.data;\n        return Xe(s) && !Xe(t);\n      }\n    },\n    services: {\n      async signIn(e) {\n        let {\n          username: a,\n          password: t\n        } = e.formValues;\n        return await r.handleSignIn({\n          username: a,\n          password: t\n        });\n      },\n\n      async confirmSignIn(e, a) {\n        let {\n          challengeName: t,\n          user: s\n        } = e,\n            {\n          confirmation_code: l\n        } = e.formValues,\n            u;\n        return (t === \"SMS_MFA\" || t === \"SOFTWARE_TOKEN_MFA\") && (u = t), await r.handleConfirmSignIn({\n          user: s,\n          code: l,\n          mfaType: u\n        });\n      },\n\n      async forceNewPassword(e, a) {\n        let {\n          user: t,\n          formValues: s\n        } = e,\n            f = s,\n            {\n          password: l,\n          confirm_password: u,\n          phone_number: v,\n          country_code: d\n        } = f,\n            b = H(f, [\"password\", \"confirm_password\", \"phone_number\", \"country_code\"]),\n            g;\n        return v && (g = `${d}${v}`.replace(/[^A-Z0-9+]/gi, \"\"), b = y(m({}, b), {\n          phone_number: g\n        })), O.completeNewPassword(t, l, b);\n      },\n\n      async verifyTotpToken(e, a) {\n        let {\n          user: t\n        } = e,\n            {\n          confirmation_code: s\n        } = e.formValues;\n        return O.verifyTotpToken(t, s);\n      },\n\n      async federatedSignIn(e, a) {\n        let {\n          provider: t\n        } = a.data;\n        return await O.federatedSignIn({\n          provider: t\n        });\n      },\n\n      async checkVerifiedContact(e, a) {\n        let {\n          user: t\n        } = e;\n        return await O.verifiedContact(t);\n      },\n\n      async verifyUser(e, a) {\n        let {\n          unverifiedAttr: t\n        } = e.formValues,\n            s = await O.verifyCurrentUserAttribute(t);\n        return e.attributeToVerify = t, s;\n      },\n\n      async confirmVerifyUser(e, a) {\n        let {\n          attributeToVerify: t\n        } = e,\n            {\n          confirmation_code: s\n        } = e.formValues;\n        return await O.verifyCurrentUserAttributeSubmit(t, s);\n      },\n\n      async validateFields(e, a) {\n        return U(e.formValues, e.touched, [N.validateConfirmPassword]);\n      }\n\n    }\n  });\n}\n\no();\nimport { createMachine as oa } from \"xstate\";\nimport { Auth as ra } from \"aws-amplify\";\nvar Qe = oa({\n  initial: \"pending\",\n  id: \"signOutActor\",\n  states: {\n    pending: {\n      tags: [\"pending\"],\n      invoke: {\n        src: \"signOut\",\n        onDone: \"resolved\",\n        onError: \"rejected\"\n      }\n    },\n    resolved: {\n      type: \"final\"\n    },\n    rejected: {\n      type: \"final\"\n    }\n  }\n}, {\n  services: {\n    signOut: () => ra.signOut()\n  }\n});\no();\nimport { createMachine as aa, sendUpdate as x } from \"xstate\";\n\nfunction Je(_ref7) {\n  let {\n    services: r\n  } = _ref7;\n  return aa({\n    id: \"resetPasswordActor\",\n    initial: \"init\",\n    states: {\n      init: {\n        always: [{\n          target: \"confirmResetPassword\",\n          cond: \"shouldAutoConfirmReset\"\n        }, {\n          target: \"resetPassword\"\n        }]\n      },\n      resetPassword: {\n        initial: \"edit\",\n        exit: [\"clearFormValues\", \"clearError\", \"clearTouched\"],\n        states: {\n          edit: {\n            entry: x(),\n            on: {\n              SUBMIT: \"submit\",\n              CHANGE: {\n                actions: \"handleInput\"\n              },\n              BLUR: {\n                actions: \"handleBlur\"\n              }\n            }\n          },\n          submit: {\n            tags: [\"pending\"],\n            entry: [x(), \"setUsername\", \"clearError\"],\n            invoke: {\n              src: \"resetPassword\",\n              onDone: {\n                target: \"#resetPasswordActor.confirmResetPassword\"\n              },\n              onError: {\n                actions: [\"setRemoteError\"],\n                target: \"edit\"\n              }\n            }\n          }\n        }\n      },\n      confirmResetPassword: {\n        type: \"parallel\",\n        exit: [\"clearFormValues\", \"clearError\", \"clearUsername\", \"clearTouched\"],\n        states: {\n          validation: {\n            initial: \"pending\",\n            states: {\n              pending: {\n                invoke: {\n                  src: \"validateFields\",\n                  onDone: {\n                    target: \"valid\",\n                    actions: \"clearValidationError\"\n                  },\n                  onError: {\n                    target: \"invalid\",\n                    actions: \"setFieldErrors\"\n                  }\n                }\n              },\n              valid: {\n                entry: x()\n              },\n              invalid: {\n                entry: x()\n              }\n            },\n            on: {\n              CHANGE: {\n                actions: \"handleInput\",\n                target: \".pending\"\n              },\n              BLUR: {\n                actions: \"handleBlur\",\n                target: \".pending\"\n              }\n            }\n          },\n          submission: {\n            initial: \"idle\",\n            states: {\n              idle: {\n                entry: x(),\n                on: {\n                  SUBMIT: \"validate\",\n                  RESEND: \"resendCode\",\n                  CHANGE: {\n                    actions: \"handleInput\"\n                  },\n                  BLUR: {\n                    actions: \"handleBlur\"\n                  }\n                }\n              },\n              validate: {\n                entry: x(),\n                invoke: {\n                  src: \"validateFields\",\n                  onDone: {\n                    target: \"pending\",\n                    actions: \"clearValidationError\"\n                  },\n                  onError: {\n                    target: \"idle\",\n                    actions: \"setFieldErrors\"\n                  }\n                }\n              },\n              resendCode: {\n                tags: [\"pending\"],\n                entry: [\"clearError\", x()],\n                invoke: {\n                  src: \"resetPassword\",\n                  onDone: {\n                    target: \"idle\"\n                  },\n                  onError: {\n                    actions: \"setRemoteError\",\n                    target: \"idle\"\n                  }\n                }\n              },\n              pending: {\n                tags: [\"pending\"],\n                entry: [\"clearError\", x()],\n                invoke: {\n                  src: \"confirmResetPassword\",\n                  onDone: {\n                    actions: \"clearUsername\",\n                    target: \"#resetPasswordActor.resolved\"\n                  },\n                  onError: {\n                    actions: \"setRemoteError\",\n                    target: \"idle\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      resolved: {\n        type: \"final\"\n      }\n    }\n  }, {\n    actions: {\n      clearError: E,\n      clearFormValues: D,\n      clearTouched: I,\n      clearUsername: Me,\n      clearValidationError: P,\n      handleInput: V,\n      handleBlur: _,\n      setFieldErrors: R,\n      setRemoteError: W,\n      setUsername: $e\n    },\n    guards: {\n      shouldAutoConfirmReset: (e, a) => !!(e.intent && e.intent === \"confirmPasswordReset\")\n    },\n    services: {\n      async resetPassword(e) {\n        var t, s;\n        let a = (s = (t = e.formValues) == null ? void 0 : t.username) != null ? s : e.username;\n        return r.handleForgotPassword(a);\n      },\n\n      async confirmResetPassword(e) {\n        let {\n          username: a\n        } = e,\n            {\n          confirmation_code: t,\n          password: s\n        } = e.formValues;\n        return r.handleForgotPasswordSubmit({\n          username: a,\n          code: t,\n          password: s\n        });\n      },\n\n      async validateFields(e, a) {\n        return U(e.formValues, e.touched, [N.validateConfirmPassword]);\n      }\n\n    }\n  });\n}\n\no();\nimport { Auth as Y } from \"aws-amplify\";\nimport k from \"lodash/get\";\nimport ta from \"lodash/pickBy\";\nimport { createMachine as na, sendUpdate as S } from \"xstate\";\n\nfunction eo(_ref8) {\n  let {\n    services: r\n  } = _ref8;\n  return na({\n    id: \"signUpActor\",\n    initial: \"init\",\n    states: {\n      init: {\n        always: [{\n          target: \"confirmSignUp\",\n          cond: \"shouldInitConfirmSignUp\"\n        }, {\n          target: \"signUp\"\n        }]\n      },\n      signUp: {\n        type: \"parallel\",\n        exit: [\"clearError\", \"clearFormValues\", \"clearTouched\"],\n        states: {\n          validation: {\n            initial: \"pending\",\n            states: {\n              pending: {\n                invoke: {\n                  src: \"validateSignUp\",\n                  onDone: {\n                    target: \"valid\",\n                    actions: \"clearValidationError\"\n                  },\n                  onError: {\n                    target: \"invalid\",\n                    actions: \"setFieldErrors\"\n                  }\n                }\n              },\n              valid: {\n                entry: S()\n              },\n              invalid: {\n                entry: S()\n              }\n            },\n            on: {\n              CHANGE: {\n                actions: \"handleInput\",\n                target: \".pending\"\n              },\n              BLUR: {\n                actions: \"handleBlur\",\n                target: \".pending\"\n              }\n            }\n          },\n          submission: {\n            initial: \"idle\",\n            states: {\n              idle: {\n                entry: S(),\n                on: {\n                  SUBMIT: \"validate\",\n                  FEDERATED_SIGN_IN: \"federatedSignIn\"\n                }\n              },\n              federatedSignIn: {\n                tags: [\"pending\"],\n                entry: [S(), \"clearError\"],\n                invoke: {\n                  src: \"federatedSignIn\",\n                  onDone: \"#signUpActor.resolved\",\n                  onError: {\n                    actions: \"setRemoteError\"\n                  }\n                }\n              },\n              validate: {\n                entry: S(),\n                invoke: {\n                  src: \"validateSignUp\",\n                  onDone: {\n                    target: \"pending\",\n                    actions: \"clearValidationError\"\n                  },\n                  onError: {\n                    target: \"idle\",\n                    actions: \"setFieldErrors\"\n                  }\n                }\n              },\n              pending: {\n                tags: [\"pending\"],\n                entry: [\"parsePhoneNumber\", S(), \"clearError\"],\n                invoke: {\n                  src: \"signUp\",\n                  onDone: [{\n                    cond: \"shouldSkipConfirm\",\n                    target: \"skipConfirm\",\n                    actions: [\"setUser\"]\n                  }, {\n                    target: \"resolved\",\n                    actions: [\"setUser\", \"setCredentials\", \"setCodeDeliveryDetails\"]\n                  }],\n                  onError: {\n                    target: \"idle\",\n                    actions: \"setRemoteError\"\n                  }\n                }\n              },\n              skipConfirm: {\n                invoke: {\n                  src: \"signIn\",\n                  onDone: {\n                    target: \"#signUpActor.resolved\",\n                    actions: \"setUser\"\n                  },\n                  onError: {\n                    target: \"idle\",\n                    actions: \"setRemoteError\"\n                  }\n                }\n              },\n              resolved: {\n                type: \"final\",\n                always: \"#signUpActor.confirmSignUp\"\n              }\n            }\n          }\n        }\n      },\n      confirmSignUp: {\n        initial: \"edit\",\n        states: {\n          edit: {\n            entry: S(),\n            on: {\n              SUBMIT: \"submit\",\n              CHANGE: {\n                actions: \"handleInput\"\n              },\n              BLUR: {\n                actions: \"handleBlur\"\n              },\n              RESEND: \"resend\"\n            }\n          },\n          resend: {\n            tags: [\"pending\"],\n            entry: S(),\n            invoke: {\n              src: \"resendConfirmationCode\",\n              onDone: {\n                target: \"edit\"\n              },\n              onError: [{\n                target: \"#signUpActor.resolved\",\n                actions: \"setUser\",\n                cond: \"isUserAlreadyConfirmed\"\n              }, {\n                target: \"edit\",\n                actions: \"setRemoteError\"\n              }]\n            }\n          },\n          submit: {\n            tags: [\"pending\"],\n            entry: [S(), \"clearError\"],\n            invoke: {\n              src: \"confirmSignUp\",\n              onDone: {\n                target: \"#signUpActor.resolved\",\n                actions: [\"setUser\"]\n              },\n              onError: {\n                target: \"edit\",\n                actions: \"setRemoteError\"\n              }\n            }\n          }\n        }\n      },\n      resolved: {\n        type: \"final\",\n        data: (e, a) => {\n          let {\n            username: t,\n            password: s\n          } = e.authAttributes;\n          return {\n            user: k(a, \"data.user\") || e.user,\n            authAttributes: {\n              username: t,\n              password: s\n            }\n          };\n        }\n      }\n    }\n  }, {\n    guards: {\n      isUserAlreadyConfirmed: (e, a) => a.data.message === \"User is already confirmed.\",\n      shouldInitConfirmSignUp: e => e.intent && e.intent === \"confirmSignUp\",\n      shouldSkipConfirm: (e, a) => a.data.userConfirmed\n    },\n    actions: {\n      clearError: E,\n      clearFormValues: D,\n      clearTouched: I,\n      clearValidationError: P,\n      handleInput: V,\n      handleBlur: _,\n      parsePhoneNumber: K,\n      setCredentials: j,\n      setFieldErrors: R,\n      setRemoteError: W,\n      setCodeDeliveryDetails: Ke,\n      setUser: $\n    },\n    services: {\n      async signIn(e, a) {\n        let {\n          user: t,\n          authAttributes: s,\n          formValues: l\n        } = e,\n            u = k(t, \"username\") || k(s, \"username\"),\n            v = k(l, \"password\");\n        return await Y.signIn(u, v);\n      },\n\n      async confirmSignUp(e, a) {\n        let {\n          user: t,\n          authAttributes: s,\n          formValues: l\n        } = e,\n            {\n          confirmation_code: u\n        } = l,\n            v = k(t, \"username\") || k(s, \"username\"),\n            {\n          password: d\n        } = s;\n        return await r.handleConfirmSignUp({\n          username: v,\n          code: u\n        }), await Y.signIn(v, d);\n      },\n\n      async resendConfirmationCode(e, a) {\n        let {\n          user: t,\n          authAttributes: s\n        } = e,\n            l = k(t, \"username\") || k(s, \"username\");\n        return Y.resendSignUp(l);\n      },\n\n      async federatedSignIn(e, a) {\n        let {\n          provider: t\n        } = a.data;\n        return await Y.federatedSignIn({\n          provider: t\n        });\n      },\n\n      async signUp(e, a) {\n        let {\n          formValues: t,\n          loginMechanisms: s\n        } = e,\n            [l = \"username\"] = s,\n            {\n          [l]: u,\n          password: v\n        } = t,\n            d = ta(t, (b, g) => {\n          switch (g) {\n            case \"address\":\n            case \"birthdate\":\n            case \"email\":\n            case \"family_name\":\n            case \"gender\":\n            case \"given_name\":\n            case \"locale\":\n            case \"middle_name\":\n            case \"name\":\n            case \"nickname\":\n            case \"phone_number\":\n            case \"picture\":\n            case \"preferred_username\":\n            case \"profile\":\n            case \"updated_at\":\n            case \"website\":\n            case \"zoneinfo\":\n              return !0;\n\n            default:\n              return g.startsWith(\"custom:\");\n          }\n        });\n        return await r.handleSignUp({\n          username: u,\n          password: v,\n          attributes: d\n        });\n      },\n\n      async validateSignUp(e, a) {\n        return U(e.formValues, e.touched, [r.validateConfirmPassword, r.validatePreferredUsername, r.validateCustomSignUp]);\n      }\n\n    }\n  });\n}\n\nvar oo = \"+1\";\n\nfunction Sn() {\n  return ia({\n    id: \"authenticator\",\n    initial: \"idle\",\n    context: {\n      user: void 0,\n      config: {},\n      services: {},\n      actorRef: void 0\n    },\n    states: {\n      idle: {\n        on: {\n          INIT: {\n            target: \"setup\",\n            actions: \"configure\"\n          }\n        }\n      },\n      setup: {\n        invoke: [{\n          src: (r, e) => r.services.getCurrentUser(),\n          onDone: {\n            actions: \"setUser\",\n            target: \"authenticated\"\n          },\n          onError: [{\n            target: \"signUp\",\n            cond: r => r.config.initialState === \"signUp\"\n          }, {\n            target: \"resetPassword\",\n            cond: r => r.config.initialState === \"resetPassword\"\n          }, {\n            target: \"signIn\"\n          }]\n        }, {\n          src: (r, e) => r.services.getAmplifyConfig(),\n          onDone: {\n            actions: \"applyAmplifyConfig\"\n          }\n        }]\n      },\n      signIn: {\n        entry: \"spawnSignInActor\",\n        exit: G(\"signInActor\"),\n        on: {\n          SIGN_UP: \"signUp\",\n          RESET_PASSWORD: \"resetPassword\",\n          \"done.invoke.signInActor\": [{\n            target: \"signUp\",\n            cond: \"shouldRedirectToSignUp\"\n          }, {\n            target: \"resetPassword\",\n            cond: \"shouldRedirectToResetPassword\"\n          }, {\n            target: \"authenticated\",\n            actions: \"setUser\"\n          }]\n        }\n      },\n      signUp: {\n        entry: \"spawnSignUpActor\",\n        exit: G(\"signUpActor\"),\n        on: {\n          SIGN_IN: \"signIn\",\n          \"done.invoke.signUpActor\": {\n            target: \"setup\",\n            actions: \"setUser\"\n          }\n        }\n      },\n      resetPassword: {\n        entry: \"spawnResetPasswordActor\",\n        exit: G(\"resetPasswordActor\"),\n        on: {\n          SIGN_IN: \"signIn\",\n          \"done.invoke.resetPasswordActor\": \"signIn\"\n        }\n      },\n      signOut: {\n        entry: \"spawnSignOutActor\",\n        exit: [G(\"signOutActor\"), \"clearUser\"],\n        on: {\n          \"done.invoke.signOutActor\": \"signIn\"\n        }\n      },\n      authenticated: {\n        on: {\n          SIGN_OUT: \"signOut\"\n        }\n      }\n    },\n    on: {\n      CHANGE: {\n        actions: \"forwardToActor\"\n      },\n      BLUR: {\n        actions: \"forwardToActor\"\n      },\n      SUBMIT: {\n        actions: \"forwardToActor\"\n      },\n      FEDERATED_SIGN_IN: {\n        actions: \"forwardToActor\"\n      },\n      RESEND: {\n        actions: \"forwardToActor\"\n      },\n      SIGN_OUT: {\n        actions: \"forwardToActor\"\n      },\n      SIGN_IN: {\n        actions: \"forwardToActor\"\n      },\n      SKIP: {\n        actions: \"forwardToActor\"\n      }\n    }\n  }, {\n    actions: {\n      forwardToActor: sa(r => r.actorRef),\n      setUser: w({\n        user: (r, e) => e.data.user || e.data\n      }),\n      clearUser: w({\n        user: void 0\n      }),\n      applyAmplifyConfig: w({\n        config(r, e) {\n          var g, f, z, B, ge, fe, he, be;\n          let a = (f = (g = e.data.aws_cognito_username_attributes) == null ? void 0 : g.map(T => T.toLowerCase())) != null ? f : [],\n              t = (B = (z = e.data.aws_cognito_verification_mechanisms) == null ? void 0 : z.map(T => T.toLowerCase())) != null ? B : [],\n              s = (fe = (ge = e.data.aws_cognito_signup_attributes) == null ? void 0 : ge.map(T => T.toLowerCase())) != null ? fe : [],\n              l = (be = (he = e.data.aws_cognito_social_providers) == null ? void 0 : he.map(T => T.toLowerCase())) != null ? be : [];\n          a.length === 0 && a.push(\"username\");\n          let {\n            loginMechanisms: u,\n            signUpAttributes: v,\n            socialProviders: d,\n            initialState: b\n          } = r.config;\n          return {\n            loginMechanisms: u != null ? u : a,\n            signUpAttributes: v != null ? v : Array.from(new Set([...t, ...s])),\n            socialProviders: d != null ? d : l.sort(),\n            initialState: b\n          };\n        }\n\n      }),\n      spawnSignInActor: w({\n        actorRef: (r, e) => {\n          var s, l, u, v, d;\n          let {\n            services: a\n          } = r,\n              t = Ze({\n            services: a\n          }).withContext({\n            authAttributes: (s = e.data) == null ? void 0 : s.authAttributes,\n            user: (l = e.data) == null ? void 0 : l.user,\n            intent: (u = e.data) == null ? void 0 : u.intent,\n            country_code: oo,\n            formValues: {},\n            touched: {},\n            validationError: {},\n            loginMechanisms: (v = r.config) == null ? void 0 : v.loginMechanisms,\n            socialProviders: (d = r.config) == null ? void 0 : d.socialProviders\n          });\n          return X(t, {\n            name: \"signInActor\"\n          });\n        }\n      }),\n      spawnSignUpActor: w({\n        actorRef: (r, e) => {\n          var s, l, u, v, d;\n          let {\n            services: a\n          } = r,\n              t = eo({\n            services: a\n          }).withContext({\n            authAttributes: (l = (s = e.data) == null ? void 0 : s.authAttributes) != null ? l : {},\n            country_code: oo,\n            intent: (u = e.data) == null ? void 0 : u.intent,\n            formValues: {},\n            touched: {},\n            validationError: {},\n            loginMechanisms: (v = r.config) == null ? void 0 : v.loginMechanisms,\n            socialProviders: (d = r.config) == null ? void 0 : d.socialProviders\n          });\n          return X(t, {\n            name: \"signUpActor\"\n          });\n        }\n      }),\n      spawnResetPasswordActor: w({\n        actorRef: (r, e) => {\n          var s, l, u;\n          let {\n            services: a\n          } = r,\n              t = Je({\n            services: a\n          }).withContext({\n            formValues: {},\n            touched: {},\n            intent: (s = e.data) == null ? void 0 : s.intent,\n            username: (u = (l = e.data) == null ? void 0 : l.authAttributes) == null ? void 0 : u.username,\n            validationError: {}\n          });\n          return X(t, {\n            name: \"resetPasswordActor\"\n          });\n        }\n      }),\n      spawnSignOutActor: w({\n        actorRef: r => {\n          let e = Qe.withContext({\n            user: r.user\n          });\n          return X(e, {\n            name: \"signOutActor\"\n          });\n        }\n      }),\n      configure: w((r, e) => {\n        let s = e.data,\n            {\n          services: a\n        } = s,\n            t = H(s, [\"services\"]);\n        return {\n          services: m(m({}, N), a),\n          config: t\n        };\n      })\n    },\n    guards: {\n      shouldRedirectToSignUp: (r, e) => {\n        var a;\n        return ((a = e.data) == null ? void 0 : a.intent) ? e.data.intent === \"confirmSignUp\" : !1;\n      },\n      shouldRedirectToResetPassword: (r, e) => {\n        var a;\n        return ((a = e.data) == null ? void 0 : a.intent) ? e.data.intent === \"confirmPasswordReset\" : !1;\n      }\n    }\n  });\n}\n\no();\no();\nimport ca from \"style-dictionary/lib/utils/deepExtend\";\nimport Fr from \"style-dictionary/lib/utils/flattenProperties\";\no();\no();\no();\nvar ro = {\n  small: {\n    value: \"1px\"\n  },\n  medium: {\n    value: \"2px\"\n  },\n  large: {\n    value: \"3px\"\n  }\n};\no();\nvar ao = {\n  red: {\n    10: {\n      value: \"hsl(0, 75%, 95%)\"\n    },\n    20: {\n      value: \"hsl(0, 75%, 85%)\"\n    },\n    40: {\n      value: \"hsl(0, 75%, 75%)\"\n    },\n    60: {\n      value: \"hsl(0, 50%, 50%)\"\n    },\n    80: {\n      value: \"hsl(0, 95%, 30%)\"\n    },\n    90: {\n      value: \"hsl(0, 100%, 20%)\"\n    },\n    100: {\n      value: \"hsl(0, 100%, 15%)\"\n    }\n  },\n  orange: {\n    10: {\n      value: \"hsl(30, 75%, 95%)\"\n    },\n    20: {\n      value: \"hsl(30, 75%, 85%)\"\n    },\n    40: {\n      value: \"hsl(30, 75%, 75%)\"\n    },\n    60: {\n      value: \"hsl(30, 50%, 50%)\"\n    },\n    80: {\n      value: \"hsl(30, 95%, 30%)\"\n    },\n    90: {\n      value: \"hsl(30, 100%, 20%)\"\n    },\n    100: {\n      value: \"hsl(30, 100%, 15%)\"\n    }\n  },\n  yellow: {\n    10: {\n      value: \"hsl(60, 75%, 95%)\"\n    },\n    20: {\n      value: \"hsl(60, 75%, 85%)\"\n    },\n    40: {\n      value: \"hsl(60, 75%, 75%)\"\n    },\n    60: {\n      value: \"hsl(60, 50%, 50%)\"\n    },\n    80: {\n      value: \"hsl(60, 95%, 30%)\"\n    },\n    90: {\n      value: \"hsl(60, 100%, 20%)\"\n    },\n    100: {\n      value: \"hsl(60, 100%, 15%)\"\n    }\n  },\n  green: {\n    10: {\n      value: \"hsl(130, 60%, 95%)\"\n    },\n    20: {\n      value: \"hsl(130, 60%, 90%)\"\n    },\n    40: {\n      value: \"hsl(130, 44%, 63%)\"\n    },\n    60: {\n      value: \"hsl(130, 43%, 46%)\"\n    },\n    80: {\n      value: \"hsl(130, 33%, 37%)\"\n    },\n    90: {\n      value: \"hsl(130, 27%, 29%)\"\n    },\n    100: {\n      value: \"hsl(130, 22%, 23%)\"\n    }\n  },\n  teal: {\n    10: {\n      value: \"hsl(190, 75%, 95%)\"\n    },\n    20: {\n      value: \"hsl(190, 75%, 85%)\"\n    },\n    40: {\n      value: \"hsl(190, 70%, 70%)\"\n    },\n    60: {\n      value: \"hsl(190, 50%, 50%)\"\n    },\n    80: {\n      value: \"hsl(190, 95%, 30%)\"\n    },\n    90: {\n      value: \"hsl(190, 100%, 20%)\"\n    },\n    100: {\n      value: \"hsl(190, 100%, 15%)\"\n    }\n  },\n  blue: {\n    10: {\n      value: \"hsl(220, 95%, 95%)\"\n    },\n    20: {\n      value: \"hsl(220, 85%, 85%)\"\n    },\n    40: {\n      value: \"hsl(220, 70%, 70%)\"\n    },\n    60: {\n      value: \"hsl(220, 50%, 50%)\"\n    },\n    80: {\n      value: \"hsl(220, 95%, 30%)\"\n    },\n    90: {\n      value: \"hsl(220, 100%, 20%)\"\n    },\n    100: {\n      value: \"hsl(220, 100%, 15%)\"\n    }\n  },\n  purple: {\n    10: {\n      value: \"hsl(300, 95%, 95%)\"\n    },\n    20: {\n      value: \"hsl(300, 85%, 85%)\"\n    },\n    40: {\n      value: \"hsl(300, 70%, 70%)\"\n    },\n    60: {\n      value: \"hsl(300, 50%, 50%)\"\n    },\n    80: {\n      value: \"hsl(300, 95%, 30%)\"\n    },\n    90: {\n      value: \"hsl(300, 100%, 20%)\"\n    },\n    100: {\n      value: \"hsl(300, 100%, 15%)\"\n    }\n  },\n  pink: {\n    10: {\n      value: \"hsl(340, 95%, 95%)\"\n    },\n    20: {\n      value: \"hsl(340, 90%, 85%)\"\n    },\n    40: {\n      value: \"hsl(340, 70%, 70%)\"\n    },\n    60: {\n      value: \"hsl(340, 50%, 50%)\"\n    },\n    80: {\n      value: \"hsl(340, 95%, 30%)\"\n    },\n    90: {\n      value: \"hsl(340, 100%, 20%)\"\n    },\n    100: {\n      value: \"hsl(340, 100%, 15%)\"\n    }\n  },\n  neutral: {\n    10: {\n      value: \"hsl(210, 5%, 98%)\"\n    },\n    20: {\n      value: \"hsl(210, 5%, 94%)\"\n    },\n    40: {\n      value: \"hsl(210, 5%, 87%)\"\n    },\n    60: {\n      value: \"hsl(210, 6%, 70%)\"\n    },\n    80: {\n      value: \"hsl(210, 10%, 40%)\"\n    },\n    90: {\n      value: \"hsl(210, 25%, 25%)\"\n    },\n    100: {\n      value: \"hsl(210, 50%, 10%)\"\n    }\n  },\n  brand: {\n    primary: {\n      10: {\n        value: \"{colors.teal.10.value}\"\n      },\n      20: {\n        value: \"{colors.teal.20.value}\"\n      },\n      40: {\n        value: \"{colors.teal.40.value}\"\n      },\n      60: {\n        value: \"{colors.teal.60.value}\"\n      },\n      80: {\n        value: \"{colors.teal.80.value}\"\n      },\n      90: {\n        value: \"{colors.teal.90.value}\"\n      },\n      100: {\n        value: \"{colors.teal.100.value}\"\n      }\n    },\n    secondary: {\n      10: {\n        value: \"{colors.purple.10.value}\"\n      },\n      20: {\n        value: \"{colors.purple.20.value}\"\n      },\n      40: {\n        value: \"{colors.purple.40.value}\"\n      },\n      60: {\n        value: \"{colors.purple.60.value}\"\n      },\n      80: {\n        value: \"{colors.purple.80.value}\"\n      },\n      90: {\n        value: \"{colors.purple.90.value}\"\n      },\n      100: {\n        value: \"{colors.purple.100.value}\"\n      }\n    }\n  },\n  font: {\n    primary: {\n      value: \"{colors.neutral.100.value}\"\n    },\n    secondary: {\n      value: \"{colors.neutral.90.value}\"\n    },\n    tertiary: {\n      value: \"{colors.neutral.80.value}\"\n    },\n    disabled: {\n      value: \"{colors.font.tertiary.value}\"\n    },\n    inverse: {\n      value: \"{colors.white.value}\"\n    },\n    interactive: {\n      value: \"{colors.brand.primary.80.value}\"\n    },\n    hover: {\n      value: \"{colors.brand.primary.90.value}\"\n    },\n    focus: {\n      value: \"{colors.brand.primary.100.value}\"\n    },\n    active: {\n      value: \"{colors.brand.primary.100.value}\"\n    },\n    info: {\n      value: \"{colors.blue.90.value}\"\n    },\n    warning: {\n      value: \"{colors.orange.90.value}\"\n    },\n    error: {\n      value: \"{colors.red.90.value}\"\n    },\n    success: {\n      value: \"{colors.green.90.value}\"\n    }\n  },\n  background: {\n    primary: {\n      value: \"{colors.white.value}\"\n    },\n    secondary: {\n      value: \"{colors.neutral.10.value}\"\n    },\n    tertiary: {\n      value: \"{colors.neutral.20.value}\"\n    },\n    disabled: {\n      value: \"{colors.background.tertiary.value}\"\n    },\n    info: {\n      value: \"{colors.blue.20.value}\"\n    },\n    warning: {\n      value: \"{colors.orange.20.value}\"\n    },\n    error: {\n      value: \"{colors.red.20.value}\"\n    },\n    success: {\n      value: \"{colors.green.20.value}\"\n    }\n  },\n  border: {\n    primary: {\n      value: \"{colors.neutral.60.value}\"\n    },\n    secondary: {\n      value: \"{colors.neutral.40.value}\"\n    },\n    tertiary: {\n      value: \"{colors.neutral.20.value}\"\n    },\n    disabled: {\n      value: \"{colors.border.tertiary.value}\"\n    },\n    focus: {\n      value: \"{colors.brand.primary.100.value}\"\n    },\n    error: {\n      value: \"{colors.red.80.value}\"\n    }\n  },\n  shadow: {\n    primary: {\n      value: \"hsla(210, 50%, 10%, 0.25)\"\n    },\n    secondary: {\n      value: \"hsla(210, 50%, 10%, 0.15)\"\n    },\n    tertiary: {\n      value: \"hsla(210, 50%, 10%, 0.05)\"\n    }\n  },\n  overlay: {\n    10: {\n      value: \"hsla(0, 0%, 0%, 0.1)\"\n    },\n    20: {\n      value: \"hsla(0, 0%, 0%, 0.2)\"\n    },\n    30: {\n      value: \"hsla(0, 0%, 0%, 0.3)\"\n    },\n    40: {\n      value: \"hsla(0, 0%, 0%, 0.4)\"\n    },\n    50: {\n      value: \"hsla(0, 0%, 0%, 0.5)\"\n    },\n    60: {\n      value: \"hsla(0, 0%, 0%, 0.6)\"\n    },\n    70: {\n      value: \"hsla(0, 0%, 0%, 0.7)\"\n    },\n    80: {\n      value: \"hsla(0, 0%, 0%, 0.8)\"\n    },\n    90: {\n      value: \"hsla(0, 0%, 0%, 0.9)\"\n    }\n  },\n  black: {\n    value: \"hsl(0, 0%, 0%)\"\n  },\n  white: {\n    value: \"hsl(0, 0%, 100%)\"\n  },\n  transparent: {\n    value: \"transparent\"\n  }\n};\no();\nvar to = {\n  default: {\n    variable: {\n      value: `'InterVariable', 'Inter var', 'Inter', -apple-system, BlinkMacSystemFont,\n        'Helvetica Neue', 'Segoe UI', Oxygen, Ubuntu, Cantarell, 'Open Sans',\n        sans-serif`\n    },\n    static: {\n      value: `'Inter', -apple-system, BlinkMacSystemFont, 'Helvetica Neue',\n        'Segoe UI', Oxygen, Ubuntu, Cantarell, 'Open Sans', sans-serif`\n    }\n  }\n};\no();\nvar no = {\n  xxxs: {\n    value: \"0.375rem\"\n  },\n  xxs: {\n    value: \"0.5rem\"\n  },\n  xs: {\n    value: \"0.75rem\"\n  },\n  small: {\n    value: \"0.875rem\"\n  },\n  medium: {\n    value: \"1rem\"\n  },\n  large: {\n    value: \"1.25rem\"\n  },\n  xl: {\n    value: \"1.5rem\"\n  },\n  xxl: {\n    value: \"2rem\"\n  },\n  xxxl: {\n    value: \"3rem\"\n  },\n  xxxxl: {\n    value: \"5rem\"\n  }\n};\no();\nvar io = {\n  hairline: {\n    value: 100\n  },\n  thin: {\n    value: 200\n  },\n  light: {\n    value: 300\n  },\n  normal: {\n    value: 400\n  },\n  medium: {\n    value: 500\n  },\n  semibold: {\n    value: 600\n  },\n  bold: {\n    value: 700\n  },\n  extrabold: {\n    value: 800\n  },\n  black: {\n    value: 900\n  }\n};\no();\nvar so = {\n  small: {\n    value: \"1.5\"\n  },\n  medium: {\n    value: \"1.75\"\n  },\n  large: {\n    value: \"2\"\n  }\n};\no();\nvar lo = {\n  0: {\n    value: \"0\"\n  },\n  10: {\n    value: \"0.1\"\n  },\n  20: {\n    value: \"0.2\"\n  },\n  30: {\n    value: \"0.3\"\n  },\n  40: {\n    value: \"0.4\"\n  },\n  50: {\n    value: \"0.5\"\n  },\n  60: {\n    value: \"0.6\"\n  },\n  70: {\n    value: \"0.7\"\n  },\n  80: {\n    value: \"0.8\"\n  },\n  90: {\n    value: \"0.9\"\n  },\n  100: {\n    value: \"1\"\n  }\n};\no();\nvar uo = {\n  small: {\n    value: \"1px\"\n  },\n  medium: {\n    value: \"2px\"\n  },\n  large: {\n    value: \"3px\"\n  }\n};\no();\nvar co = {\n  small: {\n    value: \"1px\"\n  },\n  medium: {\n    value: \"2px\"\n  },\n  large: {\n    value: \"3px\"\n  }\n};\no();\nvar mo = {\n  xs: {\n    value: \"0.125rem\"\n  },\n  small: {\n    value: \"0.25rem\"\n  },\n  medium: {\n    value: \"0.5rem\"\n  },\n  large: {\n    value: \"1rem\"\n  },\n  xl: {\n    value: \"2rem\"\n  },\n  xxl: {\n    value: \"4rem\"\n  },\n  xxxl: {\n    value: \"8rem\"\n  }\n};\no();\nvar vo = {\n  small: {\n    value: {\n      offsetX: \"0px\",\n      offsetY: \"2px\",\n      blurRadius: \"4px\",\n      color: \"{colors.shadow.tertiary.value}\"\n    }\n  },\n  medium: {\n    value: {\n      offsetX: \"0px\",\n      offsetY: \"2px\",\n      blurRadius: \"6px\",\n      color: \"{colors.shadow.secondary.value}\"\n    }\n  },\n  large: {\n    value: {\n      offsetX: \"0px\",\n      offsetY: \"4px\",\n      blurRadius: \"12px\",\n      color: \"{colors.shadow.primary.value}\"\n    }\n  }\n};\no();\nvar po = {\n  xxxs: {\n    value: \"0.25rem\"\n  },\n  xxs: {\n    value: \"0.375rem\"\n  },\n  xs: {\n    value: \"0.5rem\"\n  },\n  small: {\n    value: \"0.75rem\"\n  },\n  medium: {\n    value: \"1rem\"\n  },\n  large: {\n    value: \"1.5rem\"\n  },\n  xl: {\n    value: \"2.0rem\"\n  },\n  xxl: {\n    value: \"3.0rem\"\n  },\n  xxxl: {\n    value: \"4.5rem\"\n  },\n  relative: {\n    xxxs: {\n      value: \"0.25em\"\n    },\n    xxs: {\n      value: \"0.375rem\"\n    },\n    xs: {\n      value: \"0.5em\"\n    },\n    small: {\n      value: \"0.75em\"\n    },\n    medium: {\n      value: \"1em\"\n    },\n    large: {\n      value: \"1.5em\"\n    },\n    xl: {\n      value: \"2.0em\"\n    },\n    xxl: {\n      value: \"3.0em\"\n    },\n    xxxl: {\n      value: \"4.5em\"\n    }\n  }\n};\no();\nvar go = {\n  short: {\n    value: \"100ms\"\n  },\n  medium: {\n    value: \"250ms\"\n  },\n  long: {\n    value: \"500ms\"\n  }\n};\no();\nvar fo = {\n  slideX: {\n    small: {\n      value: \"translateX(0.5em)\"\n    },\n    medium: {\n      value: \"translateX(1em)\"\n    },\n    large: {\n      value: \"translateX(2em)\"\n    }\n  }\n};\nvar Ur = {\n  components: _r(),\n  borderWidths: ro,\n  colors: ao,\n  fonts: to,\n  fontSizes: no,\n  fontWeights: io,\n  lineHeights: so,\n  opacities: lo,\n  outlineOffsets: uo,\n  outlineWidths: co,\n  radii: mo,\n  shadows: vo,\n  space: po,\n  time: go,\n  transforms: fo\n};\no();\nvar Nr = {\n  values: {\n    base: 0,\n    small: 480,\n    medium: 768,\n    large: 992,\n    xl: 1280,\n    xxl: 1536\n  },\n  defaultBreakpoint: \"base\"\n};\nvar Z = {\n  tokens: Ur,\n  breakpoints: Nr,\n  name: \"base-theme\"\n};\no();\nimport la from \"lodash/kebabCase\";\nimport ua from \"style-dictionary/lib/utils/references/usesReference\";\nvar da = \"amplify\";\n\nfunction F(r) {\n  if (ua(r)) {\n    let e = r.replace(/\\{|\\}/g, \"\").replace(\".value\", \"\").split(\".\");\n    return `var(--${ve({\n      path: e\n    })})`;\n  }\n\n  return r;\n}\n\nfunction Or(r) {\n  let {\n    value: e\n  } = r;\n  if (typeof e == \"string\") return F(e);\n\n  if (typeof e == \"object\" && \"offsetX\" in e) {\n    let {\n      offsetX: a = \"\",\n      offsetY: t = \"\",\n      blurRadius: s = \"\",\n      spreadRadius: l = \"\",\n      color: u = \"\"\n    } = e;\n    return [F(a), F(t), F(s), F(l), F(u)].join(\" \");\n  }\n\n  return e;\n}\n\nfunction ve(_ref9) {\n  let {\n    path: r = []\n  } = _ref9;\n  return `${la([da, ...r].join(\" \"))}`;\n}\n\nfunction ma(r, e) {\n  let a = `--${ve({\n    path: e\n  })}`,\n      {\n    value: t\n  } = r;\n  return {\n    name: a,\n    path: e,\n    value: Or(r),\n    original: t,\n    toString: () => `var(${a})`\n  };\n}\n\nfunction pe(r) {\n  let e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  let a = {};\n  if (r.hasOwnProperty(\"value\")) return ma(r, e);\n\n  for (let t in r) r.hasOwnProperty(t) && (a[t] = pe(r[t], e.concat(t)));\n\n  return a;\n}\n\nfunction zr(r) {\n  let e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Z;\n  let a = ca([{}, e, r]),\n      t = pe(a.tokens),\n      {\n    breakpoints: s,\n    name: l\n  } = a,\n      u = `[data-amplify-theme=\"${l}\"] {\n` + Fr(t).map(d => `${d.name}: ${d.value};`).join(`\n`) + `\n}\n`,\n      v = [];\n  return a.overrides && (v = a.overrides.map(d => {\n    let b = pe(d.tokens),\n        g = Fr(b).map(f => `${f.name}: ${f.value};`).join(`\n`);\n    return \"selector\" in d && (u += `\n${d.selector} {\n${g}\n}\n`), \"mediaQuery\" in d && (u += `\n@media (${d.mediaQuery}) {\n  [data-amplify-theme=\"${l}\"] {\n    ${g}\n  }\n}\n`), \"breakpoint\" in d && (u += `\n@media (min-width: ${a.breakpoints.values[d.breakpoint]}px) {\n  [data-amplify-theme=\"${l}\"] {\n    ${g}\n  }\n}\n`), \"colorMode\" in d && (u += `\n@media (prefers-color-scheme: ${d.colorMode}) {\n          [data-amplify-theme=\"${l}\"][data-amplify-color-mode=\"system\"] {\n${g}\n}\n        }\n`, u += `\n[data-amplify-theme=\"${l}\"][data-amplify-color-mode=\"${d.colorMode}\"] {\n${g}\n}\n`), y(m({}, d), {\n      tokens: b\n    });\n  })), {\n    tokens: t,\n    breakpoints: s,\n    name: l,\n    cssText: u,\n    overrides: v\n  };\n}\n\no();\no();\n\nfunction ys(r) {\n  return typeof r == \"object\" ? r.hasOwnProperty(\"value\") : !1;\n}\n\nvar As = zr({\n  name: \"default-theme\"\n}, Z);\nexport { C as AuthChallengeNames, xt as DefaultTexts, qr as FederatedIdentityProviders, q as LoginMechanismArray, M as authInputAttributes, za as censorAllButFirstAndLast, Ba as censorPhoneNumber, qa as countryDialCodes, Sn as createAuthenticatorMachine, zr as createTheme, As as defaultTheme, jr as getActorContext, Q as getActorState, _a as getAliasInfoFromContext, Ua as getConfiguredAliases, $r as getSendEventAliases, Kr as getServiceContextFacade, Na as getServiceFacade, wt as hasTranslation, ys as isDesignToken, Oa as listenToAuthHub, ga as signUpFieldsWithDefault, fa as signUpFieldsWithoutDefault, kt as translate, Tt as translations };","map":{"version":3,"sources":["../../../../node_modules/tsup/assets/esm_shims.js","../../src/theme/tokens/components/alert.js","../../src/theme/tokens/components/badge.js","../../src/theme/tokens/components/button.js","../../src/theme/tokens/components/card.js","../../src/theme/tokens/components/checkbox.js","../../src/theme/tokens/components/checkboxField.js","../../src/theme/tokens/components/countryCodeSelect.js","../../src/theme/tokens/components/divider.js","../../src/theme/tokens/components/expander.js","../../src/theme/tokens/components/field.js","../../src/theme/tokens/components/fieldControl.js","../../src/theme/tokens/components/fieldGroup.js","../../src/theme/tokens/components/fieldMessages.js","../../src/theme/tokens/components/flex.js","../../src/theme/tokens/components/heading.js","../../src/theme/tokens/components/icon.js","../../src/theme/tokens/components/image.js","../../src/theme/tokens/components/link.js","../../src/theme/tokens/components/loader.js","../../src/theme/tokens/components/menu.js","../../src/theme/tokens/components/pagination.js","../../src/theme/tokens/components/phoneNumberField.js","../../src/theme/tokens/components/placeholder.js","../../src/theme/tokens/components/radio.js","../../src/theme/tokens/components/rating.js","../../src/theme/tokens/components/select.js","../../src/theme/tokens/components/selectField.js","../../src/theme/tokens/components/sliderField.js","../../src/theme/tokens/components/stepperField.js","../../src/theme/tokens/components/switchField.js","../../src/theme/tokens/components/table.js","../../src/theme/tokens/components/tabs.js","../../src/theme/tokens/components/text.js","../../src/theme/tokens/components/toggleButton.js","../../src/theme/tokens/components/toggleButtonGroup.js","../../src/theme/tokens/components/index.js","../../src/index.ts","../../src/helpers/auth.ts","../../src/types/index.ts","../../src/types/authMachine.ts","../../src/types/validator.ts","../../src/helpers/utils.ts","../../src/i18n/index.ts","../../src/i18n/country-dial-codes.ts","../../src/i18n/translations.ts","../../src/i18n/dictionaries/index.ts","../../src/i18n/dictionaries/authenticator/index.ts","../../src/i18n/dictionaries/authenticator/de.ts","../../src/i18n/dictionaries/authenticator/en.ts","../../src/i18n/dictionaries/authenticator/es.ts","../../src/i18n/dictionaries/authenticator/fr.ts","../../src/i18n/dictionaries/authenticator/it.ts","../../src/i18n/dictionaries/authenticator/ja.ts","../../src/i18n/dictionaries/authenticator/kr.ts","../../src/i18n/dictionaries/authenticator/nl.ts","../../src/i18n/dictionaries/authenticator/pl.ts","../../src/i18n/dictionaries/authenticator/pt.ts","../../src/i18n/dictionaries/authenticator/zh.ts","../../src/i18n/dictionaries/authenticator/sv.ts","../../src/i18n/dictionaries/authenticator/defaultTexts.ts","../../src/machines/index.ts","../../src/machines/authenticator/index.ts","../../src/machines/authenticator/actions.ts","../../src/machines/authenticator/actors/index.ts","../../src/machines/authenticator/actors/signIn.ts","../../src/validators/index.ts","../../src/machines/authenticator/defaultServices.ts","../../src/machines/authenticator/actors/signOut.ts","../../src/machines/authenticator/actors/resetPassword.ts","../../src/machines/authenticator/signUp.ts","../../src/theme/index.ts","../../src/theme/createTheme.ts","../../src/theme/baseTheme.ts","../../src/theme/tokens/index.ts","../../src/theme/tokens/borderWidths.ts","../../src/theme/tokens/colors.ts","../../src/theme/tokens/fonts.ts","../../src/theme/tokens/fontSizes.ts","../../src/theme/tokens/fontWeights.ts","../../src/theme/tokens/lineHeights.ts","../../src/theme/tokens/opacities.ts","../../src/theme/tokens/outlineOffsets.ts","../../src/theme/tokens/outlineWidths.ts","../../src/theme/tokens/radii.ts","../../src/theme/tokens/shadows.ts","../../src/theme/tokens/space.ts","../../src/theme/tokens/time.ts","../../src/theme/tokens/transforms.ts","../../src/theme/breakpoints.ts","../../src/theme/utils.ts","../../src/theme/types.ts","../../src/theme/tokens/types/designToken.ts"],"names":[],"mappings":"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","sourcesContent":["// Shim globals in esm bundle\nimport { fileURLToPath } from 'url'\nimport path from 'path'\n\nconst getFilename = () => fileURLToPath(import.meta.url)\nconst getDirname = () => path.dirname(getFilename())\n\nexport const __dirname = /* @__PURE__ */ getDirname()\nexport const __filename = /* @__PURE__ */ getFilename()\n","module.exports = {\n  // Default styles\n  alignItems: { value: 'center' },\n  justifyContent: { value: 'space-between' },\n  color: { value: '{colors.font.primary.value}' },\n  backgroundColor: { value: '{colors.background.tertiary.value}' },\n  paddingBlock: { value: '{space.small.value}' },\n  paddingInline: { value: '{space.medium.value}' },\n\n  icon: {\n    size: { value: '{fontSizes.xl.value}' },\n  },\n\n  heading: {\n    fontSize: { value: '{fontSizes.medium.value}' },\n    fontWeight: { value: '{fontWeights.bold.value}' },\n  },\n\n  // Variations\n  info: {\n    color: { value: '{colors.font.info.value}' },\n    backgroundColor: { value: '{colors.background.info.value}' },\n  },\n\n  error: {\n    color: { value: '{colors.font.error.value}' },\n    backgroundColor: { value: '{colors.background.error.value}' },\n  },\n\n  warning: {\n    color: { value: '{colors.font.warning.value}' },\n    backgroundColor: { value: '{colors.background.warning.value}' },\n  },\n\n  success: {\n    color: { value: '{colors.font.success.value}' },\n    backgroundColor: { value: '{colors.background.success.value}' },\n  },\n};\n","module.exports = {\n  // Default styles\n  color: { value: '{colors.font.primary.value}' },\n  lineHeight: { value: 1 },\n  fontWeight: { value: '{fontWeights.semibold.value}' },\n  fontSize: { value: '{fontSizes.small.value}' },\n  textAlign: { value: 'center' },\n  paddingVertical: { value: '{space.xs.value}' },\n  paddingHorizontal: { value: '{space.small.value}' },\n  backgroundColor: { value: '{colors.background.tertiary.value}' },\n  // An arbitrarily large value to ensure that the left and right sides of the badge are perfectly rounded for any size variation\n  borderRadius: { value: '{radii.xl.value}' },\n\n  // Variations\n  info: {\n    color: { value: '{colors.font.info.value}' },\n    backgroundColor: { value: '{colors.background.info.value}' },\n  },\n\n  warning: {\n    color: { value: '{colors.font.warning.value}' },\n    backgroundColor: { value: '{colors.background.warning.value}' },\n  },\n\n  success: {\n    color: { value: '{colors.font.success.value}' },\n    backgroundColor: { value: '{colors.background.success.value}' },\n  },\n\n  error: {\n    color: { value: '{colors.font.error.value}' },\n    backgroundColor: { value: '{colors.background.error.value}' },\n  },\n\n  // Sizes\n  small: {\n    fontSize: { value: '{fontSizes.xs.value}' },\n    paddingVertical: { value: '{space.xxs.value}' },\n    paddingHorizontal: { value: '{space.xs.value}' },\n  },\n  // medium is the default size\n  large: {\n    fontSize: { value: '{fontSizes.medium.value}' },\n    paddingVertical: { value: '{space.small.value}' },\n    paddingHorizontal: { value: '{space.medium.value}' },\n  },\n};\n","module.exports = {\n  // shared styles\n  fontWeight: { value: '{fontWeights.bold.value}' },\n  transitionDuration: {\n    value: '{components.fieldcontrol.transitionDuration.value}',\n  },\n  fontSize: { value: '{components.fieldcontrol.fontSize.value}' },\n  lineHeight: { value: '{components.fieldcontrol.lineHeight.value}' },\n  paddingBlockStart: {\n    value: '{components.fieldcontrol.paddingBlockStart.value}',\n  },\n  paddingBlockEnd: {\n    value: '{components.fieldcontrol.paddingBlockEnd.value}',\n  },\n  paddingInlineStart: {\n    value: '{components.fieldcontrol.paddingInlineStart.value}',\n  },\n  paddingInlineEnd: {\n    value: '{components.fieldcontrol.paddingInlineEnd.value}',\n  },\n  borderColor: { value: '{components.fieldcontrol.borderColor.value}' },\n  borderWidth: { value: '{components.fieldcontrol.borderWidth.value}' },\n  borderStyle: { value: '{components.fieldcontrol.borderStyle.value}' },\n  borderRadius: { value: '{components.fieldcontrol.borderRadius.value}' },\n  color: { value: '{colors.font.primary.value}' },\n\n  _hover: {\n    color: { value: '{colors.font.focus.value}' },\n    backgroundColor: { value: '{colors.brand.primary.10.value}' },\n    borderColor: { value: '{colors.brand.primary.60.value}' },\n  },\n  _focus: {\n    color: { value: '{colors.font.focus.value}' },\n    backgroundColor: { value: '{colors.brand.primary.10.value}' },\n    borderColor: { value: '{colors.border.focus.value}' },\n    boxShadow: { value: '{components.fieldcontrol._focus.boxShadow.value}' },\n  },\n  _active: {\n    color: { value: '{colors.font.active.value}' },\n    backgroundColor: { value: '{colors.brand.primary.20.value}' },\n    borderColor: { value: '{colors.brand.primary.100.value}' },\n  },\n  _loading: {\n    color: { value: '{colors.font.tertiary.value}' },\n    backgroundColor: { value: 'transparent' },\n    borderColor: { value: '{colors.border.tertiary.value}' },\n  },\n  _disabled: {\n    color: { value: '{colors.font.disabled.value}' },\n    backgroundColor: { value: 'transparent' },\n    borderColor: { value: '{colors.border.tertiary.value}' },\n  },\n\n  // variations\n  primary: {\n    borderColor: { value: 'transparent' },\n    borderWidth: { value: '{borderWidths.small.value}' },\n    borderStyle: { value: 'solid' },\n    backgroundColor: { value: '{colors.brand.primary.80.value}' },\n    color: { value: '{colors.font.inverse.value}' },\n    _disabled: {\n      borderColor: { value: 'transparent' },\n      backgroundColor: { value: '{colors.background.disabled.value}' },\n      color: { value: '{colors.font.disabled.value}' },\n    },\n    _loading: {\n      borderColor: { value: 'transparent' },\n      backgroundColor: { value: '{colors.background.tertiary.value}' },\n      color: { value: '{colors.font.inverse.value}' },\n    },\n    _hover: {\n      borderColor: { value: 'transparent' },\n      backgroundColor: { value: '{colors.brand.primary.90.value}' },\n      color: { value: '{colors.font.inverse.value}' },\n    },\n    _focus: {\n      borderColor: { value: 'transparent' },\n      backgroundColor: { value: '{colors.brand.primary.90.value}' },\n      color: { value: '{colors.font.inverse.value}' },\n      boxShadow: { value: '{components.fieldcontrol._focus.boxShadow.value}' },\n    },\n    _active: {\n      borderColor: { value: 'transparent' },\n      backgroundColor: { value: '{colors.brand.primary.100.value}' },\n      color: { value: '{colors.font.inverse.value}' },\n    },\n  },\n\n  menu: {\n    borderWidth: { value: 0 },\n    backgroundColor: { value: 'transparent' },\n    justifyContent: { value: 'start' },\n    // Focus and hover styles are identical for menu variation\n    // because for Menu primitive, menu items are forced to be focused even\n    // for mouse interactions, making it impossible to distinguish the two interactions\n    _hover: {\n      color: { value: '{colors.font.inverse.value}' },\n      backgroundColor: { value: '{colors.brand.primary.80.value}' },\n    },\n    _focus: {\n      color: { value: '{colors.font.inverse.value}' },\n      backgroundColor: { value: '{colors.brand.primary.80.value}' },\n    },\n    _active: {\n      color: { value: '{colors.font.inverse.value}' },\n      backgroundColor: { value: '{colors.brand.primary.90.value}' },\n    },\n    _disabled: {\n      color: { value: '{colors.font.disabled.value}' },\n    },\n  },\n\n  link: {\n    borderWidth: { value: 0 },\n    borderColor: { value: 'transparent' },\n    backgroundColor: { value: 'transparent' },\n    color: { value: '{colors.font.interactive.value}' },\n    _hover: {\n      borderColor: { value: 'transparent' },\n      backgroundColor: { value: '{colors.brand.primary.10.value}' },\n      color: { value: '{colors.font.hover.value}' },\n    },\n    _focus: {\n      borderColor: { value: 'transparent' },\n      backgroundColor: { value: '{colors.brand.primary.10.value}' },\n      color: { value: '{colors.font.focus.value}' },\n      boxShadow: { value: '{components.fieldcontrol._focus.boxShadow.value}' },\n    },\n    _active: {\n      borderColor: { value: 'transparent' },\n      backgroundColor: { value: '{colors.brand.primary.20.value}' },\n      color: { value: '{colors.font.active.value}' },\n    },\n    _disabled: {\n      borderColor: { value: 'transparent' },\n      backgroundColor: { value: 'transparent' },\n      color: { value: '{colors.font.disabled.value}' },\n    },\n    _loading: {\n      borderColor: { value: 'transparent' },\n      backgroundColor: { value: 'transparent' },\n      color: { value: '{colors.font.disabled.value}' },\n    },\n  },\n\n  // sizes\n  small: {\n    fontSize: { value: '{components.fieldcontrol.small.fontSize.value}' },\n    paddingBlockStart: {\n      value: '{components.fieldcontrol.small.paddingBlockStart.value}',\n    },\n    paddingBlockEnd: {\n      value: '{components.fieldcontrol.small.paddingBlockEnd.value}',\n    },\n    paddingInlineStart: {\n      value: '{components.fieldcontrol.small.paddingInlineStart.value}',\n    },\n    paddingInlineEnd: {\n      value: '{components.fieldcontrol.small.paddingInlineEnd.value}',\n    },\n  },\n  large: {\n    fontSize: { value: '{components.fieldcontrol.large.fontSize.value}' },\n    paddingBlockStart: {\n      value: '{components.fieldcontrol.large.paddingBlockStart.value}',\n    },\n    paddingBlockEnd: {\n      value: '{components.fieldcontrol.large.paddingBlockEnd.value}',\n    },\n    paddingInlineStart: {\n      value: '{components.fieldcontrol.large.paddingInlineStart.value}',\n    },\n    paddingInlineEnd: {\n      value: '{components.fieldcontrol.large.paddingInlineEnd.value}',\n    },\n  },\n};\n","module.exports = {\n  backgroundColor: { value: '{colors.background.primary.value}' },\n  borderRadius: { value: '{radii.xs.value}' },\n  borderWidth: { value: '0' },\n  borderStyle: { value: 'solid' },\n  borderColor: { value: 'transparent' },\n  boxShadow: { value: 'none' },\n  padding: { value: '{space.medium.value}' },\n\n  outlined: {\n    backgroundColor: { value: '{components.card.backgroundColor.value}' },\n    borderRadius: { value: '{radii.xs.value}' },\n    borderWidth: { value: '{borderWidths.small.value}' },\n    borderStyle: { value: 'solid' },\n    borderColor: { value: '{colors.border.primary.value}' },\n  },\n\n  elevated: {\n    backgroundColor: { value: '{components.card.backgroundColor.value}' },\n    borderRadius: { value: '{radii.xs.value}' },\n    borderWidth: { value: '0' },\n    borderStyle: { value: 'solid' },\n    borderColor: { value: 'transparent' },\n    boxShadow: { value: '{shadows.medium.value}' },\n  },\n};\n","module.exports = {\n  cursor: { value: 'pointer' },\n  alignItems: { value: 'center' },\n  _disabled: {\n    cursor: {\n      value: 'not-allowed',\n    },\n  },\n  button: {\n    position: { value: 'relative' },\n    alignItems: { value: 'center' },\n    justifyContent: { value: 'center' },\n    color: { value: '{colors.white.value}' },\n    before: {\n      width: { value: '100%' },\n      height: { value: '100%' },\n      borderWidth: { value: '{borderWidths.medium.value}' },\n      borderRadius: { value: '20%' },\n      borderStyle: { value: 'solid' },\n      borderColor: { value: '{colors.border.primary.value}' },\n    },\n    _focus: {\n      outlineColor: { value: '{colors.transparent.value}' },\n      outlineStyle: { value: 'solid' },\n      outlineWidth: { value: '{outlineWidths.medium.value}' },\n      outlineOffset: { value: '{outlineOffsets.medium.value}' },\n      borderColor: { value: '{colors.transparent.value}' },\n      boxShadow: {\n        value: {\n          offsetX: '0px',\n          offsetY: '0px',\n          blurRadius: '0px',\n          spreadRadius: '2px',\n          color: '{colors.border.focus.value}',\n        },\n      },\n    },\n    _disabled: {\n      borderColor: { value: '{colors.border.disabled.value}' },\n    },\n    _error: {\n      borderColor: { value: '{colors.border.error.value}' },\n      _focus: {\n        borderColor: { value: '{colors.transparent.value}' },\n        boxShadow: {\n          value: {\n            offsetX: '0px',\n            offsetY: '0px',\n            blurRadius: '0px',\n            spreadRadius: '2px',\n            color: '{colors.border.error.value}',\n          },\n        },\n      },\n    },\n  },\n  icon: {\n    backgroundColor: { value: '{colors.brand.primary.80.value}' },\n    borderRadius: { value: '20%' },\n    opacity: { value: '{opacities.0.value}' },\n    transform: { value: 'scale(0)' },\n    transitionProperty: { value: 'all' },\n    transitionDuration: { value: '{time.short.value}' },\n    transitionTimingFunction: { value: 'ease-in-out' },\n    _checked: {\n      opacity: { value: '{opacities.100.value}' },\n      transform: { value: 'scale(1)' },\n      _disabled: {\n        backgroundColor: { value: '{colors.background.disabled.value}' },\n      },\n    },\n  },\n  label: {\n    _disabled: {\n      color: { value: '{colors.font.disabled.value}' },\n    },\n  },\n};\n","module.exports = {\n  alignItems: { value: 'flex-start' },\n  alignContent: { value: 'center' },\n  flexDirection: { value: 'column' },\n  justifyContent: { value: 'center' },\n};\n","module.exports = {\n  height: {\n    value: '100%',\n  },\n};\n","module.exports = {\n  borderStyle: { value: 'solid' },\n  borderColor: { value: '{colors.border.primary.value}' },\n  borderWidth: { value: '{borderWidths.medium.value}' },\n\n  small: {\n    borderWidth: { value: '{borderWidths.small.value}' },\n  },\n\n  large: {\n    borderWidth: { value: '{borderWidths.large.value}' },\n  },\n\n  opacity: {\n    value: '{opacities.60.value}',\n  },\n};\n","module.exports = {\n  display: { value: 'block' },\n  backgroundColor: { value: '{colors.white.value}' },\n  borderRadius: { value: '{radii.medium.value}' },\n  boxShadow: {\n    value: '{shadows.large.value}',\n  },\n  width: { value: '100%' },\n  item: {\n    marginTop: { value: '1px' },\n    boxShadow: {\n      value: '{shadows.small.value}',\n    },\n    borderBottomLeftRadius: { value: '{radii.medium.value}' },\n    borderBottomRightRadius: { value: '{radii.medium.value}' },\n    borderTopLeftRadius: { value: '{radii.medium.value}' },\n    borderTopRightRadius: { value: '{radii.medium.value}' },\n    borderStartStartRadius: { value: '{radii.medium.value}' },\n    borderStartEndRadius: { value: '{radii.medium.value}' },\n    borderEndStartRadius: { value: '{radii.medium.value}' },\n    borderEndEndRadius: { value: '{radii.medium.value}' },\n    _focus: {\n      boxShadow: {\n        value: {\n          offsetX: '0',\n          offsetY: '0',\n          blurRadius: '0',\n          spreadRadius: '2px',\n          color: '{colors.border.focus.value}',\n        },\n      },\n    },\n  },\n  header: {\n    boxShadow: {\n      value: {\n        offsetX: '0',\n        offsetY: '1px',\n        blurRadius: '0',\n        color: '{colors.overlay.20.value}',\n      },\n    },\n  },\n  trigger: {\n    minHeight: { value: '3rem' },\n    paddingInlineStart: { value: '{space.large.value}' },\n    paddingInlineEnd: { value: '{space.large.value}' },\n    alignItems: { value: 'center' },\n    justifyContent: { value: 'space-between' },\n    _hover: {\n      backgroundColor: { value: '{colors.overlay.10.value}' },\n    },\n  },\n  content: {\n    paddingInlineStart: { value: '{space.large.value}' },\n    paddingInlineEnd: { value: '{space.large.value}' },\n    text: {\n      color: { value: '{colors.font.secondary.value}' },\n      paddingBlockStart: { value: '{space.medium.value}' },\n      paddingBlockEnd: { value: '{space.medium.value}' },\n    },\n    _open: {\n      animationDuration: { value: '{time.medium.value}' },\n      animationTimingFunction: { value: 'cubic-bezier(0.87, 0, 0.13, 1)' },\n    },\n    _closed: {\n      animationDuration: { value: '{time.medium.value}' },\n      animationTimingFunction: { value: 'cubic-bezier(0.87, 0, 0.13, 1)' },\n    },\n  },\n  icon: {\n    transitionDuration: { value: '{time.medium.value}' },\n    transitionTimingFunction: { value: 'cubic-bezier(0.87, 0, 0.13, 1)' },\n  },\n};\n","module.exports = {\n  // default styles\n  gap: { value: '{space.xs.value}' },\n  fontSize: { value: '{fontSizes.medium.value}' },\n\n  // Adjust base fontSize and gap for small and large sizes\n  small: {\n    gap: { value: '{space.xxxs.value}' },\n    fontSize: { value: '{fontSizes.small.value}' },\n  },\n  large: {\n    gap: { value: '{space.small.value}' },\n    fontSize: { value: '{fontSizes.large.value}' },\n  },\n\n  label: {\n    color: { value: '{colors.font.secondary.value}' },\n  },\n};\n","module.exports = {\n  borderStyle: { value: 'solid' },\n  borderColor: { value: '{colors.border.primary.value}' },\n  borderWidth: { value: '{borderWidths.small.value}' },\n  borderRadius: { value: '{radii.small.value}' },\n  color: { value: '{colors.font.primary.value}' },\n  paddingBlockStart: {\n    value: '{space.xs.value}',\n  },\n  paddingBlockEnd: {\n    value: '{space.xs.value}',\n  },\n  paddingInlineStart: {\n    value: '{space.medium.value}',\n  },\n  paddingInlineEnd: {\n    value: '{space.medium.value}',\n  },\n\n  fontSize: { value: '{components.field.fontSize.value}' },\n  lineHeight: { value: '{lineHeights.medium.value}' },\n  transitionDuration: { value: '{time.medium.value}' },\n  outlineColor: { value: '{colors.transparent.value}' },\n  outlineStyle: { value: 'solid' },\n  outlineWidth: { value: '{outlineWidths.medium.value}' },\n  outlineOffset: { value: '{outlineOffsets.medium.value}' },\n\n  small: {\n    fontSize: { value: '{components.field.small.fontSize.value}' },\n    paddingBlockStart: {\n      value: '{space.xs.value}',\n    },\n    paddingBlockEnd: {\n      value: '{space.xs.value}',\n    },\n    paddingInlineStart: {\n      value: '{space.small.value}',\n    },\n    paddingInlineEnd: {\n      value: '{space.small.value}',\n    },\n  },\n  large: {\n    fontSize: { value: '{components.field.large.fontSize.value}' },\n    paddingBlockStart: {\n      value: '{space.xs.value}',\n    },\n    paddingBlockEnd: {\n      value: '{space.xs.value}',\n    },\n    paddingInlineStart: {\n      value: '{space.medium.value}',\n    },\n    paddingInlineEnd: {\n      value: '{space.medium.value}',\n    },\n  },\n\n  quiet: {\n    borderStyle: { value: 'none' },\n    borderBlockEnd: {\n      value: '{borderWidths.small.value} solid {colors.border.primary.value}',\n    },\n    borderInlineStart: { value: 'none' },\n    borderInlineEnd: { value: 'none' },\n    borderBlockStart: { value: 'none' },\n    borderRadius: { value: '0' },\n    _focus: {\n      borderBlockEndColor: { value: '{colors.border.focus.value}' },\n      boxShadow: {\n        value: {\n          offsetX: '0px',\n          offsetY: '1px',\n          color: '{colors.border.focus.value}',\n        },\n      },\n    },\n    _error: {\n      borderBlockEndColor: { value: '{colors.border.error.value}' },\n      _focus: {\n        boxShadow: {\n          value: {\n            offsetX: '0px',\n            offsetY: '1px',\n            color: '{colors.border.error.value}',\n          },\n        },\n      },\n    },\n  },\n  _focus: {\n    // These focus styles have been calibrated to create\n    // a highly visible focus indicator per WCAG 2.1 guidliness:\n    // See: https://www.w3.org/WAI/WCAG21/Techniques/general/G195.html\n    //\n    // Key features:\n    // * Focus indicator area is at least the 1 CSS px border around the component.\n    // * Contrast between focused and unfocused states has a ratio of 3:1\n    //\n    // IMPORTANT: Must recalibrate if `colors.border.primary` or `colors.focus` are changed\n    borderColor: { value: '{colors.border.focus.value}' },\n    boxShadow: {\n      value: {\n        offsetX: '0px',\n        offsetY: '0px',\n        blurRadius: '0px',\n        spreadRadius: '1px',\n        color: '{colors.border.focus.value}',\n      },\n    },\n  },\n  _disabled: {\n    color: { value: '{colors.font.disabled.value}' },\n    cursor: { value: 'not-allowed' },\n    borderColor: { value: '{colors.transparent.value}' },\n    backgroundColor: { value: '{colors.background.disabled.value}' },\n  },\n  _error: {\n    borderColor: { value: '{colors.border.error.value}' },\n    _focus: {\n      boxShadow: {\n        value: {\n          offsetX: '0px',\n          offsetY: '0px',\n          blurRadius: '0px',\n          spreadRadius: '1px',\n          color: '{colors.border.error.value}',\n        },\n      },\n    },\n  },\n};\n","module.exports = {\n  gap: { value: 0 },\n  vertical: {\n    alignItems: { value: 'center' },\n  },\n  outer: {\n    alignItems: { value: 'center' },\n  },\n};\n","module.exports = {\n  error: {\n    color: { value: '{colors.font.error.value}' },\n    fontSize: { value: '{fontSizes.small.value}' },\n  },\n  description: {\n    color: { value: '{colors.font.secondary.value}' },\n    fontStyle: { value: 'italic' },\n    fontSize: { value: '{fontSizes.small.value}' },\n  },\n};\n","module.exports = {\n  gap: { value: '{space.medium.value}' },\n  justifyContent: { value: 'normal' },\n  alignItems: { value: 'stretch' },\n  alignContent: { value: 'normal' },\n  flexWrap: { value: 'nowrap' },\n};\n","module.exports = {\n  color: { value: '{colors.font.primary.value}' },\n  lineHeight: { value: 1.25 },\n\n  1: {\n    fontSize: { value: '{fontSizes.xxxxl.value}' },\n    fontWeight: { value: '{fontWeights.light.value}' },\n  },\n  2: {\n    fontSize: { value: '{fontSizes.xxxl.value}' },\n    fontWeight: { value: '{fontWeights.light.value}' },\n  },\n  3: {\n    fontSize: { value: '{fontSizes.xxl.value}' },\n    fontWeight: { value: '{fontWeights.normal.value}' },\n  },\n  4: {\n    fontSize: { value: '{fontSizes.xl.value}' },\n    fontWeight: { value: '{fontWeights.medium.value}' },\n  },\n  5: {\n    fontSize: { value: '{fontSizes.large.value}' },\n    fontWeight: { value: '{fontWeights.semibold.value}' },\n  },\n  6: {\n    fontSize: { value: '{fontSizes.medium.value}' },\n    fontWeight: { value: '{fontWeights.bold.value}' },\n  },\n};\n","module.exports = {\n  lineHeight: { value: 1 },\n  height: { value: '1em' }, // Should match height of parent container font-size\n};\n","module.exports = {\n  maxWidth: { value: '100%' },\n  height: { value: 'auto' },\n  objectFit: { value: 'initial' },\n  objectPosition: { value: 'initial' },\n};\n","module.exports = {\n  active: {\n    color: { value: '{colors.font.active.value}' },\n  },\n  color: { value: '{colors.font.interactive.value}' },\n  focus: {\n    color: { value: '{colors.font.focus.value}' },\n  },\n  hover: {\n    color: { value: '{colors.font.hover.value}' },\n  },\n  large: {\n    fontSize: { value: '{fontSizes.large.value}' },\n  },\n  small: {\n    fontSize: { value: '{fontSizes.small.value}' },\n  },\n  visited: {\n    color: { value: '{colors.font.interactive.value}' },\n  },\n};\n","module.exports = {\n  width: { value: '{fontSizes.xxl.value}' },\n  height: { value: '{fontSizes.xxl.value}' },\n  strokeEmpty: { value: '{colors.neutral.20.value}' },\n  strokeFilled: { value: '{colors.brand.primary.80.value}' },\n  strokeLinecap: { value: 'round' },\n  animationDuration: { value: '1s' },\n  small: {\n    width: { value: '{fontSizes.medium.value}' },\n    height: { value: '{fontSizes.medium.value}' },\n  },\n  large: {\n    width: { value: '{fontSizes.xxxl.value}' },\n    height: { value: '{fontSizes.xxxl.value}' },\n  },\n  linear: {\n    width: { value: '100%' },\n    minWidth: { value: '5rem' },\n    height: { value: '{fontSizes.xxs.value}' },\n    strokeWidth: { value: '{fontSizes.xxs.value}' },\n    strokeFilled: { value: '{colors.brand.primary.80.value}' },\n    strokeEmpty: { value: '{colors.neutral.20.value}' },\n    strokeLinecap: { value: 'round' },\n    animationDuration: { value: '1s' },\n    small: {\n      height: { value: '{fontSizes.xxxs.value}' },\n      strokeWidth: { value: '{fontSizes.xxxs.value}' },\n    },\n    large: {\n      height: { value: '{fontSizes.xs.value}' },\n      strokeWidth: { value: '{fontSizes.xs.value}' },\n    },\n  },\n};\n","module.exports = {\n  backgroundColor: { value: '{colors.white.value}' },\n  borderRadius: { value: '{radii.medium.value}' },\n  boxShadow: { value: '{shadows.large.value}' },\n  flexDirection: { value: 'column' },\n  gap: { value: 0 },\n  maxWidth: { value: '30rem' },\n  minWidth: { value: '14rem' },\n\n  small: {\n    width: { value: '{fontSizes.medium.value}' },\n    height: { value: '{fontSizes.medium.value}' },\n  },\n  large: {\n    width: { value: '{fontSizes.xxxl.value}' },\n    height: { value: '{fontSizes.xxxl.value}' },\n  },\n  item: {\n    minHeight: { value: '2.5rem' },\n    paddingInlineStart: { value: '{space.medium.value}' },\n    paddingInlineEnd: { value: '{space.medium.value}' },\n  },\n};\n","module.exports = {\n  current: {\n    alignItems: { value: 'center' },\n    justifyContent: { value: 'center' },\n    color: { value: '{colors.white.value}' },\n    fontSize: { value: '{fontSizes.small.value}' },\n    backgroundColor: { value: '{colors.overlay.40.value}' },\n  },\n  button: {\n    color: { value: '{colors.font.primary.value}' },\n    paddingInlineStart: { value: '{space.xxs.value}' },\n    paddingInlineEnd: { value: '{space.xxs.value}' },\n    transitionProperty: { value: 'background-color' },\n    transitionDuration: { value: '{time.medium.value}' },\n    hover: {\n      backgroundColor: { value: '{colors.overlay.10.value}' },\n      color: { value: '{colors.font.primary.value}' },\n    },\n    disabled: {\n      color: { value: '{colors.font.disabled.value}' },\n    },\n  },\n  ellipsis: {\n    alignItems: { value: 'baseline' },\n    justifyContent: { value: 'center' },\n    paddingInlineStart: { value: '{space.xs.value}' },\n    paddingInlineEnd: { value: '{space.xs.value}' },\n  },\n  itemContainer: {\n    marginLeft: { value: '{space.xxxs.value}' },\n    marginRight: { value: '{space.xxxs.value}' },\n  },\n  itemShared: {\n    height: { value: '{fontSizes.xxl.value}' },\n    minWidth: { value: '{fontSizes.xxl.value}' },\n    borderRadius: { value: '{fontSizes.medium.value}' },\n  },\n};\n","module.exports = {};\n","module.exports = {\n  borderRadius: { value: '{radii.small.value}' },\n  transitionDuration: { value: '{time.long.value}' },\n\n  startColor: { value: '{colors.background.secondary.value}' },\n  endColor: { value: '{colors.background.tertiary.value}' },\n\n  // sizes\n  small: {\n    height: { value: '{space.small.value}' },\n  },\n  default: {\n    height: { value: '{space.medium.value}' },\n  },\n  large: {\n    height: { value: '{space.large.value}' },\n  },\n};\n","module.exports = {\n  alignItems: { value: 'center' },\n  justifyContent: { value: 'flex-start' },\n  gap: { value: 'inherit' },\n  _disabled: { cursor: { value: 'not-allowed' } },\n  button: {\n    alignItems: { value: 'center' },\n    justifyContent: { value: 'center' },\n    width: { value: '{fontSizes.medium.value}' },\n    height: { value: '{fontSizes.medium.value}' },\n    boxSizing: { value: 'border-box' },\n    borderWidth: { value: '{borderWidths.medium.value}' },\n    borderStyle: { value: 'solid' },\n    borderRadius: { value: '50%' },\n    borderColor: { value: '{colors.border.primary.value}' },\n    color: { value: '{colors.white.value}' },\n    backgroundColor: { value: '{colors.white.value}' },\n    transitionProperty: { value: 'all' },\n    transitionDuration: { value: '{time.medium.value}' },\n    outlineColor: { value: '{colors.transparent.value}' },\n    outlineStyle: { value: 'solid' },\n    outlineWidth: { value: '{outlineWidths.medium.value}' },\n    outlineOffset: { value: '{outlineOffsets.medium.value}' },\n    // We want the dot inside the border to be a border-width from the border\n    padding: { value: '{borderWidths.medium.value}' },\n\n    small: {\n      width: { value: '{fontSizes.small.value}' },\n      height: { value: '{fontSizes.small.value}' },\n    },\n    large: {\n      width: { value: '{fontSizes.large.value}' },\n      height: { value: '{fontSizes.large.value}' },\n    },\n\n    _checked: {\n      color: {\n        value: '{colors.brand.primary.80.value}',\n      },\n      _disabled: { color: { value: '{colors.background.disabled.value}' } },\n    },\n\n    _focus: {\n      borderColor: { value: '{colors.border.focus.value}' },\n      boxShadow: { value: '{components.fieldcontrol._focus.boxShadow.value}' },\n    },\n\n    _error: {\n      borderColor: { value: '{colors.border.error.value}' },\n      _focus: {\n        boxShadow: {\n          value: '{components.fieldcontrol._error._focus.boxShadow.value}',\n        },\n      },\n    },\n\n    _disabled: {\n      borderColor: { value: '{colors.border.disabled.value}' },\n      backgroundColor: { value: '{colors.background.primary.value}' },\n    },\n  },\n\n  label: {\n    _disabled: {\n      color: {\n        value: '{colors.font.disabled.value}',\n      },\n    },\n  },\n};\n","module.exports = {\n  large: { size: { value: '{fontSizes.xxxl.value}' } },\n  default: { size: { value: '{fontSizes.xl.value}' } },\n  small: { size: { value: '{fontSizes.small.value}' } },\n  filled: { color: { value: '{colors.brand.secondary.80.value}' } },\n  empty: { color: { value: '{colors.background.tertiary.value}' } },\n};\n","module.exports = {\n  paddingInlineEnd: { value: '{space.xxl.value}' },\n  // wrappers\n  wrapper: {\n    flex: { value: '1' },\n    display: { value: 'block' },\n    position: { value: 'relative' },\n    cursor: { value: 'pointer' },\n  },\n  iconWrapper: {\n    alignItems: { value: 'center' },\n    position: { value: 'absolute' },\n    top: { value: '50%' },\n    right: { value: '{space.medium.value}' },\n    transform: { value: 'translateY(-50%)' },\n    pointerEvents: { value: 'none' },\n  },\n  // for Firefox only, to fix background color in darkmode\n  option: {\n    backgroundColor: { value: '{colors.background.primary.value}' },\n  },\n  whiteSpace: { value: 'nowrap' },\n  minWidth: { value: '6.5rem' },\n  small: {\n    minWidth: { value: '5.5rem' },\n  },\n  large: {\n    minWidth: { value: '7.5rem' },\n  },\n};\n","module.exports = {\n  flexDirection: {\n    value: 'column',\n  },\n};\n","module.exports = {\n  paddingBlock: { value: '{space.xs.value}' },\n\n  // The track is the thin background of the slider\n  track: {\n    backgroundColor: { value: '{colors.background.tertiary.value}' },\n    borderRadius: { value: '9999px' },\n    height: { value: '0.375rem' },\n    minWidth: { value: '10rem' },\n  },\n\n  // The range is the filled part of the track\n  range: {\n    backgroundColor: { value: '{colors.brand.primary.80.value}' },\n    borderRadius: { value: '9999px' },\n    _disabled: {\n      backgroundColor: { value: '{colors.background.disabled.value}' },\n    },\n  },\n\n  // The thumb is the circle above the track that the user drags\n  thumb: {\n    width: { value: '1.25rem' },\n    height: { value: '1.25rem' },\n    backgroundColor: { value: '{colors.background.primary.value}' },\n    boxShadow: { value: '{shadows.medium.value}' },\n    borderRadius: { value: '50%' },\n    borderWidth: { value: '{borderWidths.small.value}' },\n    borderColor: { value: '{colors.border.primary.value}' },\n    borderStyle: { value: 'solid' },\n    _disabled: {\n      backgroundColor: { value: '{colors.background.disabled.value}' },\n      borderColor: { value: 'transparent' },\n      boxShadow: { value: 'none' },\n    },\n    _hover: {\n      backgroundColor: { value: '{colors.background.primary.value}' },\n      borderColor: { value: '{colors.border.focus.value}' },\n    },\n    _focus: {\n      boxShadow: {\n        value: {\n          offsetX: '0',\n          offsetY: '0',\n          blurRadius: '0',\n          spreadRadius: '3px',\n          color: '{colors.border.focus.value}',\n        },\n      },\n    },\n  },\n\n  small: {\n    track: {\n      height: { value: '0.25rem' },\n    },\n    thumb: {\n      width: { value: '1rem' },\n      height: { value: '1rem' },\n    },\n  },\n\n  large: {\n    track: {\n      height: { value: '0.625rem' },\n    },\n    thumb: {\n      width: { value: '1.5rem' },\n      height: { value: '1.5rem' },\n    },\n  },\n};\n","module.exports = {\n  flexDirection: { value: 'column' },\n  input: {\n    textAlign: { value: 'center' },\n  },\n};\n","module.exports = {\n  disabled: {\n    opacity: { value: '{opacities.60.value}' },\n  },\n  focused: {\n    shadow: { value: '{shadows.small.value}' },\n  },\n  label: {\n    padding: { value: '{space.xs.value}' },\n  },\n  large: {\n    font: {\n      size: { value: '{fontSizes.large.value}' },\n    },\n  },\n  small: {\n    font: {\n      size: { value: '{fontSizes.small.value}' },\n    },\n  },\n  thumb: {\n    backgroundColor: { value: '{colors.background.primary.value}' },\n    borderColor: { value: '{colors.border.tertiary.value}' },\n    borderRadius: { value: '{radii.xxxl.value}' },\n    checked: {\n      transform: { value: '{transforms.slideX.medium.value}' },\n    },\n    transition: {\n      duration: { value: '{time.medium.value}' },\n    },\n    width: { value: '{space.relative.medium.value}' },\n  },\n  track: {\n    backgroundColor: { value: '{colors.background.tertiary.value}' },\n    borderRadius: { value: '{radii.xxxl.value}' },\n    checked: {\n      backgroundColor: { value: '{colors.brand.primary.60.value}' },\n    },\n    height: { value: '{space.relative.medium.value}' },\n    padding: { value: '{outlineWidths.medium.value}' },\n    transition: {\n      duration: { value: '{time.short.value}' },\n    },\n    width: { value: '{space.relative.xl.value}' },\n  },\n};\n","module.exports = {\n  /**\n   * Default table styles\n   */\n  borderCollapse: { value: 'collapse' },\n  display: { value: 'table' },\n  width: { value: '100%' },\n\n  /**\n   * Default table head styles\n   */\n  head: {\n    display: { value: 'table-header-group' },\n    verticalAlign: { value: 'middle' },\n  },\n\n  /**\n   * Default table body styles\n   */\n  body: {\n    display: { value: 'table-row-group' },\n    verticalAlign: { value: 'middle' },\n  },\n\n  /**\n   * Default table foot styles\n   */\n  foot: {\n    display: { value: 'table-footer-group' },\n    verticalAlign: { value: 'middle' },\n  },\n\n  /**\n   * Default table row styles\n   */\n  row: {\n    display: { value: 'table-row' },\n    verticalAlign: { value: 'middle' },\n\n    hover: {\n      backgroundColor: { value: '{colors.background.tertiary.value}' },\n    },\n\n    striped: {\n      backgroundColor: { value: '{colors.background.secondary.value}' },\n    },\n  },\n\n  /**\n   * Default table header cell styles\n   */\n  header: {\n    borderColor: { value: '{colors.border.tertiary.value}' },\n    borderStyle: { value: 'solid' },\n    borderWidth: { value: '{borderWidths.small.value}' },\n    color: { value: '{colors.font.primary.value}' },\n    display: { value: 'table-cell' },\n    fontSize: { value: '{fontSizes.medium.value}' },\n    fontWeight: { value: '{fontWeights.bold.value}' },\n    padding: { value: '{space.medium.value}' },\n    verticalAlign: { value: 'middle' },\n\n    large: {\n      fontSize: { value: '{fontSizes.large.value}' },\n      padding: { value: '{space.large.value}' },\n    },\n\n    small: {\n      fontSize: { value: '{fontSizes.small.value}' },\n      padding: { value: '{space.xs.value}' },\n    },\n  },\n\n  /**\n   * Default table data cell styles\n   */\n  data: {\n    borderColor: { value: '{colors.border.tertiary.value}' },\n    borderStyle: { value: 'solid' },\n    borderWidth: { value: '{borderWidths.small.value}' },\n    color: { value: '{colors.font.primary.value}' },\n    display: { value: 'table-cell' },\n    fontSize: { value: '{fontSizes.medium.value}' },\n    fontWeight: { value: '{fontWeights.normal.value}' },\n    padding: { value: '{space.medium.value}' },\n    verticalAlign: { value: 'middle' },\n\n    large: {\n      fontSize: { value: '{fontSizes.large.value}' },\n      padding: { value: '{space.large.value}' },\n    },\n\n    small: {\n      fontSize: { value: '{fontSizes.small.value}' },\n      padding: { value: '{space.xs.value}' },\n    },\n  },\n\n  /**\n   * Default table caption styles\n   */\n  caption: {\n    captionSide: { value: 'bottom' },\n    color: { value: '{colors.font.primary.value}' },\n    display: { value: 'table-caption' },\n    fontSize: { value: '{fontSizes.medium.value}' },\n    textAlign: { value: 'center' },\n    wordBreak: { value: 'break-all' },\n\n    large: {\n      fontSize: { value: '{fontSizes.large.value}' },\n    },\n\n    small: {\n      fontSize: { value: '{fontSizes.small.value}' },\n    },\n  },\n};\n","module.exports = {\n  backgroundColor: { value: 'transparent' },\n  borderColor: { value: '{colors.border.secondary.value}' },\n  borderStyle: { value: 'solid' },\n  borderWidth: { value: '{borderWidths.medium.value}' },\n  gap: { value: '0' },\n\n  item: {\n    backgroundColor: { value: 'transparent' },\n    borderColor: { value: '{colors.border.secondary.value}' },\n    borderStyle: { value: 'solid' },\n    borderWidth: { value: '{borderWidths.medium.value}' },\n    color: { value: '{colors.font.secondary.value}' },\n    fontSize: { value: '{fontSizes.medium.value}' },\n    fontWeight: { value: '{fontWeights.bold.value}' },\n    paddingVertical: { value: '{space.small.value}' },\n    paddingHorizontal: { value: '{space.medium.value}' },\n    textAlign: { value: 'center' },\n    transitionDuration: { value: '{time.medium.value}' },\n\n    _hover: {\n      color: { value: '{colors.font.hover.value}' },\n    },\n    _focus: {\n      color: { value: '{colors.font.focus.value}' },\n    },\n    _active: {\n      color: { value: '{colors.font.interactive.value}' },\n      borderColor: { value: '{colors.font.interactive.value}' },\n      backgroundColor: { value: 'transparent' },\n    },\n    _disabled: {\n      color: { value: '{colors.font.disabled.value}' },\n      backgroundColor: { value: 'transparent' },\n      borderColor: { value: '{colors.border.tertiary.value}' },\n    },\n  },\n};\n","module.exports = {\n  // default styles\n  color: { value: '{colors.font.primary.value}' },\n\n  // variations\n  primary: {\n    color: { value: '{colors.font.primary.value}' },\n  },\n  secondary: {\n    color: { value: '{colors.font.secondary.value}' },\n  },\n  tertiary: {\n    color: { value: '{colors.font.tertiary.value}' },\n  },\n  error: {\n    color: { value: '{colors.font.error.value}' },\n  },\n  warning: {\n    color: { value: '{colors.font.warning.value}' },\n  },\n  success: {\n    color: { value: '{colors.font.success.value}' },\n  },\n  info: {\n    color: { value: '{colors.font.info.value}' },\n  },\n};\n","module.exports = {\n  borderColor: { value: '{colors.border.primary.value}' },\n  color: { value: '{colors.overlay.50.value}' },\n  _hover: {\n    backgroundColor: { value: '{colors.overlay.10.value}' },\n  },\n  _focus: {\n    borderColor: { value: '{colors.border.focus.value}' },\n    color: { value: '{colors.overlay.50.value}' },\n  },\n  _active: {\n    backgroundColor: { value: '{colors.transparent.value}' },\n  },\n  _disabled: {\n    backgroundColor: { value: '{colors.transparent.value}' },\n    borderColor: { value: '{colors.border.secondary.value}' },\n    color: { value: '{colors.font.disabled.value}' },\n  },\n  _pressed: {\n    color: { value: '{colors.overlay.90.value}' },\n    backgroundColor: { value: '{colors.overlay.20.value}' },\n    _hover: {\n      backgroundColor: { value: '{colors.overlay.30.value}' },\n    },\n  },\n  primary: {\n    backgroundColor: { value: '{colors.transparent.value}' },\n    borderWidth: { value: '{borderWidths.small.value}' },\n    _focus: {\n      borderColor: { value: '{colors.border.focus.value}' },\n      backgroundColor: { value: '{colors.transparent.value}' },\n      boxShadow: { value: '{components.fieldcontrol._focus.boxShadow.value}' },\n      color: { value: '{colors.overlay.50.value}' },\n    },\n    _hover: {\n      backgroundColor: { value: '{colors.overlay.10.value}' },\n      color: { value: '{colors.overlay.50.value}' },\n    },\n    _disabled: {\n      backgroundColor: { value: '{colors.background.tertiary.value}' },\n      color: { value: '{colors.font.disabled.value}' },\n    },\n    _pressed: {\n      backgroundColor: { value: '{colors.brand.primary.80.value}' },\n      borderColor: { value: '{colors.brand.primary.80.value}' },\n      color: { value: '{colors.white.value}' },\n      _focus: {\n        backgroundColor: {\n          value: '{colors.border.focus.value}',\n        },\n        borderColor: { value: '{colors.border.focus.value}' },\n      },\n      _hover: {\n        borderColor: { value: '{colors.brand.primary.60.value}' },\n        backgroundColor: {\n          value: '{colors.brand.primary.60.value}',\n        },\n      },\n    },\n  },\n  link: {\n    color: { value: '{colors.overlay.50.value}' },\n    _hover: {\n      backgroundColor: { value: '{colors.transparent.value}' },\n      color: { value: '{colors.overlay.50.value}' },\n    },\n    _focus: {\n      backgroundColor: { value: '{colors.transparent.value}' },\n      color: { value: '{colors.overlay.50.value}' },\n    },\n    _disabled: {\n      color: { value: '{colors.font.disabled.value}' },\n    },\n    _pressed: {\n      backgroundColor: { value: '{colors.transparent.value}' },\n      color: { value: '{colors.overlay.90.value}' },\n      _hover: {\n        backgroundColor: { value: '{colors.transparent.value}' },\n      },\n    },\n  },\n};\n","module.exports = {\n  alignItems: { value: 'center' },\n  alignContent: { value: 'center' },\n  justifyContent: { value: 'flex-start' },\n};\n","module.exports = {\n  alert: require('./alert'),\n  badge: require('./badge'),\n  button: require('./button'),\n  card: require('./card'),\n  checkbox: require('./checkbox'),\n  checkboxfield: require('./checkboxField'),\n  countrycodeselect: require('./countryCodeSelect'),\n  divider: require('./divider'),\n  expander: require('./expander'),\n  field: require('./field'),\n  fieldcontrol: require('./fieldControl'),\n  fieldgroup: require('./fieldGroup'),\n  fieldmessages: require('./fieldMessages'),\n  flex: require('./flex'),\n  heading: require('./heading'),\n  icon: require('./icon'),\n  image: require('./image'),\n  link: require('./link'),\n  loader: require('./loader'),\n  menu: require('./menu'),\n  pagination: require('./pagination'),\n  phonenumberfield: require('./phoneNumberField'),\n  placeholder: require('./placeholder'),\n  radio: require('./radio'),\n  rating: require('./rating'),\n  select: require('./select'),\n  selectfield: require('./selectField'),\n  sliderfield: require('./sliderField'),\n  stepperfield: require('./stepperField'),\n  switchfield: require('./switchField'),\n  table: require('./table'),\n  tabs: require('./tabs'),\n  text: require('./text'),\n  togglebutton: require('./toggleButton'),\n  togglebuttongroup: require('./toggleButtonGroup'),\n};\n","export * from './helpers';\nexport * from './i18n';\nexport * from './machines';\nexport * from './theme';\nexport * from './types';\n","import { Hub } from 'aws-amplify';\nimport { Sender } from 'xstate';\nimport includes from 'lodash/includes';\n\nimport { AuthContext } from '..';\nimport {\n  ActorContextWithForms,\n  AuthActorContext,\n  AuthActorState,\n  AuthEvent,\n  AuthEventData,\n  AuthEventTypes,\n  AuthInputAttributes,\n  AuthMachineSend,\n  AuthMachineState,\n  LoginMechanism,\n  LoginMechanismArray,\n} from '../types';\n\nexport const authInputAttributes: AuthInputAttributes = {\n  birthdate: {\n    label: 'Birthdate',\n    placeholder: 'Birthdate',\n    type: 'date',\n    autocomplete: 'bday',\n  },\n  confirmation_code: {\n    label: 'Confirmation Code',\n    placeholder: 'Code',\n    type: 'text',\n    autocomplete: 'one-time-code',\n  },\n  email: {\n    label: 'Email',\n    type: 'email',\n    placeholder: 'Email',\n    autocomplete: 'username',\n  },\n  family_name: {\n    label: 'Family Name',\n    placeholder: 'Family Name',\n    type: 'text',\n    autocomplete: 'family-name',\n  },\n  given_name: {\n    label: 'Given Name',\n    placeholder: 'Given Name',\n    type: 'text',\n    autocomplete: 'given-name',\n  },\n  middle_name: {\n    label: 'Middle Name',\n    placeholder: 'Middle Name',\n    type: 'text',\n    autocomplete: 'additional-name',\n  },\n  name: {\n    label: 'Name',\n    placeholder: 'Name',\n    type: 'text',\n    autocomplete: 'name',\n  },\n  nickname: {\n    label: 'Nickname',\n    placeholder: 'Nickname',\n    type: 'text',\n    autocomplete: 'tel',\n  },\n  password: {\n    label: 'Password',\n    placeholder: 'Password',\n    type: 'password',\n    autocomplete: 'password',\n  },\n  phone_number: {\n    label: 'Phone Number',\n    placeholder: 'Phone',\n    type: 'tel',\n    autocomplete: 'tel',\n  },\n  preferred_username: {\n    label: 'Preferred Username',\n    placeholder: 'Preferred Username',\n    type: 'text',\n  },\n  profile: {\n    label: 'Profile',\n    placeholder: 'Profile',\n    type: 'url',\n    autocomplete: 'url',\n  },\n  website: {\n    label: 'Website',\n    placeholder: 'Website',\n    type: 'url',\n    autocomplete: 'url',\n  },\n  username: {\n    label: 'Username',\n    type: 'text',\n    placeholder: 'Username',\n    autocomplete: 'username',\n  },\n};\n\nexport enum FederatedIdentityProviders {\n  Apple = 'SignInWithApple',\n  Amazon = 'LoginWithAmazon',\n  Facebook = 'Facebook',\n  Google = 'Google',\n}\n\n/**\n * Given xstate context from AuthMachine, this returns the input label, type,\n * and error attributes of the configured login_mechanisms. An optional \"alias\"\n * may be passed in to get info from context for that specific alias.\n */\nexport const getAliasInfoFromContext = (\n  context: AuthContext,\n  // TODO This function & its signature should be renamed since aliases were rolled back\n  alias?: LoginMechanism\n) => {\n  const loginMechanisms = context.config?.loginMechanisms;\n  const error = context.actorRef?.context?.validationError['username'];\n\n  if (LoginMechanismArray.includes(alias)) {\n    return {\n      label: authInputAttributes[alias].label,\n      type: authInputAttributes[alias].type,\n      error,\n    };\n  }\n\n  let type = 'text';\n  const label = loginMechanisms\n    .filter((mechanism) => includes(LoginMechanismArray, mechanism))\n    .map((v) => {\n      return (\n        authInputAttributes[v]?.label ?? authInputAttributes['username'].label\n      );\n    })\n    .join(' or ');\n\n  if (loginMechanisms.length === 1) {\n    type = authInputAttributes[loginMechanisms[0]]?.type ?? 'text';\n  }\n\n  return { label, type, error };\n};\n\n/**\n * Given xstate context from AuthMachine, returns the primaryAlias and\n * secondaryAliases.\n */\nexport const getConfiguredAliases = (context: AuthContext) => {\n  const loginMechanisms = context.config?.loginMechanisms;\n  const aliases = loginMechanisms.filter((mechanism) =>\n    includes(LoginMechanismArray, mechanism)\n  );\n\n  const [primaryAlias, ...secondaryAliases] = aliases;\n  return { primaryAlias, secondaryAliases };\n};\n\n/**\n * Get the state of current actor. This is useful for checking which screen\n * to render: e.g. `getActorState(state).matches('confirmSignUp.edit').\n */\nexport const getActorState = (state: AuthMachineState): AuthActorState => {\n  return state.context.actorRef?.getSnapshot();\n};\n\n/**\n * Get the context of current actor. Useful for getting any nested context\n * like remoteError.\n */\nexport const getActorContext = (state: AuthMachineState): AuthActorContext => {\n  return getActorState(state)?.context;\n};\n\n/**\n * Creates public facing auth helpers that abstracts out xstate implementation\n * detail. Each framework implementation can export these helpers so that\n * developers can send events without having to learn internals.\n *\n * ```\n * const [state, send] = useActor(...);\n * const { submit } = getSendEventAliases(send);\n * submit({ username, password})\n * ```\n */\nexport const getSendEventAliases = (send: Sender<AuthEvent>) => {\n  const sendToMachine = (type: AuthEventTypes) => {\n    // TODO If these were created during the creation of the machine & provider,\n    // then invalid transitions could be caught via https://xstate.js.org/docs/guides/states.html#state-can-event\n    return (data?: AuthEventData) => send({ type, data });\n  };\n\n  return {\n    resendCode: sendToMachine('RESEND'),\n    signOut: sendToMachine('SIGN_OUT'),\n    submitForm: sendToMachine('SUBMIT'),\n    updateForm: sendToMachine('CHANGE'),\n    updateBlur: sendToMachine('BLUR'),\n\n    // Actions that don't immediately invoke a service but instead transition to a screen\n    // are prefixed with `to*`\n\n    toFederatedSignIn: sendToMachine('FEDERATED_SIGN_IN'),\n    toResetPassword: sendToMachine('RESET_PASSWORD'),\n    toSignIn: sendToMachine('SIGN_IN'),\n    toSignUp: sendToMachine('SIGN_UP'),\n    skipVerification: sendToMachine('SKIP'),\n  } as const;\n};\n\nexport const getServiceContextFacade = (state: AuthMachineState) => {\n  const user = state.context?.user;\n  const actorState = getActorState(state);\n  const actorContext = getActorContext(state) as ActorContextWithForms;\n  const error = actorContext?.remoteError;\n  const validationErrors = { ...actorContext?.validationError };\n  const codeDeliveryDetails = actorContext?.codeDeliveryDetails;\n  const hasValidationErrors = Object.keys(validationErrors).length > 0;\n  const isPending =\n    state.hasTag('pending') || getActorState(state)?.hasTag('pending');\n  const route = (() => {\n    switch (true) {\n      case state.matches('idle'):\n        return 'idle';\n      case state.matches('setup'):\n        return 'setup';\n      case state.matches('signOut'):\n        return 'signOut';\n      case state.matches('authenticated'):\n        return 'authenticated';\n      case actorState?.matches('confirmSignUp'):\n        return 'confirmSignUp';\n      case actorState?.matches('confirmSignIn'):\n        return 'confirmSignIn';\n      case actorState?.matches('setupTOTP'):\n        return 'setupTOTP';\n      case actorState?.matches('signIn'):\n        return 'signIn';\n      case actorState?.matches('signUp'):\n        return 'signUp';\n      case actorState?.matches('forceNewPassword'):\n        return 'forceNewPassword';\n      case actorState?.matches('resetPassword'):\n        return 'resetPassword';\n      case actorState?.matches('confirmResetPassword'):\n        return 'confirmResetPassword';\n      case actorState?.matches('verifyUser'):\n        return 'verifyUser';\n      case actorState?.matches('confirmVerifyUser'):\n        return 'confirmVerifyUser';\n      default:\n        console.debug(\n          'Cannot infer `route` from Authenticator state:',\n          state.value\n        );\n        return null;\n    }\n  })();\n\n  return {\n    error,\n    hasValidationErrors,\n    isPending,\n    route,\n    user,\n    validationErrors,\n    codeDeliveryDetails,\n  };\n};\n\nexport const getServiceFacade = ({ send, state }) => {\n  const sendEventAliases = getSendEventAliases(send);\n  const serviceContext = getServiceContextFacade(state);\n\n  return {\n    ...sendEventAliases,\n    ...serviceContext,\n  };\n};\n\n/**\n * Listens to external auth Hub events and sends corresponding event to\n * the `authService` of interest\n *\n * @param send - `send` function associated with the `authService` of interest\n *\n * @returns function that unsubscribes to the hub evenmt\n */\nexport const listenToAuthHub = (send: AuthMachineSend) => {\n  return Hub.listen('auth', (data) => {\n    switch (data.payload.event) {\n      // TODO: We can add more cases here, according to\n      // https://docs.amplify.aws/lib/auth/auth-events/q/platform/js/\n      case 'signOut':\n        send('SIGN_OUT');\n        break;\n    }\n  });\n};\n","export * from './authMachine';\nexport * from './validator';\n\n// Prevents usage of T from being automatically inferred.\n// https://github.com/Microsoft/TypeScript/issues/14829#issuecomment-504042546\nexport type NoInfer<T> = [T][T extends any ? 0 : never];\n","import { CognitoUser, CodeDeliveryDetails } from 'amazon-cognito-identity-js';\nimport { Interpreter, State } from 'xstate';\nimport { ValidationError } from './validator';\nimport { defaultServices } from '../machines/authenticator/defaultServices';\n\nexport type AuthFormData = Record<string, string>;\n\nexport interface AuthContext {\n  actorRef?: any;\n  config?: {\n    loginMechanisms?: LoginMechanism[];\n    signUpAttributes?: SignUpAttribute[];\n    socialProviders?: SocialProvider[];\n    initialState?: 'signIn' | 'signUp' | 'resetPassword';\n  };\n  services?: Partial<typeof defaultServices>;\n  user?: CognitoUserAmplify;\n  username?: string;\n  password?: string;\n  code?: string;\n  mfaType?: AuthChallengeNames.SMS_MFA | AuthChallengeNames.SOFTWARE_TOKEN_MFA;\n}\n\nexport interface ServicesContext {\n  username?: string;\n  password?: string;\n  user?: string;\n  code?: string;\n  mfaType: AuthChallengeNames.SMS_MFA | AuthChallengeNames.SOFTWARE_TOKEN_MFA;\n}\n\ninterface BaseFormContext {\n  authAttributes?: Record<string, any>;\n  challengeName?: string;\n  requiredAttributes?: Array<string>;\n  formValues?: AuthFormData;\n  touched?: AuthFormData;\n  intent?: string;\n  remoteError?: string;\n  user?: CognitoUserAmplify;\n  validationError?: ValidationError;\n  codeDeliveryDetails?: CodeDeliveryDetails;\n  country_code?: string;\n}\n\nexport interface SignInContext extends BaseFormContext {\n  loginMechanisms: Required<AuthContext>['config']['loginMechanisms'];\n  socialProviders: Required<AuthContext>['config']['socialProviders'];\n  attributeToVerify?: string;\n  redirectIntent?: string;\n  unverifiedAttributes?: Record<string, string>;\n}\n\n// https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-attributes.html\nexport const signUpFieldsWithDefault = [\n  'birthdate',\n  'email',\n  'family_name',\n  'given_name',\n  'middle_name',\n  'name',\n  'nickname',\n  'phone_number',\n  'preferred_username',\n  'profile',\n  'website',\n] as const;\n\nexport const signUpFieldsWithoutDefault = [\n  'address',\n  'gender',\n  'locale',\n  'picture',\n  'updated_at',\n  'zoneinfo',\n] as const;\n\nexport type SignUpFieldsWithDefaults = typeof signUpFieldsWithDefault[number];\n\nexport type SignUpFieldsWithoutDefaults =\n  typeof signUpFieldsWithoutDefault[number];\n\nexport type SignUpAttribute =\n  | SignUpFieldsWithDefaults\n  | SignUpFieldsWithoutDefaults;\n\nexport interface SignUpContext extends BaseFormContext {\n  loginMechanisms: Required<AuthContext>['config']['loginMechanisms'];\n  socialProviders: Required<AuthContext>['config']['socialProviders'];\n  unverifiedAttributes?: Record<string, string>;\n}\n\nexport interface ResetPasswordContext extends BaseFormContext {\n  username?: string;\n  unverifiedAttributes?: Record<string, string>;\n}\n\nexport interface SignOutContext {\n  authAttributes?: Record<string, any>;\n  challengeName?: string;\n  unverifiedAttributes?: Record<string, string>;\n  user?: CognitoUserAmplify;\n}\n\n// actors that have forms. Has `formValues, remoteErrror, and validationError in common.\nexport type ActorContextWithForms =\n  | SignInContext\n  | SignUpContext\n  | ResetPasswordContext;\n\nexport type SignInState = State<SignInContext, AuthEvent>;\nexport type SignUpState = State<SignUpContext, AuthEvent>;\nexport type SignOutState = State<SignOutContext, AuthEvent>;\nexport type ResetPasswordState = State<ResetPasswordContext, AuthEvent>;\nexport type AuthActorContext = ActorContextWithForms | SignOutContext;\nexport type AuthActorState = State<AuthActorContext, AuthEvent>;\nexport interface CognitoUserAmplify extends CognitoUser {\n  username?: string;\n}\n\nexport type InvokeActorEventTypes =\n  | 'done.invoke.signInActor'\n  | 'done.invoke.signUpActor'\n  | 'done.invoke.signOutActor'\n  | 'done.invoke.resetPasswordActor';\n\nexport type AuthEventTypes =\n  | 'CHANGE'\n  | 'BLUR'\n  | 'FEDERATED_SIGN_IN'\n  | 'RESEND'\n  | 'RESET_PASSWORD'\n  | 'SIGN_IN'\n  | 'SIGN_OUT'\n  | 'SIGN_UP'\n  | 'SKIP'\n  | 'SUBMIT'\n  | 'INIT'\n  | InvokeActorEventTypes;\n\nexport enum AuthChallengeNames {\n  SMS_MFA = 'SMS_MFA',\n  SOFTWARE_TOKEN_MFA = 'SOFTWARE_TOKEN_MFA',\n  NEW_PASSWORD_REQUIRED = 'NEW_PASSWORD_REQUIRED',\n  RESET_REQUIRED = 'RESET_REQUIRED',\n  MFA_SETUP = 'MFA_SETUP',\n}\n\nexport interface InputAttributes {\n  label: string;\n  type: string;\n  placeholder: string;\n  autocomplete?: string;\n}\n\nexport const LoginMechanismArray = [\n  'username',\n  'email',\n  'phone_number',\n] as const;\n\nexport type LoginMechanism = typeof LoginMechanismArray[number];\n\nexport type SocialProvider = 'amazon' | 'apple' | 'facebook' | 'google';\n\n// Auth fields that we provide default fields with\nexport type AuthFieldsWithDefaults =\n  | LoginMechanism\n  | SignUpFieldsWithDefaults\n  | 'confirmation_code'\n  | 'password';\n\nexport type AuthInputAttributes = Record<\n  AuthFieldsWithDefaults,\n  InputAttributes\n>;\n\nexport type AuthEventData = Record<PropertyKey, any>; // TODO: this should be typed further\n\nexport interface AuthEvent {\n  type: AuthEventTypes;\n  data?: AuthEventData;\n}\n\nexport type AuthMachineState = State<AuthContext, AuthEvent>;\n\nexport type AuthInterpreter = Interpreter<AuthContext, any, AuthEvent>;\n\nexport type AuthMachineSend = AuthInterpreter['send'];\n","import { AuthChallengeNames, AuthFormData } from './authMachine';\n\nexport type ValidationError = Record<string, string>;\n\n/**\n * Return type of validator. This is `null` if there are no error, and `ValidationError` otherwise.\n */\nexport type ValidatorResult = void | null | ValidationError; // null if there are no error, `ValidationError` otherwise\nexport type SignInResult = string; // null if there are no error, `ValidationError` otherwise\n\n/**\n * Validates the given formData. This can be synchronous or asynchronous.\n */\nexport type Validator = (\n  formData: AuthFormData,\n  touchData?: AuthFormData\n) => ValidatorResult | Promise<ValidatorResult>;\n\nexport type SignInTypes = (\n  user: string,\n  code: string,\n  mfaType: AuthChallengeNames.SMS_MFA | AuthChallengeNames.SOFTWARE_TOKEN_MFA\n) => SignInResult | Promise<SignInResult>;\n","export type ContactMethod = 'Email' | 'Phone Number';\n\n// replaces all characters in a string with '*', except for the first and last char\nexport const censorAllButFirstAndLast = (value: string): string => {\n  const split = value.trim().split('');\n  for (let i = 0; i < split.length; i++) {\n    if (i > 0 && i < split.length - 1) {\n      split[i] = '*';\n    }\n  }\n\n  return split.join('');\n};\n\n// censors all but the last four characters of a phone number\nexport const censorPhoneNumber = (val: string): string => {\n  if (val.length < 4) {\n    return val;\n  }\n\n  const split = val.split('');\n  for (let i = 0; i < split.length - 4; i++) {\n    split[i] = '*';\n  }\n\n  return split.join('');\n};\n","export * from './country-dial-codes';\nexport * from './translations';\n","export const countryDialCodes = [\n  '+1',\n  '+7',\n  '+20',\n  '+27',\n  '+30',\n  '+31',\n  '+32',\n  '+33',\n  '+34',\n  '+36',\n  '+39',\n  '+40',\n  '+41',\n  '+43',\n  '+44',\n  '+45',\n  '+46',\n  '+47',\n  '+48',\n  '+49',\n  '+51',\n  '+52',\n  '+53',\n  '+54',\n  '+55',\n  '+56',\n  '+57',\n  '+58',\n  '+60',\n  '+61',\n  '+62',\n  '+63',\n  '+64',\n  '+65',\n  '+66',\n  '+81',\n  '+82',\n  '+84',\n  '+86',\n  '+90',\n  '+91',\n  '+92',\n  '+93',\n  '+94',\n  '+95',\n  '+98',\n  '+212',\n  '+213',\n  '+216',\n  '+218',\n  '+220',\n  '+221',\n  '+222',\n  '+223',\n  '+224',\n  '+225',\n  '+226',\n  '+227',\n  '+228',\n  '+229',\n  '+230',\n  '+231',\n  '+232',\n  '+233',\n  '+234',\n  '+235',\n  '+236',\n  '+237',\n  '+238',\n  '+239',\n  '+240',\n  '+241',\n  '+242',\n  '+243',\n  '+244',\n  '+245',\n  '+246',\n  '+248',\n  '+249',\n  '+250',\n  '+251',\n  '+252',\n  '+253',\n  '+254',\n  '+255',\n  '+256',\n  '+257',\n  '+258',\n  '+260',\n  '+261',\n  '+262',\n  '+263',\n  '+264',\n  '+265',\n  '+266',\n  '+267',\n  '+268',\n  '+269',\n  '+290',\n  '+291',\n  '+297',\n  '+298',\n  '+299',\n  '+345',\n  '+350',\n  '+351',\n  '+352',\n  '+353',\n  '+354',\n  '+355',\n  '+356',\n  '+357',\n  '+358',\n  '+359',\n  '+370',\n  '+371',\n  '+372',\n  '+373',\n  '+374',\n  '+375',\n  '+376',\n  '+377',\n  '+378',\n  '+379',\n  '+380',\n  '+381',\n  '+382',\n  '+385',\n  '+386',\n  '+387',\n  '+389',\n  '+420',\n  '+421',\n  '+423',\n  '+500',\n  '+501',\n  '+502',\n  '+503',\n  '+504',\n  '+505',\n  '+506',\n  '+507',\n  '+508',\n  '+509',\n  '+537',\n  '+590',\n  '+591',\n  '+593',\n  '+594',\n  '+595',\n  '+596',\n  '+597',\n  '+598',\n  '+599',\n  '+670',\n  '+672',\n  '+673',\n  '+674',\n  '+675',\n  '+676',\n  '+677',\n  '+678',\n  '+679',\n  '+680',\n  '+681',\n  '+682',\n  '+683',\n  '+685',\n  '+686',\n  '+687',\n  '+688',\n  '+689',\n  '+690',\n  '+691',\n  '+692',\n  '+850',\n  '+852',\n  '+853',\n  '+855',\n  '+856',\n  '+872',\n  '+880',\n  '+886',\n  '+960',\n  '+961',\n  '+962',\n  '+963',\n  '+964',\n  '+965',\n  '+966',\n  '+967',\n  '+968',\n  '+970',\n  '+971',\n  '+972',\n  '+973',\n  '+974',\n  '+975',\n  '+976',\n  '+977',\n  '+992',\n  '+993',\n  '+994',\n  '+995',\n  '+996',\n  '+998',\n];\n","/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { I18n } from 'aws-amplify';\nimport { NoInfer } from '../types';\nimport {\n  deDict,\n  enDict,\n  esDict,\n  frDict,\n  itDict,\n  jaDict,\n  krDict,\n  nlDict,\n  plDict,\n  ptDict,\n  zhDict,\n  svDict,\n  defaultTexts,\n} from './dictionaries';\n\n/**\n * Contains translatable strings that authenticator provides by default. Customers\n * can use this to add custom vocabularies:\n *\n * ```\n * I18n.putVocabulariesForLanguage(\"en\", {\n *  [DefaultTexts.SIGN_IN]: \"Custom Sign In Text\",\n *  [DefaultTexts.SIGN_IN_BUTTON]: \"Custom Click Here to Sign In\"\n * });\n * ```\n */\nexport const DefaultTexts = { ...defaultTexts } as const;\n\n// type Phrase = \"Back to Sign In\" | \"Change Password\" | ...\nexport type Phrase = typeof DefaultTexts[keyof typeof DefaultTexts];\n\n/**\n * TODO: Translation keys for dictionaries can be inferred from DefaultTexts\n * by typing it to Partial<Record<Phrase, string>>.\n *\n * But this requires error string keys to be standarized as well, and can be a\n * limiting factor for custom translation keys. Marking it as TODO until we see\n * a reason to strongly type this.\n */\nexport type Dict = Record<string, string>;\n\n/**\n * This helper type checks that given phrase is one of the texts @aws-amplify/ui\n * provides by default. This enables vscode autocompletion to help catch typos\n * during development.\n *\n * You can also use translate<string> to handle custom strings or dynamic content.\n */\nexport function translate<T = Phrase>(phrase: NoInfer<T>): string {\n  return I18n.get(phrase);\n}\n\n/**\n * Whether I18n has a translation entry for given phrase\n */\nexport function hasTranslation(phrase: string) {\n  return I18n.get(phrase) !== phrase;\n}\n\nexport const translations: Record<string, Dict> = {\n  de: deDict,\n  en: enDict,\n  es: esDict,\n  fr: frDict,\n  it: itDict,\n  ja: jaDict,\n  kr: krDict,\n  nl: nlDict,\n  pl: plDict,\n  pt: ptDict,\n  zh: zhDict,\n  sv: svDict,\n};\n","import * as authenticatorDict from './authenticator';\n\n//merge all the new module translations in respective locale constants\nexport const deDict = { ...authenticatorDict.deDict };\nexport const enDict = { ...authenticatorDict.enDict };\nexport const esDict = { ...authenticatorDict.esDict };\nexport const frDict = { ...authenticatorDict.frDict };\nexport const itDict = { ...authenticatorDict.itDict };\nexport const jaDict = { ...authenticatorDict.jaDict };\nexport const krDict = { ...authenticatorDict.krDict };\nexport const nlDict = { ...authenticatorDict.nlDict };\nexport const plDict = { ...authenticatorDict.plDict };\nexport const ptDict = { ...authenticatorDict.ptDict };\nexport const zhDict = { ...authenticatorDict.zhDict };\nexport const svDict = { ...authenticatorDict.svDict };\n\nexport const defaultTexts = {\n  ...authenticatorDict.defaultTexts,\n  // new module related default texts goes here\n};\n","// translation dictionaries\nexport { deDict } from './de';\nexport { enDict } from './en';\nexport { esDict } from './es';\nexport { frDict } from './fr';\nexport { itDict } from './it';\nexport { jaDict } from './ja';\nexport { krDict } from './kr';\nexport { nlDict } from './nl';\nexport { plDict } from './pl';\nexport { ptDict } from './pt';\nexport { zhDict } from './zh';\nexport { svDict } from './sv';\n\n// default text phrases\nexport { defaultTexts } from './defaultTexts';\n","export const deDict = {\n  'Account recovery requires verified contact information':\n    'Zurücksetzen des Account benötigt einen verifizierten Account',\n  'An account with the given email already exists.':\n    'Ein Account mit dieser Email existiert bereits.',\n  'Back to Sign In': 'Zurück zur Anmeldung',\n  'Change Password': 'Passwort ändern',\n  Code: 'Code',\n  Confirm: 'Bestätigen',\n  'Confirm Password': 'Passwort bestätigen',\n  'Confirm a Code': 'Code bestätigen',\n  'Confirm Sign In': 'Anmeldung bestätigen',\n  'Confirm Sign Up': 'Registrierung bestätigen',\n  'Confirm SMS Code': 'SMS-Code bestätigen',\n  'Confirm TOTP Code': 'TOTP-Code bestätigen',\n  'Confirmation Code': 'Bestätigungs-Code',\n  'Create a new account': 'Einen neuen Account erstellen',\n  'Create account': 'Hier registrieren',\n  'Create Account': 'Account erstellen',  \n  'Creating Account': 'Account wird erstellt',\n  Email: 'Email',\n  'Enter your code': 'Geben Sie Ihren Code ein',\n  'Enter your password': 'Geben Sie Ihr Passwort ein',\n  'Enter your username': 'Geben Sie Ihren Benutzernamen ein',\n  'Enter your phone number': 'Geben Sie Ihre Telefonnummer ein',\n  'Enter your email': 'Geben Sie ihre Email ein',\n  'Forgot your password?': 'Passwort vergessen? ',\n  'Forgot Password': 'Passwort vergessen',\n  'Hide password': 'Passwort verbergen',\n  'Have an account? ': 'Schon registriert? ',\n  'Incorrect username or password':\n    'Falscher Benutzername oder falsches Passwort',\n  'Invalid password format': 'Ungültiges Passwort-Format',\n  'Invalid phone number format': `Ungültiges Telefonummern-Format. Benutze eine Nummer im Format: +12345678900`,\n  'Lost your code? ': 'Code verloren? ',\n  'New Password': 'Neues Passwort',\n  'No account? ': 'Kein Account? ',\n  or: 'oder',\n  Password: 'Passwort',\n  'Password attempts exceeded':\n    'Die maximale Anzahl der fehlerhaften Anmeldeversuche wurde erreicht',\n  'Phone Number': 'Telefonnummer',\n  'Resend Code': 'Code erneut senden',\n  'Reset password': 'Passwort zurücksetzen',\n  'Reset your password': 'Zurücksetzen des Passworts',\n  'Send Code': 'Code senden',\n  'Sign in': 'Anmelden',\n  'Sign In': 'Anmelden',\n  'Sign in to your account': 'Melden Sie sich mit Ihrem Account an',\n  'Sign Out': 'Abmelden',\n  'Sign Up': 'Registrieren',\n  Skip: 'Überspringen',\n  Submit: 'Abschicken',\n  'User already exists': 'Dieser Benutzer existiert bereits',\n  'User does not exist': 'Dieser Benutzer existiert nicht',\n  Username: 'Benutzername',\n  'Username cannot be empty': 'Benutzername darf nicht leer sein',\n  Verify: 'Verifizieren',\n  'Verify Contact': 'Kontakt verifizieren',\n};\n","export const enDict = {\n  'Account recovery requires verified contact information': \n    'Account recovery requires verified contact information',\n  'Back to Sign In': 'Back to Sign In',\n  'Change Password': 'Change Password',\n  Changing: 'Changing',\n  Code: 'Code',\n  Confirm: 'Confirm',\n  'Confirm Password': 'Confirm Password',\n  'Confirm Sign Up': 'Confirm Sign Up',\n  'Confirm SMS Code': 'Confirm SMS Code',\n  'Confirm TOTP Code': 'Confirm TOTP Code',\n  'Confirmation Code': 'Confirmation Code',\n  Confirming: 'Confirming',\n  'Create Account': 'Create Account',\n  'Creating Account': 'Creating Account',\n  Email: 'Email',\n  'Enter your code': 'Enter your code',\n  'Enter your username': 'Enter your username',\n  'Enter your phone number': 'Enter your phone number',\n  'Enter your email': 'Enter your email',\n  'Forgot your password?': 'Forgot your password?',\n  'Hide password': 'Hide password',\n  Loading: 'Loading',\n  Username: 'Username',\n  'New password': 'New password',\n  Password: 'Password',\n  'Phone Number': 'Phone Number',\n  'Resend Code': 'Resend Code',\n  'Reset your password': 'Reset your password',\n  'Reset your Password': 'Reset your Password',\n  'Send Code': 'Send Code',\n  'Send code': 'Send code',\n  Sending: 'Sending',\n  'Setup TOTP': 'Setup TOTP',\n  'Show password': 'Show password',\n  'Sign in': 'Sign in',\n  'Sign In': 'Sign In',\n  'Sign In with Amazon': 'Sign In with Amazon',\n  'Sign In with Apple': 'Sign In with Apple',\n  'Sign In with Facebook': 'Sign In with Facebook',\n  'Sign In with Google': 'Sign In with Google',\n  'Sign in to your account': 'Sign in to your account',\n  'Create a new account': 'Create a new account',\n  'Signing in': 'Signing in',\n  Skip: 'Skip',\n  Submit: 'Submit',\n  Submitting: 'Submitting',\n  'Verify Contact': 'Verify Contact',\n  Verify: 'Verify',\n};\n","export const esDict = {\n  'Account recovery requires verified contact information':\n    'La recuperación de la cuenta requiere información de contacto verificada',\n  'Back to Sign In': 'Volver a inicio de sesión',\n  'Change Password': 'Cambiar contraseña',\n  Code: 'Código',\n  Confirm: 'Confirmar',\n  'Confirm a Code': 'Confirmar un código',\n  'Confirm Password': 'Confirmar contraseña',\n  'Confirm Sign In': 'Confirmar inicio de sesión',\n  'Confirm Sign Up': 'Confirmar registro',\n  'Confirmation Code': 'Código de confirmación',\n  'Create a new account': 'Crear una cuenta nueva',\n  Email: 'Email',\n  'Forgot Password': 'Olvidé mi contraseña',\n  'Incorrect username or password': 'Nombre de usuario o contraseña incorrecta',\n  'Invalid password format': 'Formato de contraseña inválido',\n  'Invalid phone number format': 'Formato de número de teléfono inválido',\n  'Loading...': 'Cargando...',\n  'New Password': 'Nueva contraseña',\n  or: 'o',\n  Password: 'Contraseña',\n  'Phone Number': 'Número de teléfono',\n  'Resend a Code': 'Reenviar un código',\n  'Resend Code': 'Reenviar código',\n  'Send Code': 'Enviar código',\n  'Sign In': 'Iniciar sesión',\n  'Sign in to your account': 'Iniciar sesión en tu cuenta',\n  'Sign Out': 'Cerrar sesión',\n  'Sign Up': 'Crear cuenta',\n  Skip: 'Omitir',\n  Submit: 'Enviar',\n  'User already exists': 'El usuario ya existe',\n  'User does not exist': 'El usuario no existe',\n  Username: 'Nombre de usuario',\n  'Username cannot be empty': 'El nombre de usuario no puede estar vacío',\n  Verify: 'Verificar',\n  'Verify Contact': 'Verificar contacto',\n};\n","export const frDict = {\n  'Account recovery requires verified contact information':\n    'La récupération du compte nécessite des informations de contact vérifiées',\n  'An account with the given email already exists.':\n    'Un utilisateur avec cette adresse email existe déjà.',\n  'Back to Sign In': 'Retour à la connexion',\n  Change: 'Modifier',\n  'Change Password': 'Modifier le mot de passe',\n  Code: 'Code',\n  Confirm: 'Confirmer',\n  'Confirm a Code': 'Confirmer un code',\n  'Confirm Password': 'Confirmez le mot de passe',\n  'Confirm Sign In': 'Confirmer la connexion',\n  'Confirm Sign Up': \"Confirmer l'inscription\",\n  'Confirm SMS Code': 'Confirmer le code SMS',\n  'Confirm TOTP Code': 'Confirmer le code TOTP',\n  'Confirmation Code': 'Code de confirmation',\n  'Create a new account': 'Créer un nouveau compte',\n  'Create account': 'Créer un compte',\n  'Create Account': 'Créer un compte',\n  Email: 'Email',\n  'Enter your code': 'Saisissez cotre code de confirmation',\n  'Enter your email': 'Saisissez votre adresse email',\n  'Enter your password': 'Saisissez votre mot de passe',\n  'Enter your phone number': 'Saisissez votre numéro de téléphone',\n  'Enter your username': \"Saisissez votre nom d'utilisateur\",\n  'Forgot Password': 'Mot de passe oublié',\n  'Forgot your password?': 'Mot de passe oublié ? ',\n  'Have an account? ': 'Déjà un compte ? ',\n  Hello: 'Bonjour',\n  'Incorrect username or password': 'Identifiant ou mot de passe incorrect',\n  'Invalid password format': 'Format de mot de passe invalide',\n  'Invalid phone number format': `Format de numéro de téléphone invalide. Veuillez utiliser un format +12345678900`,\n  'Loading...': 'Chargement...',\n  'Lost your code? ': 'Vous avez perdu votre code ? ',\n  'Network error': 'Erreur réseau',\n  'New Password': 'Nouveau mot de passe',\n  'No account? ': 'Pas de compte ? ',\n  or: 'ou',\n  Password: 'Mot de passe',\n  'Phone Number': 'Numéro de téléphone',\n  'Resend a Code': 'Renvoyer un code',\n  'Resend Code': 'Renvoyer le code',\n  'Reset password': 'Réinitialisez votre mot de passe',\n  'Reset your password': 'Réinitialisez votre mot de passe',\n  Send: 'Envoyer',\n  'Send Code': \"M'envoyer un code\",\n  'Sign in': 'Se connecter',\n  'Sign In': 'Se connecter',\n  'Sign in to your account': 'Connexion à votre compte',\n  'Sign In with Amazon': 'Se connecter avec Amazon',\n  'Sign In with AWS': 'Se connecter avec AWS',\n  'Sign In with Facebook': 'Se connecter avec Facebook',\n  'Sign In with Google': 'Se connecter avec Google',\n  'Sign Out': 'Déconnexion',\n  'Sign Up': \"S'inscrire\",\n  Skip: 'Passer',\n  SMS: 'SMS',\n  Submit: 'Soumettre',\n  'User already exists': \"L'utilisateur existe déjà\",\n  'User does not exist': \"L'utilisateur n'existe pas\",\n  Username: \"Nom d'utilisateur\",\n  'Username cannot be empty': \"Le nom d'utilisateur doit être renseigné\",\n  'Username/client id combination not found.': \"L'utilisateur n'existe pas\",\n  Verify: 'Vérifier',\n  'Verify Contact': 'Vérifier le contact',\n};\n","export const itDict = {\n  'Account recovery requires verified contact information':\n    'Ripristino del conto richiede un account verificati',\n  'An account with the given email already exists.':\n    'Un account con questa email esiste già.',\n  'Back to Sign In': 'Torna alla Accesso',\n  'Change Password': 'Cambia la password',\n  Code: 'Codice',\n  Confirm: 'Conferma',\n  'Confirm a Code': 'Codice Conferma',\n  'Confirm Password': 'Conferma la password',\n  'Confirm Sign In': 'Conferma di applicazione',\n  'Confirm Sign Up': 'Registrazione Conferma',\n  'Confirmation Code': 'Codice di verifica',\n  'Create a new account': 'Creare un nuovo account',\n  'Create account': 'Registrati',\n  'Create Account': 'Crea account',\n  Email: 'E-mail',\n  'Enter your password': 'Inserire la password',\n  'Enter your username': 'Inserisci il tuo nome utente',\n  'Forgot Password': 'Password dimenticata',\n  'Forgot your password?': 'Password dimenticata?',\n  'Have an account? ': 'Già registrato?',\n  'Incorrect username or password': 'Nome utente o password errati',\n  'Invalid password format': 'Formato della password non valido',\n  'Invalid phone number format':\n    'Utilizzo non valido Telefonummern formattare un numero nel formato :. 12.345.678,9 mille',\n  'Lost your code?': 'Perso codice?',\n  'New Password': 'Nuova password',\n  or: 'o',\n  'No account? ': 'Nessun account?',\n  Password: 'Password',\n  'Password attempts exceeded':\n    'Il numero massimo di tentativi di accesso falliti è stato raggiunto',\n  'Phone Number': 'Numero di telefono',\n  'Resend Code': 'Codice Rispedisci',\n  'Reset password': 'Ripristina password',\n  'Reset your password': 'Resetta password',\n  'Send Code': 'Invia codice',\n  'Sign in': 'Accesso',\n  'Sign In': 'Accesso',\n  'Sign in to your account': 'Accedi con il tuo account a',\n  'Sign Out': 'Esci',\n  'Sign Up': 'Iscriviti',\n  Skip: 'Salta',\n  Submit: 'Sottoscrivi',\n  'User already exists': 'Questo utente esiste già',\n  'User does not exist': 'Questo utente non esiste',\n  Username: 'Nome utente',\n  'Username cannot be empty': 'Nome utente non può essere vuoto',\n  Verify: 'Verifica',\n  'Verify Contact': 'Contatto verifica',\n};\n","export const jaDict = {\n  'Account recovery requires verified contact information':\n    'アカウントの復旧には確認済みの連絡先が必要です',\n  'An account with the given email already exists.':\n    '入力されたメールアドレスのアカウントが既に存在します',\n  'Back to Sign In': 'サインインに戻る',\n  'Change Password': 'パスワードを変える ',\n  Code: 'コード',\n  Confirm: '確定',\n  'Confirm a Code': 'コードを確認',\n  'Confirm Password': 'パスワードの確認',\n  'Confirm Sign In': 'サインインする',\n  'Confirm Sign Up': '登録する',\n  'Confirmation Code': '確認コード',\n  'Create a new account': '新しいアカウントを作る',\n  'Create account': 'アカウントを作る ',\n  'Create Account': 'アカウントを作る',\n  Email: 'メールアドレス',\n  'Enter your password': 'パスワードを入力 ',\n  'Enter your username': 'ユーザー名を入力 ',\n  'Forgot Password': 'パスワードを忘れた ',\n  'Forgot your password?': 'パスワードを忘れましたか？ ',\n  'Have an account? ': 'アカウントを持っていますか？',\n  'Incorrect username or password': 'ユーザー名かパスワードが異なります ',\n  'Invalid password format': 'パスワードの形式が無効です ',\n  'Invalid phone number format':\n    '不正な電話番号の形式です。\\n+12345678900 の形式で入力してください',\n  'Lost your code? ': 'コードを失くしましたか？',\n  'New Password': '新しいパスワード',\n  'No account? ': 'アカウントが無いとき ',\n  or: '又は',\n  Password: 'パスワード ',\n  'Password attempts exceeded': 'サインインの試行回数が上限に達しました',\n  'Phone Number': '電話番号',\n  'Resend Code': 'コードを再送信',\n  'Reset password': 'パスワードをリセット ',\n  'Reset your password': 'パスワードをリセットする',\n  'Send Code': 'コードを送信',\n  'Sign in': 'サインイン',\n  'Sign In': 'サインイン ',\n  'Sign in to your account': 'アカウントにサインイン ',\n  'Sign In with Amazon': 'Amazonでサインイン',\n  'Sign In with Facebook': 'Facebookでサインイン',\n  'Sign In with Google': 'Googleでサインイン',\n  'Sign Out': 'サインアウト ',\n  'Sign Up': '登録 ',\n  Skip: 'スキップ',\n  Submit: '送信',\n  'User already exists': '既にユーザーが存在しています ',\n  'User does not exist': 'ユーザーが存在しません ',\n  Username: 'ユーザー名 ',\n  'Username cannot be empty': 'ユーザー名は入力必須です',\n  Verify: '確認',\n  'Verify Contact': '連絡先を確認',\n};\n","export const krDict = {\n  'Back to Sign In': '로그인으로 돌아가기',\n  Birthdate: '생년월일',\n  'Change Password': '비밀번호 변경하기',\n  Changing: '변경중',\n  Code: '코드',\n  'Confirm Password': '비밀번호 재확인',\n  'Reset your Password': '비밀번호 재설정',\n  'Confirm Sign Up': '회원가입 확인',\n  'Confirm SMS Code': '휴대폰 본인 확인',\n  'Confirm TOTP Code': 'TOTP 인증번호 확인',\n  Confirm: '확인',\n  'Confirmation Code': '인증번호',\n  Confirming: '확인중',\n  'Create Account': '회원가입',\n  'Creating Account': '회원가입중',\n  Email: '이메일',\n  'Enter your code': '인증번호를 입력해주세요',\n  'Enter your username': '아이디를 입력해주세요',\n  'Family Name': '성',\n  'Given Name': '이름',\n  'Forgot your password?': '비밀번호를 잊으셨나요?',\n  'Hide password': '비밀번호 숨기기',\n  Loading: '로딩중',\n  Username: '아이디',\n  Name: '성함',\n  Nickname: '닉네임',\n  'New password': '새 비밀번호',\n  Password: '비밀번호',\n  'Phone Number': '전화번호',\n  'Preferred Username': '닉네임',\n  Profile: '프로필',\n  'Resend Code': '인증번호 재전송',\n  'Reset your password': '비밀번호 재설정',\n  'Reset Password': '비밀번호 재설정',\n  'Send code': '인증코드 보내기',\n  Sending: '전송중',\n  'Setup TOTP': 'TOTP 설정하기',\n  'Show password': '비밀번호 보이기',\n  'Sign in': '로그인',\n  'Sign In': '로그인',\n  'Sign In with Amazon': 'Amazon 로그인',\n  'Sign In with Apple': 'Apple 로그인',\n  'Sign In with Facebook': 'Facebook 로그인',\n  'Sign In with Google': 'Google 로그인',\n  'Sign in to your account': '로그인',\n  'Create a new account': '회원가입',\n  'Signing in': '로그인중',\n  Skip: '다음에 하기',\n  Submit: '확인',\n  Submitting: '확인중',\n  'Verify Contact': '연락처 확인',\n  'Account recovery requires verified contact information':\n    '계정 복구를 위해 연락처 확인이 필요합니다',\n  Verify: '인증',\n  Website: '웹사이트',\n};\n","export const nlDict = {\n  'Back to Sign In': 'Terug naar inloggen',\n  'Change Password': 'Wachtwoord wijzigen',\n  Changing: 'Wordt aangepast',\n  Code: 'Code',\n  'Confirm Password': 'Bevestig Wachtwoord',\n  'Reset your Password': 'Wachtwoord resetten',\n  'Confirm Sign Up': 'Bevestig inschrijving',\n  'Confirm SMS Code': 'Bevestig SMS Code',\n  'Confirm TOTP Code': 'Bevestig TOTP Code',\n  Confirm: 'Bevestig',\n  'Confirmation Code': 'Bevestigingscode',\n  Confirming: 'Bevestigen',\n  'Create Account': 'Account aanmaken',\n  'Creating Account': 'Account wordt aangemaakt',\n  Email: 'E-mail',\n  'Enter your code': 'Vul je code in',\n  'Enter your username': 'Vul je gebruikersnaam in',\n  'Enter your phone number': 'Vul je telefoonnummer in',\n  'Enter your email': 'Vul je e-mail in',\n  'Forgot your password?': 'Wachtwoord vergeten? ',\n  'Hide password': 'Verberg wachtwoord',\n  Loading: 'Laden',\n  Username: 'Gebruikersnaam',\n  'New password': 'Nieuw wachtwoord',\n  Password: 'Wachtwoord',\n  'Phone Number': 'Telefoonnummer',\n  'Resend Code': 'Verstuur code nogmaals',\n  'Reset your password': 'Reset je wachtwoord',\n  'Send Code': 'Verstuur Code',\n  'Send code': 'Verstuur code',\n  Sending: 'Versturen',\n  'Setup TOTP': 'TOTP Instellingen',\n  'Show password': 'Toon wachtwoord',\n  'Sign in': 'Inloggen',\n  'Sign In': 'Inloggen',\n  'Sign In with Amazon': 'Inloggen met Amazon',\n  'Sign In with Apple': 'Inloggen met Apple',\n  'Sign In with Facebook': 'Inloggen met Facebook',\n  'Sign In with Google': 'Inloggen met Google',\n  'Sign in to your account': 'Inloggen op je account',\n  'Create a new account': 'Nieuw account aanmaken',\n  'Signing in': 'Inloggen',\n  Skip: 'Overslaan',\n  Submit: 'Versturen',\n  Submitting: 'Wordt verstuurd',\n  'Verify Contact': 'Verifieer Contact',\n  'Account recovery requires verified contact information':\n    'Accountherstel vereist geverifieerde contactgegevens',\n  Verify: 'Verifieer',\n};\n","export const plDict = {\n  'Back to Sign In': 'Powrót do logowania',\n  Birthdate: 'Data urodzenia',\n  'Change Password': 'Zmień hasło',\n  Changing: 'Zmienianie',\n  Code: 'Kod',\n  'Confirm Password': 'Potwierdź Hasło',\n  'Reset your Password': 'Zresetuj swoje hasło',\n  'Confirm Sign Up': 'Potwierdź rejestrację',\n  'Confirm SMS Code': 'Potwierdź kod SMS',\n  'Confirm TOTP Code': 'Potwierdź hasło jednorazowe',\n  Confirm: 'Potwierdź',\n  'Confirmation Code': 'Kod potwierdzenia',\n  Confirming: 'Potwierdzanie',\n  'Create Account': 'Utwórz konto',\n  'Creating Account': 'Tworzenie konta',\n  Email: 'E-mail',\n  'Enter your code': 'Wprowadź swój kod',\n  'Enter your username': 'Wprowadź swoją nazwę użytkownika',\n  'Family Name': 'Nazwisko',\n  'Given Name': 'Pierwsze imię',\n  'Forgot your password?': 'Zapomniałeś hasła? ',\n  'Hide password': 'Ukryj hasło',\n  Loading: 'Ładowanie',\n  Username: 'Nazwa użytkownika',\n  'Middle Name': 'Drugie imię',\n  Name: 'Imię i nazwisko',\n  Nickname: 'Pseudonim',\n  'New password': 'Nowe hasło',\n  Password: 'Hasło',\n  'Phone Number': 'Numer telefonu',\n  'Preferred Username': 'Preferowana nazwa użytkownika',\n  Profile: 'Profil',\n  'Resend Code': 'Wyślij kod ponownie',\n  'Reset your password': 'Zresetuj swoje hasło',\n  'Send Code': 'Zresetuj hasło',\n  'Send code': 'Wyślij kod',\n  Sending: 'Wysyłanie',\n  'Setup TOTP': 'Konfiguruj TOTP',\n  'Show password': 'Pokaż hasło',\n  'Sign in': 'Zaloguj',\n  'Sign In': 'Logowanie',\n  'Sign In with Amazon': 'Zaloguj z Amazon',\n  'Sign In with Apple': 'Zaloguj z Apple',\n  'Sign In with Facebook': 'Zaloguj z Facebook',\n  'Sign In with Google': 'Zaloguj z Google',\n  'Sign in to your account': 'Zaloguj się na swoje konto',\n  'Create a new account': 'Utwórz nowe konto',\n  'Signing in': 'Logowanie',\n  Skip: 'Pomiń',\n  Submit: 'Wyślij',\n  Submitting: 'Wysyłanie',\n  'Verify Contact': 'Weryfikacja danych kontaktowych',\n  'Account recovery requires verified contact information':\n    'Odzyskanie konta wymaga zweryfikowanych danych kontaktowych',\n  Verify: 'Zweryfikuj',\n  Website: 'Strona internetowa',\n};\n","export const ptDict = {\n  'Back to Sign In': 'Voltar para Entrar',\n  'Change Password': 'Mudar senha',\n  Changing: 'Mudando',\n  Code: 'Código',\n  'Confirm Password': 'Confirme a Senha',\n  'Reset your Password': 'Redefina sua senha',\n  'Confirm Sign Up': 'Confirmar inscrição',\n  'Confirm SMS Code': 'Confirme o código SMS',\n  'Confirm TOTP Code': 'Confirme o código TOTP',\n  Confirm: 'confirme',\n  'Confirmation Code': 'Código de confirmação',\n  Confirming: 'Confirmando',\n  'Create Account': 'Criar Conta',\n  'Creating Account': 'Criando conta',\n  Email: 'O email',\n  'Enter your code': 'Insira seu código',\n  'Enter your username': 'entre com seu nome de usuário',\n  'Enter your phone number': 'Digite seu número de telefone',\n  'Enter your email': 'Digite seu e-mail',\n  'Forgot your password?': 'Esqueceu sua senha? ',\n  'Hide password': 'Esconder a senha',\n  Loading: 'Carregando',\n  Username: 'Nome do usuário',\n  'New password': 'Nova Senha',\n  Password: 'Senha',\n  'Phone Number': 'Número de telefone',\n  'Resend Code': 'Reenviar código',\n  'Reset your password': 'Redefina sua senha',\n  'Send Code': 'Enviar código',\n  'Send code': 'Enviar código',\n  Sending: 'Enviando',\n  'Setup TOTP': 'Configurar TOTP',\n  'Show password': 'Mostrar senha',\n  'Sign In': 'Entrar',\n  'Sign in': 'Entrar',\n  'Sign In with Amazon': 'Entrar com a Amazon',\n  'Sign In with Apple': 'Entrar com a Apple',\n  'Sign In with Facebook': 'Entrar com o Facebook',\n  'Sign In with Google': 'Faça login no Google',\n  'Sign in to your account': 'Faça login em sua conta',\n  'Create a new account': 'Criar uma nova conta',\n  'Signing in': 'Entrando',\n  Skip: 'Pular',\n  Submit: 'Enviar',\n  Submitting: 'Enviando',\n  'Verify Contact': 'Verificar contato',\n  'Account recovery requires verified contact information':\n    'A recuperação da conta requer informações de contato verificadas',\n  Verify: 'Verificar',\n};\n","export const zhDict = {\n  'Account recovery requires verified contact information':\n    '账户恢复需要验证过的联系方式',\n  'Back to Sign In': '回到登录',\n  'Change Password': '改变密码',\n  Code: '确认码',\n  Confirm: '确认',\n  'Confirm a Code': '确认码',\n  'Confirm Password': '确认密码',\n  'Confirm Sign In': '确认登录',\n  'Confirm Sign Up': '确认注册',\n  Email: '邮箱',\n  'Forgot Password': '忘记密码',\n  'Incorrect username or password': '用户名或密码错误',\n  'Invalid password format': '密码格式错误',\n  'Invalid phone number format': '电话格式错误，请使用格式 +12345678900',\n  'New Password': '新密码',\n  or: '或者',\n  Password: '密码',\n  'Phone Number': '电话',\n  'Resend a Code': '重发确认码',\n  'Send Code': '发送确认码',\n  'Sign In': '登录',\n  'Sign Out': '退出',\n  'Sign Up': '注册',\n  Skip: '跳过',\n  Submit: '提交',\n  'User already exists': '用户已经存在',\n  'User does not exist': '用户不存在',\n  Username: '用户名',\n  Verify: '验证',\n  'Verify Contact': '验证联系方式',\n};\n","export const svDict = {\n  'Account recovery requires verified contact information':\n    'För att återställa kontot behöver du ett verifierat konto',\n  'An account with the given email already exists.':\n    'Det finns redan ett konto med denna e-postadress',\n  'Back to Sign In': 'Tillbaka till inloggningen',\n  'Change Password': 'Byt lösenord',\n  'Confirm Password': 'Bekräfta lösenord',\n  Code: 'Kod',\n  Confirm: 'Bekräfta',\n  'Confirm a Code': 'Bekräfta koden',\n  'Confirm Sign In': 'Bekräfta inloggning',\n  'Confirm Sign Up': 'Bekräfta registrering',\n  'Confirmation Code': 'Verifikationskod',\n  'Create a new account': 'Skapa ett nytt konto',\n  'Create account': 'Skapa konto',\n  'Create Account': 'Skapa konto',\n  Email: 'E-post',\n  'Enter your password': 'Ange ditt lösenord',\n  'Enter your username': 'Ange ditt användarnamn',\n  'Forgot Password': 'Glömt lösenordet',\n  'Forgot your password?': 'Glömt ditt lösenord? ',\n  'Have an account? ': 'Redan registrerad? ',\n  'Incorrect username or password': 'Felaktigt användarnamn eller lösenord',\n  'Invalid password format': 'Ogiltigt lösenordsformat',\n  'Invalid phone number format': `Ogiltigt format för telefonnummer`,\n  'Lost your code? ': 'Förlorat koden? ',\n  'New Password': 'Nytt lösenord',\n  'No account? ': 'Inget konto? ',\n  or: 'eller',\n  Password: 'Lösenord',\n  'Password attempts exceeded':\n    'Maximalt antal felaktiga inloggningsförsök har uppnåtts',\n  'Phone Number': 'Telefonnummer',\n  'Resend Code': 'Skicka koden igen',\n  'Reset password': 'Återställ lösenord',\n  'Reset your password': 'Återställ ditt lösenord',\n  'Send code': 'Skicka kod',\n  'Sign in': 'Logga in',\n  'Sign In': 'Logga in',\n  'Sign in to your account': 'Logga in till ditt konto',\n  'Sign Out': 'Logga ut',\n  'Sign Up': 'Registrering',\n  'We Emailed You': 'Vi har skickat e-post till dig',\n  'Enter your code': 'Skriv din kod',\n  Skip: 'Hoppa över',\n  Submit: 'Skicka',\n  'User already exists': 'Användaren finns redan',\n  'User does not exist': 'Användaren finns inte',\n  Username: 'Användarnamn',\n  'Username cannot be empty': 'Användarnamnet kan inte vara tomt',\n  Verify: 'Verifiera',\n  'Verify Contact': 'Verifiera kontakt',\n};\n","export const defaultTexts = {\n  BACK_SIGN_IN: 'Back to Sign In',\n  BIRTHDATE: 'Birthdate',\n  CHANGE_PASSWORD: 'Change Password',\n  CHANGING_PASSWORD: 'Changing',\n  CODE: 'Code',\n  CONFIRM_PASSWORD: 'Confirm Password',\n  CONFIRM_RESET_PASSWORD_HEADING: 'Reset your Password',\n  CONFIRM_SIGNUP_HEADING: 'Confirm Sign Up',\n  CONFIRM_SMS: 'Confirm SMS Code',\n  CONFIRM_TOTP: 'Confirm TOTP Code',\n  CONFIRM: 'Confirm',\n  CONFIRMATION_CODE: 'Confirmation Code',\n  CONFIRMING: 'Confirming',\n  CREATE_ACCOUNT: 'Create Account',\n  CREATING_ACCOUNT: 'Creating Account',\n  EMAIL_ADDRESS: 'Email',\n  ENTER_CODE: 'Enter your code',\n  ENTER_USERNAME: 'Enter your username',\n  FAMILY_NAME: 'Family Name',\n  GIVEN_NAME: 'Given Name',\n  FORGOT_YOUR_PASSWORD: 'Forgot your password?',\n  FORGOT_YOUR_PASSWORD_LEGACY: 'Forgot your password? ',\n  HIDE_PASSWORD: 'Hide password',\n  LOADING: 'Loading',\n  LOGIN_NAME: 'Username',\n  MIDDLE_NAME: 'Middle Name',\n  NAME: 'Name',\n  NICKNAME: 'Nickname',\n  NEW_PASSWORD: 'New password',\n  PASSWORD: 'Password',\n  PHONE_NUMBER: 'Phone Number',\n  PREFERRED_USERNAME: 'Preferred Username',\n  PROFILE: 'Profile',\n  RESEND_CODE: 'Resend Code',\n  RESET_PASSWORD_HEADING: 'Reset your password',\n  RESET_PASSWORD: 'Reset Password',\n  SEND_CODE: 'Send code',\n  SENDING: 'Sending',\n  SETUP_TOTP: 'Setup TOTP',\n  SHOW_PASSWORD: 'Show password',\n  SIGN_IN_BUTTON: 'Sign in',\n  SIGN_IN_TAB: 'Sign In',\n  SIGN_IN_WITH_AMAZON: 'Sign In with Amazon',\n  SIGN_IN_WITH_APPLE: 'Sign In with Apple',\n  SIGN_IN_WITH_FACEBOOK: 'Sign In with Facebook',\n  SIGN_IN_WITH_GOOGLE: 'Sign In with Google',\n  SIGN_IN: 'Sign in to your account',\n  SIGN_UP_BUTTON: 'Create a new account',\n  SIGNING_IN_BUTTON: 'Signing in',\n  SKIP: 'Skip',\n  SUBMIT: 'Submit',\n  SUBMITTING: 'Submitting',\n  VERIFY_CONTACT: 'Verify Contact',\n  VERIFY_HEADING: 'Account recovery requires verified contact information',\n  VERIFY: 'Verify',\n  WEBSITE: 'Website',\n};\n","export * from './authenticator';\n","import { assign, createMachine, forwardTo, spawn } from 'xstate';\n\nimport { AuthContext, AuthEvent, ServicesContext } from '../../types';\nimport { stopActor } from './actions';\nimport { resetPasswordActor, signInActor, signOutActor } from './actors';\nimport { defaultServices } from './defaultServices';\nimport { createSignUpMachine } from './signUp';\n\nconst DEFAULT_COUNTRY_CODE = '+1';\n\nexport type AuthenticatorMachineOptions = AuthContext['config'] & {\n  services?: AuthContext['services'];\n};\n\nexport function createAuthenticatorMachine() {\n  return createMachine<AuthContext, AuthEvent>(\n    {\n      id: 'authenticator',\n      initial: 'idle',\n      context: {\n        user: undefined,\n        config: {},\n        services: {},\n        actorRef: undefined,\n      },\n      states: {\n        // See: https://xstate.js.org/docs/guides/communication.html#invoking-promises\n        idle: {\n          on: {\n            INIT: {\n              target: 'setup',\n              actions: 'configure',\n            },\n          },\n        },\n        setup: {\n          invoke: [\n            {\n              // TODO Wait for Auth to be configured\n              src: (context, _) => context.services.getCurrentUser(),\n              onDone: {\n                actions: 'setUser',\n                target: 'authenticated',\n              },\n              onError: [\n                {\n                  target: 'signUp',\n                  cond: (context) => context.config.initialState === 'signUp',\n                },\n                {\n                  target: 'resetPassword',\n                  cond: (context) =>\n                    context.config.initialState === 'resetPassword',\n                },\n                { target: 'signIn' },\n              ],\n            },\n            {\n              src: (context, _) => context.services.getAmplifyConfig(),\n              onDone: {\n                actions: 'applyAmplifyConfig',\n              },\n            },\n          ],\n        },\n        signIn: {\n          entry: 'spawnSignInActor',\n          exit: stopActor('signInActor'),\n          on: {\n            SIGN_UP: 'signUp',\n            RESET_PASSWORD: 'resetPassword',\n            'done.invoke.signInActor': [\n              {\n                target: 'signUp',\n                cond: 'shouldRedirectToSignUp',\n              },\n              {\n                target: 'resetPassword',\n                cond: 'shouldRedirectToResetPassword',\n              },\n              {\n                target: 'authenticated',\n                actions: 'setUser',\n              },\n            ],\n          },\n        },\n        signUp: {\n          entry: 'spawnSignUpActor',\n          exit: stopActor('signUpActor'),\n          on: {\n            SIGN_IN: 'signIn',\n            'done.invoke.signUpActor': {\n              target: 'setup',\n              actions: 'setUser',\n            },\n          },\n        },\n        resetPassword: {\n          entry: 'spawnResetPasswordActor',\n          exit: stopActor('resetPasswordActor'),\n          on: {\n            SIGN_IN: 'signIn',\n            'done.invoke.resetPasswordActor': 'signIn',\n          },\n        },\n        signOut: {\n          entry: 'spawnSignOutActor',\n          exit: [stopActor('signOutActor'), 'clearUser'],\n          on: { 'done.invoke.signOutActor': 'signIn' },\n        },\n        authenticated: {\n          on: { SIGN_OUT: 'signOut' },\n        },\n      },\n      on: {\n        CHANGE: { actions: 'forwardToActor' },\n        BLUR: { actions: 'forwardToActor' },\n        SUBMIT: { actions: 'forwardToActor' },\n        FEDERATED_SIGN_IN: { actions: 'forwardToActor' },\n        RESEND: { actions: 'forwardToActor' },\n        SIGN_OUT: { actions: 'forwardToActor' },\n        SIGN_IN: { actions: 'forwardToActor' },\n        SKIP: { actions: 'forwardToActor' },\n      },\n    },\n    {\n      actions: {\n        forwardToActor: forwardTo((context) => context.actorRef),\n        setUser: assign({\n          user: (_, event) => event.data.user || event.data,\n        }),\n        clearUser: assign({\n          user: undefined,\n        }),\n        applyAmplifyConfig: assign({\n          config(context, event) {\n            // The CLI uses uppercased constants in `aws-exports.js`, while `parameters.json` are lowercase.\n            // We use lowercase to be consistent with previous versions' values.\n            const cliLoginMechanisms =\n              event.data.aws_cognito_username_attributes?.map((s) =>\n                s.toLowerCase()\n              ) ?? [];\n\n            const cliVerificationMechanisms =\n              event.data.aws_cognito_verification_mechanisms?.map((s) =>\n                s.toLowerCase()\n              ) ?? [];\n\n            const cliSignUpAttributes =\n              event.data.aws_cognito_signup_attributes?.map((s) =>\n                s.toLowerCase()\n              ) ?? [];\n\n            const cliSocialProviders =\n              event.data.aws_cognito_social_providers?.map((s) =>\n                s.toLowerCase()\n              ) ?? [];\n\n            // By default, Cognito assumes `username`, so there isn't a different username attribute like `email`.\n            // We explicitly add it as a login mechanism to be consistent with Admin UI's language.\n            if (cliLoginMechanisms.length === 0) {\n              cliLoginMechanisms.push('username');\n            }\n\n            // Prefer explicitly configured settings over default CLI values\\\n\n            const {\n              loginMechanisms,\n              signUpAttributes,\n              socialProviders,\n              initialState,\n            } = context.config;\n            return {\n              loginMechanisms: loginMechanisms ?? cliLoginMechanisms,\n              signUpAttributes:\n                signUpAttributes ??\n                Array.from(\n                  new Set([\n                    ...cliVerificationMechanisms,\n                    ...cliSignUpAttributes,\n                  ])\n                ),\n              socialProviders: socialProviders ?? cliSocialProviders.sort(),\n              initialState,\n            };\n          },\n        }),\n        spawnSignInActor: assign({\n          actorRef: (context, event) => {\n            const { services } = context;\n            const actor = signInActor({ services }).withContext({\n              authAttributes: event.data?.authAttributes,\n              user: event.data?.user,\n              intent: event.data?.intent,\n              country_code: DEFAULT_COUNTRY_CODE,\n              formValues: {},\n              touched: {},\n              validationError: {},\n              loginMechanisms: context.config?.loginMechanisms,\n              socialProviders: context.config?.socialProviders,\n            });\n            return spawn(actor, { name: 'signInActor' });\n          },\n        }),\n        spawnSignUpActor: assign({\n          actorRef: (context, event) => {\n            const { services } = context;\n            const actor = createSignUpMachine({ services }).withContext({\n              authAttributes: event.data?.authAttributes ?? {},\n              country_code: DEFAULT_COUNTRY_CODE,\n              intent: event.data?.intent,\n              formValues: {},\n              touched: {},\n              validationError: {},\n              loginMechanisms: context.config?.loginMechanisms,\n              socialProviders: context.config?.socialProviders,\n            });\n            return spawn(actor, { name: 'signUpActor' });\n          },\n        }),\n        spawnResetPasswordActor: assign({\n          actorRef: (context, event) => {\n            const { services } = context;\n            const actor = resetPasswordActor({ services }).withContext({\n              formValues: {},\n              touched: {},\n              intent: event.data?.intent,\n              username: event.data?.authAttributes?.username,\n              validationError: {},\n            });\n            return spawn(actor, { name: 'resetPasswordActor' });\n          },\n        }),\n        spawnSignOutActor: assign({\n          actorRef: (context) => {\n            const actor = signOutActor.withContext({\n              user: context.user,\n            });\n            return spawn(actor, { name: 'signOutActor' });\n          },\n        }),\n        configure: assign((_, event) => {\n          const { services: customServices, ...config } = event.data;\n          return {\n            services: { ...defaultServices, ...customServices },\n            config,\n          };\n        }),\n      },\n      guards: {\n        shouldRedirectToSignUp: (_, event): boolean => {\n          if (!event.data?.intent) return false;\n          return event.data.intent === 'confirmSignUp';\n        },\n        shouldRedirectToResetPassword: (_, event): boolean => {\n          if (!event.data?.intent) return false;\n          return event.data.intent === 'confirmPasswordReset';\n        },\n      },\n    }\n  );\n}\n","import { assign, stop } from 'xstate/lib/actions';\n\nimport {\n  ActorContextWithForms,\n  AuthEvent,\n  SignInContext,\n  SignUpContext,\n} from '../../types';\n\nexport const stopActor = (machineId: string) => {\n  return stop(machineId);\n};\n\n/**\n * https://github.com/statelyai/xstate/issues/866\n *\n * Actions in Xstate take in two arguments - a `context` and\n * an `event`.\n *\n * When writing reusable actions in a separate file for Xstate,\n * you cannot specify the type for both the `context` and the `event`.\n * The bug has been around for 2 years with seemingly no resolution\n * in sight.\n *\n * TypeScript apparently has trouble inferring Xstate properly.\n * So, when writing actions, only specify the type for either `context`\n * or `event` - but not both.\n *\n * https://xstate.js.org/docs/guides/typescript.html#assign-action-behaving-strangely\n *\n * Each of the actions NEEDS at least the `context` argument in the\n * `assign` body - even if it is unused. This is another known bug in\n * how TypeScript integrate with Xstate.\n */\n\n/**\n * \"clear\" actions\n */\nexport const clearAttributeToVerify = assign({\n  attributeToVerify: (_) => undefined,\n});\nexport const clearChallengeName = assign({ challengeName: (_) => undefined });\nexport const clearRequiredAttributes = assign({\n  requiredAttributes: (_) => undefined,\n});\nexport const clearError = assign({ remoteError: (_) => '' });\nexport const clearFormValues = assign({ formValues: (_) => ({}) });\nexport const clearTouched = assign({ touched: (_) => ({}) });\nexport const clearUnverifiedAttributes = assign({\n  unverifiedAttributes: (_) => undefined,\n});\nexport const clearUsername = assign({ username: (_) => undefined });\nexport const clearValidationError = assign({ validationError: (_) => ({}) });\n\n/**\n * \"set\" actions\n */\nexport const setChallengeName = assign({\n  challengeName: (_, event: AuthEvent) => event.data?.challengeName,\n});\n\nexport const setRequiredAttributes = assign({\n  requiredAttributes: (_, event: AuthEvent) =>\n    event.data?.challengeParam?.requiredAttributes,\n});\n\nexport const setConfirmResetPasswordIntent = assign({\n  redirectIntent: (_) => 'confirmPasswordReset',\n});\n\nexport const setConfirmSignUpIntent = assign({\n  redirectIntent: (_) => 'confirmSignUp',\n});\n\nexport const setCredentials = assign({\n  authAttributes: (context: SignInContext | SignUpContext, _) => {\n    const [primaryAlias] = context.loginMechanisms;\n    const username =\n      context.formValues[primaryAlias] ?? context.formValues['username'];\n    const password = context.formValues?.password;\n\n    return { username, password };\n  },\n});\n\nexport const setFieldErrors = assign({\n  validationError: (_, event: AuthEvent) => event.data,\n});\n\nexport const setRemoteError = assign({\n  remoteError: (_, event: AuthEvent) => {\n    if (event.data.name === 'NoUserPoolError') {\n      return `Configuration error (see console) – please contact the administrator`;\n    }\n    return event.data?.message || event.data;\n  },\n});\n\nexport const setUnverifiedAttributes = assign({\n  unverifiedAttributes: (_, event: AuthEvent) => event.data.unverified,\n});\n\nexport const setUser = assign({\n  user: (_, event: AuthEvent) => event.data.user || event.data,\n});\n\nexport const setUsername = assign({\n  username: (context: ActorContextWithForms, _) => context.formValues.username,\n});\n\nexport const setCodeDeliveryDetails = assign({\n  codeDeliveryDetails: (_, event: AuthEvent) => event.data.codeDeliveryDetails,\n});\n\nexport const setUsernameAuthAttributes = assign({\n  authAttributes: (context: ActorContextWithForms, _) => ({\n    username: context.formValues.username,\n  }),\n});\n\nexport const handleInput = assign({\n  formValues: (context, event: AuthEvent) => {\n    const { name, value } = event.data;\n\n    return {\n      ...context['formValues'],\n      [name]: value,\n    };\n  },\n});\n\nexport const handleBlur = assign({\n  touched: (context, event: AuthEvent) => {\n    const { name } = event.data;\n    return {\n      ...context['touched'],\n      [`${name}`]: true,\n    };\n  },\n});\n\n/**\n * This action occurs on the entry to a state where a form submit action\n * occurs. It combines the phone_number and country_code form values, parses\n * the result, and updates the form values with the full phone number which is\n * the required format by Cognito for form submission.\n */\nexport const parsePhoneNumber = assign({\n  formValues: (context: SignInContext | SignUpContext, _) => {\n    const [primaryAlias = 'username'] = context.loginMechanisms;\n\n    if (!context.formValues.phone_number && primaryAlias !== 'phone_number')\n      return context.formValues;\n\n    const { formValues, country_code: defaultCountryCode } = context;\n    const phoneAlias = formValues.phone_number ? 'phone_number' : 'username';\n\n    const parsedPhoneNumber = `${\n      formValues.country_code ?? defaultCountryCode\n    }${formValues[phoneAlias]}`.replace(/[^A-Z0-9+]/gi, '');\n\n    const updatedFormValues = {\n      ...formValues,\n      [phoneAlias]: parsedPhoneNumber,\n    };\n    delete updatedFormValues.country_code;\n\n    return updatedFormValues;\n  },\n});\n","export * from './signIn';\nexport * from './signOut';\nexport * from './resetPassword';\n","import { Auth } from 'aws-amplify';\nimport get from 'lodash/get';\nimport isEmpty from 'lodash/isEmpty';\nimport { createMachine, sendUpdate } from 'xstate';\nimport { AuthChallengeNames, AuthEvent, SignInContext } from '../../../types';\nimport { runValidators } from '../../../validators';\nimport {\n  clearAttributeToVerify,\n  clearChallengeName,\n  clearRequiredAttributes,\n  clearError,\n  clearFormValues,\n  clearTouched,\n  clearUnverifiedAttributes,\n  clearValidationError,\n  handleInput,\n  handleBlur,\n  parsePhoneNumber,\n  setChallengeName,\n  setConfirmResetPasswordIntent,\n  setConfirmSignUpIntent,\n  setCredentials,\n  setFieldErrors,\n  setRemoteError,\n  setRequiredAttributes,\n  setUnverifiedAttributes,\n  setUser,\n  setUsernameAuthAttributes,\n} from '../actions';\nimport { defaultServices } from '../defaultServices';\n\nexport type SignInMachineOptions = {\n  services?: Partial<typeof defaultServices>;\n};\n\nexport function signInActor({ services }: SignInMachineOptions) {\n  return createMachine<SignInContext, AuthEvent>(\n    {\n      initial: 'init',\n      id: 'signInActor',\n      states: {\n        init: {\n          always: [{ target: 'signIn' }],\n        },\n        signIn: {\n          initial: 'edit',\n          exit: ['clearFormValues', 'clearTouched'],\n          states: {\n            edit: {\n              entry: sendUpdate(),\n              on: {\n                SUBMIT: 'submit',\n                CHANGE: { actions: 'handleInput' },\n                FEDERATED_SIGN_IN: 'federatedSignIn',\n              },\n            },\n            federatedSignIn: {\n              tags: ['pending'],\n              entry: [sendUpdate(), 'clearError'],\n              invoke: {\n                src: 'federatedSignIn',\n                // getting navigated out anyway, only track errors.\n                // onDone: '#signInActor.resolved',\n                onError: { actions: 'setRemoteError' },\n              },\n            },\n            submit: {\n              tags: ['pending'],\n              entry: ['parsePhoneNumber', 'clearError', sendUpdate()],\n              invoke: {\n                src: 'signIn',\n                onDone: [\n                  {\n                    cond: 'shouldSetupTOTP',\n                    actions: ['setUser', 'setChallengeName'],\n                    target: '#signInActor.setupTOTP',\n                  },\n                  {\n                    cond: 'shouldConfirmSignIn',\n                    actions: ['setUser', 'setChallengeName'],\n                    target: '#signInActor.confirmSignIn',\n                  },\n                  {\n                    cond: 'shouldForceChangePassword',\n                    actions: [\n                      'setUser',\n                      'setChallengeName',\n                      'setRequiredAttributes',\n                    ],\n                    target: '#signInActor.forceNewPassword',\n                  },\n                  {\n                    actions: 'setUser',\n                    target: 'verifying',\n                  },\n                ],\n                onError: [\n                  {\n                    cond: 'shouldRedirectToConfirmSignUp',\n                    actions: ['setCredentials', 'setConfirmSignUpIntent'],\n                    target: 'rejected',\n                  },\n                  {\n                    cond: 'shouldRedirectToConfirmResetPassword',\n                    actions: [\n                      'setUsernameAuthAttributes',\n                      'setConfirmResetPasswordIntent',\n                    ],\n                    target: 'rejected',\n                  },\n                  {\n                    actions: 'setRemoteError',\n                    target: 'edit',\n                  },\n                ],\n              },\n            },\n            verifying: {\n              tags: ['pending'],\n              entry: ['clearError', sendUpdate()],\n              invoke: {\n                src: 'checkVerifiedContact',\n                onDone: [\n                  {\n                    cond: 'shouldRequestVerification',\n                    target: '#signInActor.verifyUser',\n                    actions: 'setUnverifiedAttributes',\n                  },\n                  {\n                    target: 'resolved',\n                  },\n                ],\n                onError: {\n                  actions: 'setRemoteError',\n                  target: 'edit',\n                },\n              },\n            },\n            resolved: { always: '#signInActor.resolved' },\n            rejected: { always: '#signInActor.rejected' },\n          },\n        },\n        confirmSignIn: {\n          initial: 'edit',\n          exit: ['clearFormValues', 'clearError', 'clearTouched'],\n          states: {\n            edit: {\n              entry: sendUpdate(),\n              on: {\n                SUBMIT: 'submit',\n                SIGN_IN: '#signInActor.signIn',\n                CHANGE: { actions: 'handleInput' },\n              },\n            },\n            submit: {\n              tags: ['pending'],\n              entry: ['clearError', sendUpdate()],\n              invoke: {\n                src: 'confirmSignIn',\n                onDone: {\n                  target: '#signInActor.resolved',\n                  actions: [\n                    'setUser',\n                    'clearChallengeName',\n                    'clearRequiredAttributes',\n                  ],\n                },\n                onError: {\n                  target: 'edit',\n                  actions: 'setRemoteError',\n                },\n              },\n            },\n          },\n        },\n        forceNewPassword: {\n          type: 'parallel',\n          exit: ['clearFormValues', 'clearError', 'clearTouched'],\n          states: {\n            validation: {\n              initial: 'pending',\n              states: {\n                pending: {\n                  invoke: {\n                    src: 'validateFields',\n                    onDone: {\n                      target: 'valid',\n                      actions: 'clearValidationError',\n                    },\n                    onError: {\n                      target: 'invalid',\n                      actions: 'setFieldErrors',\n                    },\n                  },\n                },\n                valid: { entry: sendUpdate() },\n                invalid: { entry: sendUpdate() },\n              },\n              on: {\n                CHANGE: {\n                  actions: 'handleInput',\n                  target: '.pending',\n                },\n                BLUR: {\n                  actions: 'handleBlur',\n                  target: '.pending',\n                },\n              },\n            },\n            submit: {\n              initial: 'idle',\n              entry: 'clearError',\n              states: {\n                idle: {\n                  entry: sendUpdate(),\n                  on: {\n                    SUBMIT: 'validate',\n                  },\n                },\n                validate: {\n                  entry: sendUpdate(),\n                  invoke: {\n                    src: 'validateFields',\n                    onDone: {\n                      target: 'pending',\n                      actions: 'clearValidationError',\n                    },\n                    onError: {\n                      target: 'idle',\n                      actions: 'setFieldErrors',\n                    },\n                  },\n                },\n                pending: {\n                  tags: ['pending'],\n                  entry: [sendUpdate(), 'clearError'],\n                  invoke: {\n                    src: 'forceNewPassword',\n                    onDone: [\n                      {\n                        cond: 'shouldConfirmSignIn',\n                        actions: ['setUser', 'setChallengeName'],\n                        target: '#signInActor.confirmSignIn',\n                      },\n                      {\n                        cond: 'shouldSetupTOTP',\n                        actions: ['setUser', 'setChallengeName'],\n\n                        target: '#signInActor.setupTOTP',\n                      },\n                      {\n                        target: 'resolved',\n                        actions: ['setUser', 'setCredentials'],\n                      },\n                    ],\n                    onError: {\n                      target: 'idle',\n                      actions: 'setRemoteError',\n                    },\n                  },\n                },\n                resolved: { type: 'final', always: '#signInActor.resolved' },\n              },\n            },\n          },\n        },\n        setupTOTP: {\n          initial: 'edit',\n          exit: ['clearFormValues', 'clearError', 'clearTouched'],\n          states: {\n            edit: {\n              entry: sendUpdate(),\n              on: {\n                SUBMIT: 'submit',\n                SIGN_IN: '#signInActor.signIn',\n                CHANGE: { actions: 'handleInput' },\n              },\n            },\n            submit: {\n              tags: ['pending'],\n              entry: [sendUpdate(), 'clearError'],\n              invoke: {\n                src: 'verifyTotpToken',\n                onDone: {\n                  actions: [\n                    'setUser',\n                    'clearChallengeName',\n                    'clearRequiredAttributes',\n                  ],\n                  target: '#signInActor.resolved',\n                },\n                onError: {\n                  actions: 'setRemoteError',\n                  target: 'edit',\n                },\n              },\n            },\n          },\n        },\n        verifyUser: {\n          initial: 'edit',\n          exit: ['clearFormValues', 'clearError', 'clearTouched'],\n          states: {\n            edit: {\n              entry: sendUpdate(),\n              on: {\n                SUBMIT: 'submit',\n                SKIP: '#signInActor.resolved',\n                CHANGE: { actions: 'handleInput' },\n              },\n            },\n            submit: {\n              tags: ['pending'],\n              entry: 'clearError',\n              invoke: {\n                src: 'verifyUser',\n                onDone: {\n                  target: '#signInActor.confirmVerifyUser',\n                },\n                onError: {\n                  actions: 'setRemoteError',\n                  target: 'edit',\n                },\n              },\n            },\n          },\n        },\n        confirmVerifyUser: {\n          initial: 'edit',\n          exit: [\n            'clearFormValues',\n            'clearError',\n            'clearUnverifiedAttributes',\n            'clearAttributeToVerify',\n            'clearTouched',\n          ],\n          states: {\n            edit: {\n              entry: sendUpdate(),\n              on: {\n                SUBMIT: 'submit',\n                SKIP: '#signInActor.resolved',\n                CHANGE: { actions: 'handleInput' },\n              },\n            },\n            submit: {\n              tags: ['pending'],\n              entry: 'clearError',\n              invoke: {\n                src: 'confirmVerifyUser',\n                onDone: {\n                  target: '#signInActor.resolved',\n                },\n                onError: {\n                  actions: 'setRemoteError',\n                  target: 'edit',\n                },\n              },\n            },\n          },\n        },\n        resolved: {\n          type: 'final',\n          data: (context) => ({\n            user: context.user,\n          }),\n        },\n        rejected: {\n          type: 'final',\n          data: (context, event) => {\n            return {\n              intent: context.redirectIntent,\n              authAttributes: context.authAttributes,\n            };\n          },\n        },\n      },\n    },\n    {\n      actions: {\n        clearAttributeToVerify,\n        clearChallengeName,\n        clearRequiredAttributes,\n        clearError,\n        clearFormValues,\n        clearTouched,\n        clearUnverifiedAttributes,\n        clearValidationError,\n        handleInput,\n        handleBlur,\n        parsePhoneNumber,\n        setChallengeName,\n        setConfirmResetPasswordIntent,\n        setConfirmSignUpIntent,\n        setRequiredAttributes,\n        setCredentials,\n        setFieldErrors,\n        setRemoteError,\n        setUnverifiedAttributes,\n        setUser,\n        setUsernameAuthAttributes,\n      },\n      guards: {\n        shouldConfirmSignIn: (_, event): boolean => {\n          const challengeName = get(event, 'data.challengeName');\n          const validChallengeNames = [\n            AuthChallengeNames.SMS_MFA,\n            AuthChallengeNames.SOFTWARE_TOKEN_MFA,\n          ];\n\n          return validChallengeNames.includes(challengeName);\n        },\n        shouldRedirectToConfirmSignUp: (_, event): boolean => {\n          return event.data.code === 'UserNotConfirmedException';\n        },\n        shouldRedirectToConfirmResetPassword: (_, event): boolean => {\n          return event.data.code === 'PasswordResetRequiredException';\n        },\n        shouldSetupTOTP: (_, event): boolean => {\n          const challengeName = get(event, 'data.challengeName');\n\n          return challengeName === AuthChallengeNames.MFA_SETUP;\n        },\n        shouldForceChangePassword: (_, event): boolean => {\n          const challengeName = get(event, 'data.challengeName');\n\n          return challengeName === AuthChallengeNames.NEW_PASSWORD_REQUIRED;\n        },\n        shouldRequestVerification: (_, event): boolean => {\n          const { unverified, verified } = event.data;\n\n          return isEmpty(verified) && !isEmpty(unverified);\n        },\n      },\n      services: {\n        async signIn(context) {\n          const { username, password } = context.formValues;\n\n          return await services.handleSignIn({\n            username,\n            password,\n          });\n        },\n        async confirmSignIn(context, event) {\n          const { challengeName, user } = context;\n          const { confirmation_code: code } = context.formValues;\n\n          let mfaType;\n          if (\n            challengeName === AuthChallengeNames.SMS_MFA ||\n            challengeName === AuthChallengeNames.SOFTWARE_TOKEN_MFA\n          ) {\n            mfaType = challengeName;\n          }\n\n          return await services.handleConfirmSignIn({ user, code, mfaType });\n        },\n        async forceNewPassword(context, event) {\n          const { user, formValues } = context;\n          let {\n            password,\n            confirm_password,\n            phone_number,\n            country_code,\n            ...rest\n          } = formValues;\n\n          let phoneNumberWithCountryCode;\n          if (phone_number) {\n            phoneNumberWithCountryCode =\n              `${country_code}${phone_number}`.replace(/[^A-Z0-9+]/gi, '');\n            rest = { ...rest, phone_number: phoneNumberWithCountryCode };\n          }\n\n          return Auth.completeNewPassword(user, password, rest);\n        },\n        async verifyTotpToken(context, event) {\n          const { user } = context;\n          const { confirmation_code } = context.formValues;\n\n          return Auth.verifyTotpToken(user, confirmation_code);\n        },\n        async federatedSignIn(_, event) {\n          const { provider } = event.data;\n\n          return await Auth.federatedSignIn({ provider });\n        },\n        async checkVerifiedContact(context, event) {\n          const { user } = context;\n          const result = await Auth.verifiedContact(user);\n\n          return result;\n        },\n        async verifyUser(context, event) {\n          const { unverifiedAttr } = context.formValues;\n          const result = await Auth.verifyCurrentUserAttribute(unverifiedAttr);\n\n          context.attributeToVerify = unverifiedAttr;\n\n          return result;\n        },\n        async confirmVerifyUser(context, event) {\n          const { attributeToVerify } = context;\n          const { confirmation_code } = context.formValues;\n\n          return await Auth.verifyCurrentUserAttributeSubmit(\n            attributeToVerify,\n            confirmation_code\n          );\n        },\n        async validateFields(context, event) {\n          return runValidators(context.formValues, context.touched, [\n            defaultServices.validateConfirmPassword,\n          ]);\n        },\n      },\n    }\n  );\n}\n","import { AuthFormData, Validator } from '../types';\nimport isEmpty from 'lodash/isEmpty';\nimport merge from 'lodash/merge';\n\n// Runs all validators given. Resolves if there are no error. Rejects otherwise.\nexport const runValidators = async (\n  formData: AuthFormData,\n  touchData: AuthFormData,\n  validators: Validator[]\n) => {\n  const errors = await Promise.all(\n    validators.map((validator) => validator(formData, touchData))\n  );\n  const mergedError = merge({}, ...errors);\n\n  if (isEmpty(mergedError)) {\n    // no errors were found\n    return Promise.resolve();\n  } else {\n    return Promise.reject(mergedError);\n  }\n};\n","import { Amplify, Auth } from 'aws-amplify';\n\nimport { AuthChallengeNames, SignInResult, ValidatorResult } from '../../types';\n\nexport const defaultServices = {\n  async getAmplifyConfig() {\n    return Amplify.configure();\n  },\n\n  async getCurrentUser() {\n    return Auth.currentAuthenticatedUser();\n  },\n\n  async handleSignUp(formData): Promise<any> {\n    return Auth.signUp(formData);\n  },\n  async handleSignIn({\n    username,\n    password,\n  }: {\n    username: string;\n    password: string;\n  }): Promise<any> {\n    return Auth.signIn(username, password);\n  },\n  async handleConfirmSignIn({\n    user,\n    code,\n    mfaType,\n  }: {\n    user: any;\n    code: string;\n    mfaType: AuthChallengeNames.SMS_MFA | AuthChallengeNames.SOFTWARE_TOKEN_MFA;\n  }): Promise<any> {\n    return Auth.confirmSignIn(user, code, mfaType);\n  },\n  async handleConfirmSignUp({\n    username,\n    code,\n  }: {\n    username: string;\n    code: string;\n  }): Promise<any> {\n    return await Auth.confirmSignUp(username, code);\n  },\n  async handleForgotPasswordSubmit({\n    username,\n    code,\n    password,\n  }: {\n    username: string;\n    code: string;\n    password: string;\n  }): Promise<SignInResult> {\n    return Auth.forgotPasswordSubmit(username, code, password);\n  },\n  async handleForgotPassword(formData): Promise<any> {\n    return Auth.forgotPassword(formData);\n  },\n\n  // Validation hooks for overriding\n  async validateCustomSignUp(formData, touchData): Promise<ValidatorResult> {},\n  async validateConfirmPassword<Validator>(\n    formData,\n    touchData\n  ): Promise<ValidatorResult> {\n    const { password, confirm_password } = formData;\n\n    const {\n      confirm_password: touched_confirm_password,\n      password: touched_password,\n    } = touchData;\n\n    if (!password && !confirm_password) {\n      // these inputs are clean, don't complain yet\n      return null;\n    } else if (\n      (password || confirm_password) &&\n      password !== confirm_password &&\n      ((touched_confirm_password && touched_password) ||\n        (password.length >= 6 && confirm_password.length >= 6))\n    ) {\n      // Only return an error if both fields have text entered,\n      // the passwords do not match, and the fields have been\n      // touched or the password and confirm password is longer then or equal to 6.\n\n      return {\n        confirm_password: 'Your passwords must match',\n      };\n    }\n  },\n  async validatePreferredUsername(\n    formData,\n    touchData\n  ): Promise<ValidatorResult> {},\n};\n","import { createMachine } from 'xstate';\n\nimport { AuthEvent, SignOutContext } from '../../../types';\nimport { Auth } from 'aws-amplify';\n\nexport const signOutActor = createMachine<SignOutContext, AuthEvent>(\n  {\n    initial: 'pending',\n    id: 'signOutActor',\n    states: {\n      pending: {\n        tags: ['pending'],\n        invoke: {\n          src: 'signOut',\n          onDone: 'resolved',\n          onError: 'rejected',\n        },\n      },\n      resolved: { type: 'final' },\n      rejected: { type: 'final' },\n    },\n  },\n  {\n    services: {\n      signOut: () => Auth.signOut(/* global? */),\n    },\n  }\n);\n","import { createMachine, sendUpdate } from 'xstate';\nimport { AuthEvent, ResetPasswordContext } from '../../../types';\nimport { runValidators } from '../../../validators';\nimport {\n  clearError,\n  clearFormValues,\n  clearTouched,\n  clearUsername,\n  clearValidationError,\n  handleInput,\n  handleBlur,\n  setFieldErrors,\n  setRemoteError,\n  setUsername,\n} from '../actions';\nimport { defaultServices } from '../defaultServices';\n\nexport type ResetPasswordMachineOptions = {\n  services?: Partial<typeof defaultServices>;\n};\n\nexport function resetPasswordActor({ services }: ResetPasswordMachineOptions) {\n  return createMachine<ResetPasswordContext, AuthEvent>(\n    {\n      id: 'resetPasswordActor',\n      initial: 'init',\n      states: {\n        init: {\n          always: [\n            { target: 'confirmResetPassword', cond: 'shouldAutoConfirmReset' },\n            { target: 'resetPassword' },\n          ],\n        },\n        resetPassword: {\n          initial: 'edit',\n          exit: ['clearFormValues', 'clearError', 'clearTouched'],\n          states: {\n            edit: {\n              entry: sendUpdate(),\n              on: {\n                SUBMIT: 'submit',\n                CHANGE: { actions: 'handleInput' },\n                BLUR: { actions: 'handleBlur' },\n              },\n            },\n            submit: {\n              tags: ['pending'],\n              entry: [sendUpdate(), 'setUsername', 'clearError'],\n              invoke: {\n                src: 'resetPassword',\n                onDone: {\n                  target: '#resetPasswordActor.confirmResetPassword',\n                },\n                onError: {\n                  actions: ['setRemoteError'],\n                  target: 'edit',\n                },\n              },\n            },\n          },\n        },\n        confirmResetPassword: {\n          type: 'parallel',\n          exit: [\n            'clearFormValues',\n            'clearError',\n            'clearUsername',\n            'clearTouched',\n          ],\n          states: {\n            validation: {\n              initial: 'pending',\n              states: {\n                pending: {\n                  invoke: {\n                    src: 'validateFields',\n                    onDone: {\n                      target: 'valid',\n                      actions: 'clearValidationError',\n                    },\n                    onError: {\n                      target: 'invalid',\n                      actions: 'setFieldErrors',\n                    },\n                  },\n                },\n                valid: { entry: sendUpdate() },\n                invalid: { entry: sendUpdate() },\n              },\n              on: {\n                CHANGE: {\n                  actions: 'handleInput',\n                  target: '.pending',\n                },\n                BLUR: {\n                  actions: 'handleBlur',\n                  target: '.pending',\n                },\n              },\n            },\n            submission: {\n              initial: 'idle',\n              states: {\n                idle: {\n                  entry: sendUpdate(),\n                  on: {\n                    SUBMIT: 'validate',\n                    RESEND: 'resendCode',\n                    CHANGE: { actions: 'handleInput' },\n                    BLUR: { actions: 'handleBlur' },\n                  },\n                },\n                validate: {\n                  entry: sendUpdate(),\n                  invoke: {\n                    src: 'validateFields',\n                    onDone: {\n                      target: 'pending',\n                      actions: 'clearValidationError',\n                    },\n                    onError: {\n                      target: 'idle',\n                      actions: 'setFieldErrors',\n                    },\n                  },\n                },\n                resendCode: {\n                  tags: ['pending'],\n                  entry: ['clearError', sendUpdate()],\n                  invoke: {\n                    src: 'resetPassword',\n                    onDone: { target: 'idle' },\n                    onError: {\n                      actions: 'setRemoteError',\n                      target: 'idle',\n                    },\n                  },\n                },\n                pending: {\n                  tags: ['pending'],\n                  entry: ['clearError', sendUpdate()],\n                  invoke: {\n                    src: 'confirmResetPassword',\n                    onDone: {\n                      actions: 'clearUsername',\n                      target: '#resetPasswordActor.resolved',\n                    },\n                    onError: {\n                      actions: 'setRemoteError',\n                      target: 'idle',\n                    },\n                  },\n                },\n              },\n            },\n          },\n        },\n        resolved: { type: 'final' },\n      },\n    },\n    {\n      actions: {\n        clearError,\n        clearFormValues,\n        clearTouched,\n        clearUsername,\n        clearValidationError,\n        handleInput,\n        handleBlur,\n        setFieldErrors,\n        setRemoteError,\n        setUsername,\n      },\n      guards: {\n        shouldAutoConfirmReset: (context, event): boolean => {\n          return !!(\n            context.intent && context.intent === 'confirmPasswordReset'\n          );\n        },\n      },\n      services: {\n        async resetPassword(context) {\n          const username = context.formValues?.username ?? context.username;\n\n          return services.handleForgotPassword(username);\n        },\n        async confirmResetPassword(context) {\n          const { username } = context;\n          const { confirmation_code: code, password } = context.formValues;\n\n          return services.handleForgotPasswordSubmit({\n            username,\n            code,\n            password,\n          });\n        },\n        async validateFields(context, event) {\n          return runValidators(context.formValues, context.touched, [\n            defaultServices.validateConfirmPassword,\n          ]);\n        },\n      },\n    }\n  );\n}\n","import { Auth } from 'aws-amplify';\nimport get from 'lodash/get';\nimport pickBy from 'lodash/pickBy';\nimport { createMachine, sendUpdate } from 'xstate';\n\nimport { AuthEvent, SignUpContext } from '../../types';\nimport { runValidators } from '../../validators';\nimport {\n  clearError,\n  clearFormValues,\n  clearTouched,\n  clearValidationError,\n  handleInput,\n  handleBlur,\n  parsePhoneNumber,\n  setCredentials,\n  setFieldErrors,\n  setRemoteError,\n  setCodeDeliveryDetails,\n  setUser,\n} from './actions';\nimport { defaultServices } from './defaultServices';\n\nexport type SignUpMachineOptions = {\n  services?: Partial<typeof defaultServices>;\n};\n\nexport function createSignUpMachine({ services }: SignUpMachineOptions) {\n  return createMachine<SignUpContext, AuthEvent>(\n    {\n      id: 'signUpActor',\n      initial: 'init',\n      states: {\n        init: {\n          always: [\n            { target: 'confirmSignUp', cond: 'shouldInitConfirmSignUp' },\n            { target: 'signUp' },\n          ],\n        },\n        signUp: {\n          type: 'parallel',\n          exit: ['clearError', 'clearFormValues', 'clearTouched'],\n          states: {\n            validation: {\n              initial: 'pending',\n              states: {\n                pending: {\n                  invoke: {\n                    src: 'validateSignUp',\n                    onDone: {\n                      target: 'valid',\n                      actions: 'clearValidationError',\n                    },\n                    onError: {\n                      target: 'invalid',\n                      actions: 'setFieldErrors',\n                    },\n                  },\n                },\n                valid: { entry: sendUpdate() },\n                invalid: { entry: sendUpdate() },\n              },\n              on: {\n                CHANGE: {\n                  actions: 'handleInput',\n                  target: '.pending',\n                },\n                BLUR: {\n                  actions: 'handleBlur',\n                  target: '.pending',\n                },\n              },\n            },\n            submission: {\n              initial: 'idle',\n              states: {\n                idle: {\n                  entry: sendUpdate(),\n                  on: {\n                    SUBMIT: 'validate',\n                    FEDERATED_SIGN_IN: 'federatedSignIn',\n                  },\n                },\n                federatedSignIn: {\n                  tags: ['pending'],\n                  entry: [sendUpdate(), 'clearError'],\n                  invoke: {\n                    src: 'federatedSignIn',\n                    onDone: '#signUpActor.resolved',\n                    onError: { actions: 'setRemoteError' },\n                  },\n                },\n                validate: {\n                  entry: sendUpdate(),\n                  invoke: {\n                    src: 'validateSignUp',\n                    onDone: {\n                      target: 'pending',\n                      actions: 'clearValidationError',\n                    },\n                    onError: {\n                      target: 'idle',\n                      actions: 'setFieldErrors',\n                    },\n                  },\n                },\n                pending: {\n                  tags: ['pending'],\n                  entry: ['parsePhoneNumber', sendUpdate(), 'clearError'],\n                  invoke: {\n                    src: 'signUp',\n                    onDone: [\n                      {\n                        cond: 'shouldSkipConfirm',\n                        target: 'skipConfirm',\n                        actions: ['setUser'],\n                      },\n                      {\n                        target: 'resolved',\n                        actions: [\n                          'setUser',\n                          'setCredentials',\n                          'setCodeDeliveryDetails',\n                        ],\n                      },\n                    ],\n                    onError: {\n                      target: 'idle',\n                      actions: 'setRemoteError',\n                    },\n                  },\n                },\n                skipConfirm: {\n                  invoke: {\n                    src: 'signIn',\n                    onDone: {\n                      target: '#signUpActor.resolved',\n                      actions: 'setUser',\n                    },\n                    onError: {\n                      target: 'idle',\n                      actions: 'setRemoteError',\n                    },\n                  },\n                },\n\n                resolved: {\n                  type: 'final',\n                  always: '#signUpActor.confirmSignUp',\n                },\n              },\n            },\n          },\n        },\n        confirmSignUp: {\n          initial: 'edit',\n          states: {\n            edit: {\n              entry: sendUpdate(),\n              on: {\n                SUBMIT: 'submit',\n                CHANGE: { actions: 'handleInput' },\n                BLUR: { actions: 'handleBlur' },\n                RESEND: 'resend',\n              },\n            },\n            resend: {\n              tags: ['pending'],\n              entry: sendUpdate(),\n              invoke: {\n                src: 'resendConfirmationCode',\n                onDone: { target: 'edit' },\n                onError: [\n                  {\n                    target: '#signUpActor.resolved',\n                    actions: 'setUser',\n                    cond: 'isUserAlreadyConfirmed',\n                  },\n                  { target: 'edit', actions: 'setRemoteError' },\n                ],\n              },\n            },\n            submit: {\n              tags: ['pending'],\n              entry: [sendUpdate(), 'clearError'],\n              invoke: {\n                src: 'confirmSignUp',\n                onDone: {\n                  target: '#signUpActor.resolved',\n                  actions: ['setUser'],\n                },\n                onError: { target: 'edit', actions: 'setRemoteError' },\n              },\n            },\n          },\n        },\n        resolved: {\n          type: 'final',\n          data: (context, event) => {\n            const { username, password } = context.authAttributes;\n\n            return {\n              user: get(event, 'data.user') || context.user,\n              authAttributes: { username, password },\n            };\n          },\n        },\n      },\n    },\n    {\n      guards: {\n        /**\n         * This guard covers an edge case that exists in the current state of the UI.\n         * As of now, our ConfirmSignUp screen only supports showing an input for a\n         * confirmation code. However, a Cognito UserPool can instead verify users\n         * through a link that gets emailed to them. If a user verifies through the\n         * link and then they click on the \"Resend Code\" button, they will get an error\n         * saying that the user has already been confirmed. If we encounter that error,\n         * we want to just funnel them through the rest of the flow. In the future, we will\n         * want to update our UI to support both confirmation codes and links.\n         *\n         * https://github.com/aws-amplify/amplify-ui/issues/219\n         */\n        isUserAlreadyConfirmed: (context, event) => {\n          return event.data.message === 'User is already confirmed.';\n        },\n        shouldInitConfirmSignUp: (context) => {\n          return context.intent && context.intent === 'confirmSignUp';\n        },\n        shouldSkipConfirm: (context, event) => {\n          return event.data.userConfirmed;\n        },\n      },\n      actions: {\n        clearError,\n        clearFormValues,\n        clearTouched,\n        clearValidationError,\n        handleInput,\n        handleBlur,\n        parsePhoneNumber,\n        setCredentials,\n        setFieldErrors,\n        setRemoteError,\n        setCodeDeliveryDetails,\n        setUser,\n      },\n      services: {\n        async signIn(context, event) {\n          const { user, authAttributes, formValues } = context;\n\n          const username =\n            get(user, 'username') || get(authAttributes, 'username');\n          const password = get(formValues, 'password');\n\n          return await Auth.signIn(username, password);\n        },\n        async confirmSignUp(context, event) {\n          const { user, authAttributes, formValues } = context;\n          const { confirmation_code: code } = formValues;\n\n          const username =\n            get(user, 'username') || get(authAttributes, 'username');\n          const { password } = authAttributes;\n\n          await services.handleConfirmSignUp({ username, code });\n\n          return await Auth.signIn(username, password);\n        },\n        async resendConfirmationCode(context, event) {\n          const { user, authAttributes } = context;\n          const username =\n            get(user, 'username') || get(authAttributes, 'username');\n\n          return Auth.resendSignUp(username);\n        },\n        async federatedSignIn(_, event) {\n          const { provider } = event.data;\n          const result = await Auth.federatedSignIn({ provider });\n          return result;\n        },\n        async signUp(context, _event) {\n          const { formValues, loginMechanisms } = context;\n          const [primaryAlias = 'username'] = loginMechanisms;\n          const { [primaryAlias]: username, password } = formValues;\n\n          const attributes = pickBy(formValues, (_, key) => {\n            // Allowlist of Cognito User Pool Attributes (from OpenID Connect specification)\n            // See: https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-attributes.html\n            switch (key) {\n              case 'address':\n              case 'birthdate':\n              case 'email':\n              case 'family_name':\n              case 'gender':\n              case 'given_name':\n              case 'locale':\n              case 'middle_name':\n              case 'name':\n              case 'nickname':\n              case 'phone_number':\n              case 'picture':\n              case 'preferred_username':\n              case 'profile':\n              case 'updated_at':\n              case 'website':\n              case 'zoneinfo':\n                return true;\n\n              // Otherwise, it's a custom attribute\n              default:\n                return key.startsWith('custom:');\n            }\n          });\n\n          return await services.handleSignUp({\n            username,\n            password,\n            attributes,\n          });\n        },\n        async validateSignUp(context, event) {\n          // This needs to exist in the machine to reference new `services`\n\n          return runValidators(context.formValues, context.touched, [\n            // Validation for default form fields\n            services.validateConfirmPassword,\n            services.validatePreferredUsername,\n            // Validation for any custom Sign Up fields\n            services.validateCustomSignUp,\n          ]);\n        },\n      },\n    }\n  );\n}\n","import { createTheme } from './createTheme';\nimport { baseTheme } from './baseTheme';\n\nexport { createTheme };\nexport * from './types';\n\nexport const defaultTheme = createTheme(\n  {\n    name: 'default-theme',\n  },\n  baseTheme\n);\n","// Internal Style Dictionary methods\nimport deepExtend from 'style-dictionary/lib/utils/deepExtend';\nimport flattenProperties from 'style-dictionary/lib/utils/flattenProperties';\n\nimport { baseTheme as _baseTheme } from './baseTheme';\nimport { Theme, BaseTheme, WebTheme, Override } from './types';\nimport { cssValue, cssNameTransform } from './utils';\nimport { WebTokens } from './tokens';\nimport { DesignToken, WebDesignToken } from './tokens/types/designToken';\n\n/**\n * This will take a design token and add some data to it for it\n * to be used in JS/CSS. It will create its CSS var name and update\n * the value to use a CSS var if it is a reference. It will also\n * add a `.toString()` method to make it easier to use in JS.\n *\n * We should see if there is a way to share this logic with style dictionary...\n */\nfunction setupToken(token: DesignToken, path: Array<string>): WebDesignToken {\n  const name = `--${cssNameTransform({ path })}`;\n  const { value } = token;\n\n  return {\n    name,\n    path,\n    value: cssValue(token),\n    original: value,\n    toString: () => `var(${name})`,\n  };\n}\n\n/**\n * Recursive function that will walk down the token object\n * and perform the setupToken function on each token.\n * Similar to what Style Dictionary does.\n */\nfunction setupTokens(obj: any, path = []) {\n  let tokens = {};\n\n  if (obj.hasOwnProperty('value')) {\n    return setupToken(obj, path);\n  } else {\n    for (const name in obj) {\n      if (obj.hasOwnProperty(name)) {\n        tokens[name] = setupTokens(obj[name], path.concat(name));\n      }\n    }\n  }\n\n  return tokens;\n}\n\n/**\n * This will be used like `const myTheme = createTheme({})`\n * `myTheme` can then be passed to a Provider or the generated CSS\n * can be passed to a stylesheet at build-time or run-time.\n * const myTheme = createTheme({})\n * const myOtherTheme = createTheme({}, myTheme);\n */\nexport function createTheme(\n  theme?: Theme,\n  baseTheme: BaseTheme = _baseTheme\n): WebTheme {\n  // merge theme and baseTheme to get a complete theme\n  // deepExtend is an internal Style Dictionary method\n  // that performs a deep merge on n objects. We could change\n  // this to another 3p deep merge solution too.\n  const mergedTheme: BaseTheme = deepExtend([{}, baseTheme, theme]);\n\n  // Setting up the tokens. This is similar to what Style Dictionary\n  // does. At the end of this, each token should have:\n  // - CSS variable name of itself\n  // - its value (reference to another CSS variable or raw value)\n  const tokens = setupTokens(mergedTheme.tokens) as WebTokens; // Setting the type here because setupTokens is recursive\n\n  const { breakpoints, name } = mergedTheme;\n\n  // flattenProperties is another internal Style Dictionary function\n  // that creates an array of all tokens.\n  let cssText =\n    `[data-amplify-theme=\"${name}\"] {\\n` +\n    flattenProperties(tokens)\n      .map((token) => `${token.name}: ${token.value};`)\n      .join('\\n') +\n    `\\n}\\n`;\n\n  let overrides: Array<Override> = [];\n\n  /**\n   * For each override, we setup the tokens and then generate the CSS.\n   * This allows us to have one single CSS string for all possible overrides\n   * and avoid re-renders in React, but also support other frameworks as well.\n   */\n  if (mergedTheme.overrides) {\n    overrides = mergedTheme.overrides.map((override) => {\n      const tokens = setupTokens(override.tokens);\n      const customProperties = flattenProperties(tokens)\n        .map((token) => `${token.name}: ${token.value};`)\n        .join('\\n');\n      // Overrides can have a selector, media query, breakpoint, or color mode\n      // for creating the selector\n      if ('selector' in override) {\n        cssText += `\\n${override.selector} {\\n${customProperties}\\n}\\n`;\n      }\n      if ('mediaQuery' in override) {\n        cssText += `\\n@media (${override.mediaQuery}) {\n  [data-amplify-theme=\"${name}\"] {\n    ${customProperties}\n  }\n}\\n`;\n      }\n      if ('breakpoint' in override) {\n        const breakpoint = mergedTheme.breakpoints.values[override.breakpoint];\n        cssText += `\\n@media (min-width: ${breakpoint}px) {\n  [data-amplify-theme=\"${name}\"] {\n    ${customProperties}\n  }\n}\\n`;\n      }\n      if ('colorMode' in override) {\n        cssText += `\\n@media (prefers-color-scheme: ${override.colorMode}) {\n          [data-amplify-theme=\"${name}\"][data-amplify-color-mode=\"system\"] {\\n${customProperties}\\n}\n        }\\n`;\n        cssText += `\\n[data-amplify-theme=\"${name}\"][data-amplify-color-mode=\"${override.colorMode}\"] {\\n${customProperties}\\n}\\n`;\n      }\n\n      return {\n        ...override,\n        tokens,\n      };\n    });\n  }\n\n  return {\n    tokens,\n    breakpoints,\n    name,\n    cssText,\n    // keep overrides separate from base theme\n    // this allows web platforms to use plain CSS scoped to a\n    // selector and only override the CSS vars needed. This\n    // means we could generate CSS at build-time in a postcss\n    // plugin, or do it at runtime and inject the CSS into a\n    // style tag.\n    // This also allows RN to dynamically switch themes in a\n    // provider.\n    overrides,\n  };\n}\n","import { tokens } from './tokens';\nimport { breakpoints } from './breakpoints';\nimport { BaseTheme } from './types';\n\nexport const baseTheme: BaseTheme = {\n  tokens,\n  breakpoints,\n  name: 'base-theme',\n};\n","import { borderWidths, BorderWidths, WebBorderWidths } from './borderWidths';\nimport { colors, Colors, WebColors } from './colors';\nimport { fonts, Fonts, WebFonts } from './fonts';\nimport { fontSizes, FontSizes, WebFontSizes } from './fontSizes';\nimport { fontWeights, FontWeights, WebFontWeights } from './fontWeights';\nimport { lineHeights, LineHeights, WebLineHeights } from './lineHeights';\nimport { opacities, Opacities, WebOpacities } from './opacities';\nimport {\n  outlineOffsets,\n  OutlineOffsets,\n  WebOutlineOffsets,\n} from './outlineOffsets';\nimport {\n  outlineWidths,\n  OutlineWidths,\n  WebOutlineWidths,\n} from './outlineWidths';\nimport { radii, Radii, WebRadii } from './radii';\nimport { shadows, Shadows, WebShadows } from './shadows';\nimport { space, Space, WebSpace } from './space';\nimport { time, Time, WebTime } from './time';\nimport { transforms, Transforms, WebTransforms } from './transforms';\n\nexport interface Tokens {\n  components: any; // TODO type this\n  borderWidths: BorderWidths;\n  colors: Colors;\n  fonts: Fonts;\n  fontSizes: FontSizes;\n  fontWeights: FontWeights;\n  lineHeights: LineHeights;\n  opacities: Opacities;\n  outlineOffsets: OutlineOffsets;\n  outlineWidths: OutlineWidths;\n  radii: Radii;\n  shadows: Shadows;\n  space: Space;\n  time: Time;\n  transforms: Transforms;\n}\n\n/**\n * The fully setup theme tokens. It has the same shape as Tokens\n * but each token has added fields.\n */\nexport interface WebTokens extends Tokens {\n  borderWidths: WebBorderWidths;\n  colors: WebColors;\n  fonts: WebFonts;\n  fontSizes: WebFontSizes;\n  fontWeights: WebFontWeights;\n  lineHeights: WebLineHeights;\n  opacities: WebOpacities;\n  outlineOffsets: WebOutlineOffsets;\n  outlineWidths: WebOutlineWidths;\n  radii: WebRadii;\n  shadows: WebShadows;\n  space: WebSpace;\n  time: WebTime;\n  transform: WebTransforms;\n}\n\nexport const tokens: Tokens = {\n  // TODO: convert component theme files to typescript\n  components: require('./components'),\n  borderWidths,\n  colors,\n  fonts,\n  fontSizes,\n  fontWeights,\n  lineHeights,\n  opacities,\n  outlineOffsets,\n  outlineWidths,\n  radii,\n  shadows,\n  space,\n  time,\n  transforms,\n};\n","import {\n  DesignToken,\n  WebDesignToken,\n  BorderWidthValue,\n} from './types/designToken';\n\nexport type BorderWidths = {\n  /**\n   * Small border, used for inputs and such\n   */\n  small: DesignToken<BorderWidthValue>;\n  /**\n   * Medium border, used for\n   */\n  medium: DesignToken<BorderWidthValue>;\n  /**\n   * Large border\n   */\n  large: DesignToken<BorderWidthValue>;\n};\n\nexport type WebBorderWidths = {\n  [Property in keyof BorderWidths]: WebDesignToken<BorderWidthValue>;\n};\n\nexport const borderWidths: BorderWidths = {\n  small: { value: '1px' },\n  medium: { value: '2px' },\n  large: { value: '3px' },\n};\n","import { DesignToken, WebDesignToken, ColorValue } from './types/designToken';\nimport { OrdinalScale, OrdinalVariation } from './types/scales';\n\ntype ScaleKeys = 10 | 20 | 40 | 60 | 80 | 90 | 100;\n\ntype ColorScale<DesignTokenType = DesignToken<ColorValue>> = {\n  [key in ScaleKeys]: DesignTokenType;\n};\n\ntype FontColors<DesignTokenType = DesignToken<ColorValue>> = {\n  inverse: DesignTokenType;\n  interactive: DesignTokenType;\n  hover: DesignTokenType;\n  focus: DesignTokenType;\n  active: DesignTokenType;\n  disabled: DesignTokenType;\n} & OrdinalScale<DesignTokenType> &\n  OrdinalVariation<DesignTokenType>;\n\ntype BackgroundColors<DesignTokenType = DesignToken<ColorValue>> = {\n  disabled: DesignTokenType;\n} & OrdinalScale<DesignTokenType> &\n  OrdinalVariation<DesignTokenType>;\n\ntype BorderColors<DesignTokenType = DesignToken<ColorValue>> = {\n  disabled: DesignTokenType;\n  focus: DesignTokenType;\n  error: DesignTokenType;\n} & OrdinalScale<DesignTokenType>;\n\ntype ColorTypes<DesignTokenType = DesignToken<ColorValue>> =\n  | { [key in ScaleKeys]: DesignTokenType }\n  | FontColors\n  | BackgroundColors\n  | DesignTokenType\n  | BorderColors;\n\ntype WebColorTypes = ColorTypes<WebDesignToken<ColorValue>>;\n\nexport type Colors = {\n  // base color palette\n  red: ColorScale;\n  orange: ColorScale;\n  yellow: ColorScale;\n  green: ColorScale;\n  teal: ColorScale;\n  blue: ColorScale;\n  purple: ColorScale;\n  pink: ColorScale;\n  neutral: ColorScale;\n  white: DesignToken<ColorValue>;\n  black: DesignToken<ColorValue>;\n\n  // Semantic colors\n  font: FontColors;\n  background: BackgroundColors;\n  border: BorderColors;\n  brand: {\n    primary: ColorScale;\n    secondary: ColorScale;\n  };\n\n  [key: string]: ColorTypes | Record<string, ColorTypes>;\n};\n\nexport type WebColors = {\n  red: ColorScale<WebDesignToken<ColorValue>>;\n  orange: ColorScale<WebDesignToken<ColorValue>>;\n  yellow: ColorScale<WebDesignToken<ColorValue>>;\n  green: ColorScale<WebDesignToken<ColorValue>>;\n  teal: ColorScale<WebDesignToken<ColorValue>>;\n  blue: ColorScale<WebDesignToken<ColorValue>>;\n  purple: ColorScale<WebDesignToken<ColorValue>>;\n  pink: ColorScale<WebDesignToken<ColorValue>>;\n  neutral: ColorScale<WebDesignToken<ColorValue>>;\n  white: WebDesignToken<ColorValue>;\n  black: WebDesignToken<ColorValue>;\n\n  font: FontColors<WebDesignToken<ColorValue>>;\n  background: BackgroundColors<WebDesignToken<ColorValue>>;\n  border: BorderColors<WebDesignToken<ColorValue>>;\n  brand: {\n    primary: ColorScale<WebDesignToken<ColorValue>>;\n    secondary: ColorScale<WebDesignToken<ColorValue>>;\n  };\n\n  [key: string]: WebColorTypes | Record<string, WebColorTypes>;\n};\n\nexport const colors: Colors = {\n  red: {\n    10: { value: 'hsl(0, 75%, 95%)' },\n    20: { value: 'hsl(0, 75%, 85%)' },\n    40: { value: 'hsl(0, 75%, 75%)' },\n    60: { value: 'hsl(0, 50%, 50%)' },\n    80: { value: 'hsl(0, 95%, 30%)' },\n    90: { value: 'hsl(0, 100%, 20%)' },\n    100: { value: 'hsl(0, 100%, 15%)' },\n  },\n\n  orange: {\n    10: { value: 'hsl(30, 75%, 95%)' },\n    20: { value: 'hsl(30, 75%, 85%)' },\n    40: { value: 'hsl(30, 75%, 75%)' },\n    60: { value: 'hsl(30, 50%, 50%)' },\n    80: { value: 'hsl(30, 95%, 30%)' },\n    90: { value: 'hsl(30, 100%, 20%)' },\n    100: { value: 'hsl(30, 100%, 15%)' },\n  },\n\n  yellow: {\n    10: { value: 'hsl(60, 75%, 95%)' },\n    20: { value: 'hsl(60, 75%, 85%)' },\n    40: { value: 'hsl(60, 75%, 75%)' },\n    60: { value: 'hsl(60, 50%, 50%)' },\n    80: { value: 'hsl(60, 95%, 30%)' },\n    90: { value: 'hsl(60, 100%, 20%)' },\n    100: { value: 'hsl(60, 100%, 15%)' },\n  },\n\n  green: {\n    10: { value: 'hsl(130, 60%, 95%)' },\n    20: { value: 'hsl(130, 60%, 90%)' },\n    40: { value: 'hsl(130, 44%, 63%)' },\n    60: { value: 'hsl(130, 43%, 46%)' },\n    80: { value: 'hsl(130, 33%, 37%)' },\n    90: { value: 'hsl(130, 27%, 29%)' },\n    100: { value: 'hsl(130, 22%, 23%)' },\n  },\n\n  teal: {\n    10: { value: 'hsl(190, 75%, 95%)' },\n    20: { value: 'hsl(190, 75%, 85%)' },\n    40: { value: 'hsl(190, 70%, 70%)' },\n    60: { value: 'hsl(190, 50%, 50%)' },\n    80: { value: 'hsl(190, 95%, 30%)' },\n    90: { value: 'hsl(190, 100%, 20%)' },\n    100: { value: 'hsl(190, 100%, 15%)' },\n  },\n\n  blue: {\n    10: { value: 'hsl(220, 95%, 95%)' },\n    20: { value: 'hsl(220, 85%, 85%)' },\n    40: { value: 'hsl(220, 70%, 70%)' },\n    60: { value: 'hsl(220, 50%, 50%)' },\n    80: { value: 'hsl(220, 95%, 30%)' },\n    90: { value: 'hsl(220, 100%, 20%)' },\n    100: { value: 'hsl(220, 100%, 15%)' },\n  },\n\n  purple: {\n    10: { value: 'hsl(300, 95%, 95%)' },\n    20: { value: 'hsl(300, 85%, 85%)' },\n    40: { value: 'hsl(300, 70%, 70%)' },\n    60: { value: 'hsl(300, 50%, 50%)' },\n    80: { value: 'hsl(300, 95%, 30%)' },\n    90: { value: 'hsl(300, 100%, 20%)' },\n    100: { value: 'hsl(300, 100%, 15%)' },\n  },\n\n  pink: {\n    10: { value: 'hsl(340, 95%, 95%)' },\n    20: { value: 'hsl(340, 90%, 85%)' },\n    40: { value: 'hsl(340, 70%, 70%)' },\n    60: { value: 'hsl(340, 50%, 50%)' },\n    80: { value: 'hsl(340, 95%, 30%)' },\n    90: { value: 'hsl(340, 100%, 20%)' },\n    100: { value: 'hsl(340, 100%, 15%)' },\n  },\n\n  neutral: {\n    10: { value: 'hsl(210, 5%, 98%)' },\n    20: { value: 'hsl(210, 5%, 94%)' },\n    40: { value: 'hsl(210, 5%, 87%)' },\n    60: { value: 'hsl(210, 6%, 70%)' },\n    80: { value: 'hsl(210, 10%, 40%)' },\n    90: { value: 'hsl(210, 25%, 25%)' },\n    100: { value: 'hsl(210, 50%, 10%)' },\n  },\n\n  brand: {\n    primary: {\n      10: { value: '{colors.teal.10.value}' },\n      20: { value: '{colors.teal.20.value}' },\n      40: { value: '{colors.teal.40.value}' },\n      60: { value: '{colors.teal.60.value}' },\n      80: { value: '{colors.teal.80.value}' },\n      90: { value: '{colors.teal.90.value}' },\n      100: { value: '{colors.teal.100.value}' },\n    },\n    secondary: {\n      10: { value: '{colors.purple.10.value}' },\n      20: { value: '{colors.purple.20.value}' },\n      40: { value: '{colors.purple.40.value}' },\n      60: { value: '{colors.purple.60.value}' },\n      80: { value: '{colors.purple.80.value}' },\n      90: { value: '{colors.purple.90.value}' },\n      100: { value: '{colors.purple.100.value}' },\n    },\n  },\n\n  font: {\n    primary: { value: '{colors.neutral.100.value}' },\n    secondary: { value: '{colors.neutral.90.value}' },\n    tertiary: { value: '{colors.neutral.80.value}' },\n    disabled: { value: '{colors.font.tertiary.value}' },\n    inverse: { value: '{colors.white.value}' },\n\n    interactive: { value: '{colors.brand.primary.80.value}' },\n    // Hover and Focus colors are intentionally different colors.\n    // This allows users to distinguish between the current keyboard focus\n    // and the location of their pointer\n    hover: { value: '{colors.brand.primary.90.value}' },\n    // Focus color is set to 100 to ensure enough contrast for accessibility\n    focus: { value: '{colors.brand.primary.100.value}' },\n    active: { value: '{colors.brand.primary.100.value}' },\n\n    info: { value: '{colors.blue.90.value}' },\n    warning: { value: '{colors.orange.90.value}' },\n    error: { value: '{colors.red.90.value}' },\n    success: { value: '{colors.green.90.value}' },\n  },\n\n  background: {\n    primary: { value: '{colors.white.value}' },\n    secondary: { value: '{colors.neutral.10.value}' },\n    tertiary: { value: '{colors.neutral.20.value}' },\n    disabled: { value: '{colors.background.tertiary.value}' },\n\n    info: { value: '{colors.blue.20.value}' },\n    warning: { value: '{colors.orange.20.value}' },\n    error: { value: '{colors.red.20.value}' },\n    success: { value: '{colors.green.20.value}' },\n  },\n\n  border: {\n    primary: { value: '{colors.neutral.60.value}' },\n    secondary: { value: '{colors.neutral.40.value}' },\n    tertiary: { value: '{colors.neutral.20.value}' },\n\n    disabled: { value: '{colors.border.tertiary.value}' },\n    // Focus color is set to 100 to ensure enough contrast for accessibility\n    focus: { value: '{colors.brand.primary.100.value}' },\n    error: { value: '{colors.red.80.value}' },\n  },\n\n  shadow: {\n    primary: { value: 'hsla(210, 50%, 10%, 0.25)' },\n    secondary: { value: 'hsla(210, 50%, 10%, 0.15)' },\n    tertiary: { value: 'hsla(210, 50%, 10%, 0.05)' },\n  },\n\n  overlay: {\n    10: { value: 'hsla(0, 0%, 0%, 0.1)' },\n    20: { value: 'hsla(0, 0%, 0%, 0.2)' },\n    30: { value: 'hsla(0, 0%, 0%, 0.3)' },\n    40: { value: 'hsla(0, 0%, 0%, 0.4)' },\n    50: { value: 'hsla(0, 0%, 0%, 0.5)' },\n    60: { value: 'hsla(0, 0%, 0%, 0.6)' },\n    70: { value: 'hsla(0, 0%, 0%, 0.7)' },\n    80: { value: 'hsla(0, 0%, 0%, 0.8)' },\n    90: { value: 'hsla(0, 0%, 0%, 0.9)' },\n  },\n\n  black: {\n    value: 'hsl(0, 0%, 0%)',\n  },\n  white: { value: 'hsl(0, 0%, 100%)' },\n  transparent: { value: 'transparent' },\n};\n","import { DesignToken, WebDesignToken, FontValue } from './types/designToken';\n\nexport type Fonts = {\n  default: {\n    variable: DesignToken<FontValue>;\n    static: DesignToken<FontValue>;\n  };\n};\n\nexport interface WebFonts {\n  default: {\n    [Property in keyof Fonts['default']]: WebDesignToken<FontValue>;\n  };\n}\n\n// TODO: update the design tokens to use an array\n// export interface FontDesignToken {\n//   value: Array<string>\n// }\n\nexport const fonts: Fonts = {\n  default: {\n    variable: {\n      value: `'InterVariable', 'Inter var', 'Inter', -apple-system, BlinkMacSystemFont,\n        'Helvetica Neue', 'Segoe UI', Oxygen, Ubuntu, Cantarell, 'Open Sans',\n        sans-serif`,\n    },\n    static: {\n      value: `'Inter', -apple-system, BlinkMacSystemFont, 'Helvetica Neue',\n        'Segoe UI', Oxygen, Ubuntu, Cantarell, 'Open Sans', sans-serif`,\n    },\n  },\n};\n","import {\n  DesignToken,\n  WebDesignToken,\n  FontSizeValue,\n} from './types/designToken';\n\nexport type FontSizes = {\n  xxxs: DesignToken<FontSizeValue>;\n  xxs: DesignToken<FontSizeValue>;\n  xs: DesignToken<FontSizeValue>;\n  small: DesignToken<FontSizeValue>;\n  medium: DesignToken<FontSizeValue>;\n  large: DesignToken<FontSizeValue>;\n  xl: DesignToken<FontSizeValue>;\n  xxl: DesignToken<FontSizeValue>;\n  xxxl: DesignToken<FontSizeValue>;\n  xxxxl: DesignToken<FontSizeValue>;\n};\n\nexport type WebFontSizes = {\n  [Property in keyof FontSizes]: WebDesignToken<FontSizeValue>;\n};\n\nexport const fontSizes: FontSizes = {\n  xxxs: { value: '0.375rem' },\n  xxs: { value: '0.5rem' },\n  xs: { value: '0.75rem' },\n  small: { value: '0.875rem' },\n  medium: { value: '1rem' },\n  large: { value: '1.25rem' },\n  xl: { value: '1.5rem' },\n  xxl: { value: '2rem' },\n  xxxl: { value: '3rem' },\n  xxxxl: { value: '5rem' },\n};\n","import {\n  DesignToken,\n  WebDesignToken,\n  FontWeightValue,\n} from './types/designToken';\n\nexport type FontWeights = {\n  hairline: DesignToken<FontWeightValue>;\n  thin: DesignToken<FontWeightValue>;\n  light: DesignToken<FontWeightValue>;\n  normal: DesignToken<FontWeightValue>;\n  medium: DesignToken<FontWeightValue>;\n  semibold: DesignToken<FontWeightValue>;\n  bold: DesignToken<FontWeightValue>;\n  extrabold: DesignToken<FontWeightValue>;\n  black: DesignToken<FontWeightValue>;\n};\n\nexport type WebFontWeights = {\n  [Property in keyof FontWeights]: WebDesignToken<FontWeightValue>;\n};\n\nexport const fontWeights: FontWeights = {\n  hairline: { value: 100 },\n  thin: { value: 200 },\n  light: { value: 300 },\n  normal: { value: 400 },\n  medium: { value: 500 },\n  semibold: { value: 600 },\n  bold: { value: 700 },\n  extrabold: { value: 800 },\n  black: { value: 900 },\n};\n","import {\n  DesignToken,\n  WebDesignToken,\n  LineHeightValue,\n} from './types/designToken';\n\nexport type LineHeights = {\n  small: DesignToken<LineHeightValue>;\n  medium: DesignToken<LineHeightValue>;\n  large: DesignToken<LineHeightValue>;\n};\n\nexport type WebLineHeights = {\n  [Property in keyof LineHeights]: WebDesignToken<LineHeightValue>;\n};\n\nexport const lineHeights: LineHeights = {\n  small: { value: '1.5' },\n  medium: { value: '1.75' },\n  large: { value: '2' },\n};\n","import { DesignToken, WebDesignToken, OpacityValue } from './types/designToken';\n\nexport type Opacities = {\n  // TODO: Update these so the values aren't directly tied to the names\n  0: DesignToken<OpacityValue>;\n  10: DesignToken<OpacityValue>;\n  20: DesignToken<OpacityValue>;\n  30: DesignToken<OpacityValue>;\n  40: DesignToken<OpacityValue>;\n  50: DesignToken<OpacityValue>;\n  60: DesignToken<OpacityValue>;\n  70: DesignToken<OpacityValue>;\n  80: DesignToken<OpacityValue>;\n  90: DesignToken<OpacityValue>;\n  100: DesignToken<OpacityValue>;\n};\n\nexport type WebOpacities = {\n  [Property in keyof Opacities]: WebDesignToken<OpacityValue>;\n};\n\nexport const opacities: Opacities = {\n  0: {\n    value: '0',\n  },\n  10: {\n    value: '0.1',\n  },\n  20: {\n    value: '0.2',\n  },\n  30: {\n    value: '0.3',\n  },\n  40: {\n    value: '0.4',\n  },\n  50: {\n    value: '0.5',\n  },\n  60: {\n    value: '0.6',\n  },\n  70: {\n    value: '0.7',\n  },\n  80: {\n    value: '0.8',\n  },\n  90: {\n    value: '0.9',\n  },\n  100: {\n    value: '1',\n  },\n};\n","import {\n  DesignToken,\n  WebDesignToken,\n  OutlineOffsetValue,\n} from './types/designToken';\n\nexport type OutlineOffsets = {\n  small: DesignToken<OutlineOffsetValue>;\n  medium: DesignToken<OutlineOffsetValue>;\n  large: DesignToken<OutlineOffsetValue>;\n};\n\nexport type WebOutlineOffsets = {\n  [Property in keyof OutlineOffsets]: WebDesignToken<OutlineOffsetValue>;\n};\n\nexport const outlineOffsets: OutlineOffsets = {\n  small: { value: '1px' },\n  medium: { value: '2px' },\n  large: { value: '3px' },\n};\n","import {\n  DesignToken,\n  WebDesignToken,\n  OutlineWidthValue,\n} from './types/designToken';\n\nexport type OutlineWidths = {\n  small: DesignToken<OutlineWidthValue>;\n  medium: DesignToken<OutlineWidthValue>;\n  large: DesignToken<OutlineWidthValue>;\n};\n\nexport type WebOutlineWidths = {\n  [Property in keyof OutlineWidths]: WebDesignToken<OutlineWidthValue>;\n};\n\nexport const outlineWidths: OutlineWidths = {\n  small: { value: '1px' },\n  medium: { value: '2px' },\n  large: { value: '3px' },\n};\n","import { DesignToken, WebDesignToken, RadiusValue } from './types/designToken';\n\nexport type Radii = {\n  xs: DesignToken<RadiusValue>;\n  small: DesignToken<RadiusValue>;\n  medium: DesignToken<RadiusValue>;\n  large: DesignToken<RadiusValue>;\n  xl: DesignToken<RadiusValue>;\n  xxl: DesignToken<RadiusValue>;\n  xxxl: DesignToken<RadiusValue>;\n};\n\nexport type WebRadii = {\n  [Property in keyof Radii]: WebDesignToken<RadiusValue>;\n};\n\nexport const radii: Radii = {\n  xs: { value: '0.125rem' },\n  small: { value: '0.25rem' },\n  medium: { value: '0.5rem' },\n  large: { value: '1rem' },\n  xl: { value: '2rem' },\n  xxl: { value: '4rem' },\n  xxxl: { value: '8rem' },\n};\n","import { DesignToken, WebDesignToken, ShadowValue } from './types/designToken';\n\nexport type Shadows = {\n  small: DesignToken<ShadowValue>;\n  medium: DesignToken<ShadowValue>;\n  large: DesignToken<ShadowValue>;\n};\n\nexport type WebShadows = {\n  [Property in keyof Shadows]: WebDesignToken<ShadowValue>;\n};\n\nexport const shadows: Shadows = {\n  small: {\n    value: {\n      offsetX: '0px',\n      offsetY: '2px',\n      blurRadius: '4px',\n      color: '{colors.shadow.tertiary.value}',\n    },\n  },\n  medium: {\n    value: {\n      offsetX: '0px',\n      offsetY: '2px',\n      blurRadius: '6px',\n      color: '{colors.shadow.secondary.value}',\n    },\n  },\n  large: {\n    value: {\n      offsetX: '0px',\n      offsetY: '4px',\n      blurRadius: '12px',\n      color: '{colors.shadow.primary.value}',\n    },\n  },\n};\n","import { DesignToken, WebDesignToken, SpaceValue } from './types/designToken';\n\nexport type Space = {\n  xxxs: DesignToken<SpaceValue>;\n  xxs: DesignToken<SpaceValue>;\n  xs: DesignToken<SpaceValue>;\n  small: DesignToken<SpaceValue>;\n  medium: DesignToken<SpaceValue>;\n  large: DesignToken<SpaceValue>;\n  xl: DesignToken<SpaceValue>;\n  xxl: DesignToken<SpaceValue>;\n  xxxl: DesignToken<SpaceValue>;\n  relative: {\n    xxxs: DesignToken<SpaceValue>;\n    xxs: DesignToken<SpaceValue>;\n    xs: DesignToken<SpaceValue>;\n    small: DesignToken<SpaceValue>;\n    medium: DesignToken<SpaceValue>;\n    large: DesignToken<SpaceValue>;\n    xl: DesignToken<SpaceValue>;\n    xxl: DesignToken<SpaceValue>;\n    xxxl: DesignToken<SpaceValue>;\n  };\n};\n\nexport type WebSpace = {\n  [Property in keyof Omit<Space, 'relative'>]: WebDesignToken<SpaceValue>;\n} & {\n  relative: {\n    [Property in keyof Space['relative']]: WebDesignToken<SpaceValue>;\n  };\n};\n\nexport const space: Space = {\n  xxxs: { value: '0.25rem' },\n  xxs: { value: '0.375rem' },\n  xs: { value: '0.5rem' },\n  small: { value: '0.75rem' },\n  medium: { value: '1rem' },\n  large: { value: '1.5rem' },\n  xl: { value: '2.0rem' },\n  xxl: { value: '3.0rem' },\n  xxxl: { value: '4.5rem' },\n  relative: {\n    //creating a second set of sizes using em which will be sized relative to a parent instead of the root\n    xxxs: { value: '0.25em' },\n    xxs: { value: '0.375rem' },\n    xs: { value: '0.5em' },\n    small: { value: '0.75em' },\n    medium: { value: '1em' },\n    large: { value: '1.5em' },\n    xl: { value: '2.0em' },\n    xxl: { value: '3.0em' },\n    xxxl: { value: '4.5em' },\n  },\n};\n","import { DesignToken, WebDesignToken, TimeValue } from './types/designToken';\n\nexport type Time = {\n  short: DesignToken<TimeValue>;\n  medium: DesignToken<TimeValue>;\n  long: DesignToken<TimeValue>;\n};\n\nexport type WebTime = {\n  [Property in keyof Time]: WebDesignToken<TimeValue>;\n};\n\nexport const time: Time = {\n  short: { value: '100ms' },\n  medium: { value: '250ms' },\n  long: { value: '500ms' },\n};\n","import {\n  DesignToken,\n  WebDesignToken,\n  TransformValue,\n} from './types/designToken';\n\nexport type Transforms = {\n  slideX: {\n    small: DesignToken<TransformValue>;\n    medium: DesignToken<TransformValue>;\n    large: DesignToken<TransformValue>;\n  };\n};\n\nexport type WebTransforms = {\n  slideX: {\n    [Property in keyof Transforms['slideX']]: WebDesignToken<TransformValue>;\n  };\n};\n\nexport const transforms: Transforms = {\n  // TODO: make this more generic and cross-platform\n  slideX: {\n    small: { value: 'translateX(0.5em)' },\n    medium: { value: 'translateX(1em)' },\n    large: { value: 'translateX(2em)' },\n  },\n};\n","export interface Breakpoints {\n  values: {\n    base: number;\n    small: number;\n    medium: number;\n    large: number;\n    xl: number;\n    xxl: number;\n  };\n  defaultBreakpoint: string;\n}\n\n// Breakpoint unit is in pixels\nexport const breakpoints: Breakpoints = {\n  values: {\n    base: 0,\n    small: 480, // breakpoint unit is px\n    medium: 768,\n    large: 992,\n    xl: 1280,\n    xxl: 1536,\n  },\n  defaultBreakpoint: 'base',\n};\n","import kebabCase from 'lodash/kebabCase';\n// internal style dictionary function\nimport usesReference from 'style-dictionary/lib/utils/references/usesReference';\n\nimport { DesignToken } from './tokens/types/designToken';\n\nexport const CSS_VARIABLE_PREFIX = 'amplify';\n\nfunction referenceValue(value: string) {\n  if (usesReference(value)) {\n    const path = value.replace(/\\{|\\}/g, '').replace('.value', '').split('.');\n    return `var(--${cssNameTransform({ path })})`;\n  }\n  return value;\n}\n\nexport function cssValue(token: DesignToken) {\n  const { value } = token;\n  if (typeof value === 'string') {\n    return referenceValue(value);\n  }\n  if (typeof value === 'object') {\n    if ('offsetX' in value) {\n      const {\n        offsetX = '',\n        offsetY = '',\n        blurRadius = '',\n        spreadRadius = '',\n        color = '',\n      } = value;\n      return [\n        referenceValue(offsetX),\n        referenceValue(offsetY),\n        referenceValue(blurRadius),\n        referenceValue(spreadRadius),\n        referenceValue(color),\n      ].join(' ');\n    }\n  }\n\n  return value;\n}\n\ninterface NameTransformProps {\n  path?: Array<string>;\n}\n\nexport function cssNameTransform({ path = [] }: NameTransformProps): string {\n  return `${kebabCase([CSS_VARIABLE_PREFIX, ...path].join(' '))}`;\n}\n","import { PartialDeep } from 'type-fest';\nimport { Tokens, WebTokens } from './tokens';\nimport { Breakpoints } from './breakpoints';\n\nexport * from './tokens/types/designToken';\n\n/**\n * An override is a set of tokens that override others\n * in certain contexts. On Android, these are like resource\n * qualifiers. On the web, these are like media queries with\n * a set of CSS variables in it. A theme should contain\n * everything it needs to render\n */\nexport type Override =\n  | SelectorOverride\n  | MediaQueryOverride\n  | BreakpointOverride\n  | ColorModeOverride;\n\ninterface BaseOverride {\n  tokens?: PartialDeep<Tokens>;\n}\n\n/**\n * This override takes a breakpoint name and creates a media-query for that\n * breakpoint\n * ```css\n * @media (min-width: 20em) {\n *    [data-amplify-theme] {\n *      --amplify-font-size-large: 2rem;\n *    }\n * }\n * ```\n */\ninterface BreakpointOverride extends BaseOverride {\n  breakpoint: keyof Breakpoints['values'];\n}\n\n/**\n * ```css\n * @media (prefers-color-scheme: dark) {\n *    --amplify-colors-background-primary: black;\n *    --amplify-colors-font-primary: white;\n * }\n * ```\n */\nexport interface MediaQueryOverride extends BaseOverride {\n  mediaQuery: string;\n}\n\n/**\n * ```css\n * .disco-theme {\n *    --amplify-colors-background-primary: pink;\n * }\n * [data-my-cool-theme] {\n *    --amplify-colors-font-primary: purple;\n * }\n * ```\n */\nexport interface SelectorOverride extends BaseOverride {\n  selector: string;\n}\n\ntype ColorMode = 'light' | 'dark';\n\n/**\n * This creates a color mode override, where the color mode is 'light' or 'dark'.\n * Note: there is no 'system' here.\n *\n * ```css\n * @media(prefers-color-scheme: dark) {\n *    [data-amplify-color-mode=\"system\"] {\n *    }\n * }\n *\n * [data-amplify-color-mode=\"dark\"] {\n *\n * }\n * ```\n */\nexport interface ColorModeOverride extends BaseOverride {\n  colorMode: ColorMode;\n}\n\n/**\n * A Theme just needs a name. This is what a user would generally deal with.\n * They can define any tokens or breakpoints they need, but they don't need a\n * complete theme with all tokens.\n */\nexport interface Theme {\n  /**\n   * The name of the theme. This is used to create scoped CSS to allow for\n   * multiple themes on a page.\n   */\n  name: string;\n  tokens?: PartialDeep<Tokens>;\n  breakpoints?: PartialDeep<Breakpoints>;\n  /**\n   * Overrides allow you to change design tokens in different contexts, like\n   * light and dark mode. You can also have other media query overrides as well\n   * as breakpoint overrides which correspond to the Breakpoints on a theme,\n   * and a generic selector override.\n   */\n  overrides?: Array<Override>;\n}\n\n/**\n * A BaseTheme has all tokens and breakpoints required\n */\nexport interface BaseTheme extends Theme {\n  tokens: Tokens;\n  breakpoints: Breakpoints;\n  overrides?: Array<Override>;\n}\n\n/**\n * WebTheme is a fully built theme that has cssText based\n * on the design tokens and all design tokens have added fields\n * to be used in Javascript/Typescript.\n */\nexport interface WebTheme extends BaseTheme {\n  tokens: WebTokens;\n  cssText: string;\n}\n","/**\n * Helper function to test if something is a design token or not.\n * Used in the React component style props.\n *\n * @param arg - thing to test if it is a design token or not\n * @returns boolean\n */\nexport function isDesignToken(arg: unknown): arg is WebDesignToken {\n  if (typeof arg === 'object') {\n    return arg.hasOwnProperty('value');\n  } else {\n    return false;\n  }\n}\n\n/**\n *\n */\nexport type DesignToken<ValueType = any> = {\n  value: ValueType;\n};\n\n/**\n * A fully setup design token ready to be used in web platform.\n */\nexport type WebDesignToken<ValueType = any> = {\n  /**\n   * Name of the design token\n   */\n  name: string;\n  /**\n   * Object path of the design token. Used for constructing the name\n   */\n  path: Array<string>;\n  /**\n   * Original (unresolved, untransformed) value of the design token\n   */\n  original: ValueType;\n  /**\n   * The wrapped CSS variable name of this design token, for example\n   * `var(--amplify-colors-font-primary)`\n   */\n  toString(): string;\n} & DesignToken<ValueType>;\n\nexport type ColorValue = string;\nexport type BorderWidthValue = string;\nexport type FontValue = string;\nexport type FontSizeValue = string;\nexport type FontWeightValue = number;\nexport type LineHeightValue = string;\nexport type OpacityValue = string;\nexport type OutlineOffsetValue = string;\nexport type OutlineWidthValue = string;\nexport type RadiusValue = string;\nexport type ShadowValue = {\n  offsetX: string;\n  offsetY: string;\n  blurRadius: string;\n  spreadRadius?: string;\n  color: string;\n};\nexport type SpaceValue = string;\nexport type TimeValue = string;\nexport type TransformValue = string;\n"]},"metadata":{},"sourceType":"module"}