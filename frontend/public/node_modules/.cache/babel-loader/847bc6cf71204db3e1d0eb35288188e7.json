{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Naila\\\\Desktop\\\\projekatSi\\\\frontend\\\\src\\\\Components\\\\NewsContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport News from './News';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@mui/material/TextField';\nimport { MeteorRainLoading } from 'react-loadingg';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: 40\n  },\n  item: {\n    marginBottom: 30\n  }\n}));\n\nconst NewsContainer = () => {\n  _s();\n\n  const classes = useStyles();\n  const [category, setCategory] = useState('general');\n  const [news, setNews] = useState([]);\n  const [query, setQuery] = useState('');\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState({});\n  const top100Films = [\"general\", \"business\", \"programming\", \"entertainment\", \"health\", \"science\", \"sports\", \"technology\", \"gadgets\", \"game\", \"security\"];\n  useEffect(() => {\n    if (category === '') return;\n    setLoading({\n      status: true,\n      maxPercent: 80\n    });\n\n    const getData = async () => {\n      const url = `https://api.currentsapi.services/v1/latest-news?apiKey=Iv0ingCnOq7YDglaNcaU8Lnz8iHVNygfdHIyH_aVypU0J_WT&category=${category}`;\n      const response = await fetch(url);\n      const data = await response.json();\n      setLoading({\n        status: true,\n        maxPercent: 100\n      });\n\n      if (data.news.lenght == 0) {\n        setError(true);\n      } // if (data.news.length) {\n      //     setError(false);\n      // } else {\n      //     setError(true);\n      //     setLoading({\n      //         status: false,\n      //         maxPercent: 0,\n      //     });\n      // }\n\n\n      if (data) {\n        setLoading({\n          status: false,\n          maxPercent: 0\n        });\n        setError(false);\n      }\n\n      setNews(data.news);\n    };\n\n    setNews([]);\n    getData();\n  }, [category]);\n\n  const handleChange = event => {\n    setCategory(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      className: classes.root,\n      container: true,\n      justify: 'space-evenly',\n      children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n        disablePortal: true,\n        id: \"combo-box-demo\",\n        options: top100Films,\n        sx: {\n          width: 300\n        },\n        renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n          id: \"outlined-name\",\n          label: \"Enter category\",\n          value: category,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 32\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      className: classes.root,\n      container: true,\n      justify: 'space-evenly',\n      children: news.map(newsData => newsData.image !== 'None' ? /*#__PURE__*/_jsxDEV(Grid, {\n        className: classes.item,\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(News, {\n          newsData: newsData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 29\n        }, this)\n      }, newsData.url, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 25\n      }, this) : null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      cointainer: true,\n      children: loading.status && /*#__PURE__*/_jsxDEV(MeteorRainLoading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 50\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(NewsContainer, \"y1j4+C+G9jKX5HG3QiIieGOoY7w=\", false, function () {\n  return [useStyles];\n});\n\n_c = NewsContainer;\nexport default NewsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewsContainer\");","map":{"version":3,"sources":["C:/Users/Naila/Desktop/projekatSi/frontend/src/Components/NewsContainer.jsx"],"names":["React","useState","useEffect","News","Grid","makeStyles","TextField","MeteorRainLoading","Autocomplete","useStyles","theme","root","marginTop","item","marginBottom","NewsContainer","classes","category","setCategory","news","setNews","query","setQuery","error","setError","loading","setLoading","top100Films","status","maxPercent","getData","url","response","fetch","data","json","lenght","handleChange","event","target","value","width","params","map","newsData","image"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport News from './News';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@mui/material/TextField';\r\nimport { MeteorRainLoading } from 'react-loadingg';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        marginTop: 40,\r\n    },\r\n    item: {\r\n        marginBottom: 30,\r\n    }\r\n}));\r\nconst NewsContainer = () => {\r\n    const classes = useStyles();\r\n    const [category, setCategory] = useState('general');\r\n    const [news, setNews] = useState([]);\r\n    const [query, setQuery] = useState('');\r\n    const [error, setError] = useState(false);\r\n    const [loading, setLoading] = useState({});\r\n    const top100Films = [\r\n        \"general\",\r\n        \"business\",\r\n        \"programming\",\r\n        \"entertainment\",\r\n        \"health\",\r\n        \"science\",\r\n        \"sports\",\r\n        \"technology\",\r\n        \"gadgets\",\r\n        \"game\",\r\n        \"security\"\r\n      ];\r\n    useEffect(() => {\r\n        if (category === '') return;\r\n        setLoading({\r\n            status: true,\r\n            maxPercent: 80,\r\n        });\r\n        const getData = async () => {\r\n            const url = `https://api.currentsapi.services/v1/latest-news?apiKey=Iv0ingCnOq7YDglaNcaU8Lnz8iHVNygfdHIyH_aVypU0J_WT&category=${category}`;\r\n  \r\n            const response = await fetch(url);\r\n            const data = await response.json();\r\n            setLoading({\r\n                status: true,\r\n                maxPercent: 100,\r\n            });\r\n\r\n            if(data.news.lenght == 0)\r\n            {\r\n                setError(true);\r\n            }\r\n            // if (data.news.length) {\r\n            //     setError(false);\r\n            // } else {\r\n            //     setError(true);\r\n            //     setLoading({\r\n            //         status: false,\r\n            //         maxPercent: 0,\r\n            //     });\r\n            // }\r\n            if(data)\r\n            {\r\n                setLoading({\r\n                    status: false,\r\n                    maxPercent: 0\r\n                })\r\n                setError(false);\r\n            }\r\n  \r\n            setNews(data.news);\r\n        };\r\n        setNews([]);\r\n        getData();\r\n    }, [category]);\r\n\r\n    const handleChange = (event) => {\r\n        setCategory(event.target.value);\r\n      };\r\n    return (\r\n            <>\r\n                <Grid className={classes.root} container justify={'space-evenly'}>\r\n                <Autocomplete\r\n      disablePortal\r\n      id=\"combo-box-demo\"\r\n      options={top100Films}\r\n      sx={{ width: 300 }}\r\n      renderInput={(params) => <TextField\r\n        {...params}\r\n        id=\"outlined-name\"\r\n        label=\"Enter category\"\r\n        value={category}\r\n        onChange={handleChange} />}\r\n    />\r\n                </Grid>\r\n            <Grid className={classes.root} container justify={'space-evenly'}>\r\n                {news.map((newsData) =>\r\n                    newsData.image !== 'None' ? (\r\n                        <Grid className={classes.item} item key={newsData.url}>\r\n                            <News newsData={newsData} />\r\n                        </Grid>\r\n                    ) : null\r\n                )}\r\n            </Grid>\r\n            <Grid cointainer>{loading.status &&  <MeteorRainLoading/>}</Grid>\r\n            </>\r\n    );\r\n};\r\n\r\nexport default NewsContainer;"]},"metadata":{},"sourceType":"module"}