{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Naila\\\\Desktop\\\\projekatSi\\\\frontend\\\\src\\\\Components\\\\Calendar.jsx\",\n    _s = $RefreshSig$();\n\n// import React, { useEffect, useState } from 'react';\n// import Kalend, { CalendarEvent, CalendarView, OnEventDragFinish } from 'calend';\n// import 'calend/dist/styles/index.css';\n// import toast, { Toaster } from 'react-hot-toast';\n// import { OnEventClickData } from 'calend';\n// const CalendComponent = () => {\n// useEffect(() => {\n//   notify();\n// }, []);\n//   const events = {\n//     '01-11-2021': [\n//         {\n//         id: 1,\n//         startAt: '2021-11-21T18:00:00.000Z',\n//         endAt: '2021-11-21T19:00:00.000Z',\n//         summary: 'test',\n//         color: 'blue',\n//         }\n//     ],\n//     '21-11-2021': [\n//         {\n//         id: 2,\n//         startAt: '2021-11-21T18:00:00.000Z',\n//         endAt: '2021-11-21T19:00:00.000Z',\n//         summary: 'test',\n//         color: 'blue',\n//         }\n//     ]\n// }\n// const notify = () => toast(\"Don't you worry, don't you worry, child \\n See heaven's got a plan for you\", {\n//   icon: '🛩️',\n// });\n//   const [demoEvents, setDemoEvents] = useState(events);\n//   const onNewEventClick = (demoEvents) => {\n//     console.log(demoEvents);\n//   };\n//   const onShowMoreMonthClick = (demoEvents) => {\n//     console.log(demoEvents);\n//   };\n//   const onEventClick = (demoEvents) => {\n//     console.log(demoEvents);\n//     //modal for this\n//   };\n//   return (\n// //     <>\n//       <Toaster\n//         position=\"top-center\"\n//         reverseOrder={false}\n//       />\n//       <Kalend\n//         onNewEventClick={onNewEventClick}\n//         initialView={CalendarView.WEEK}\n//         disabledViews={[]}\n//         onEventClick={onEventClick}\n//         events={demoEvents}\n//         initialDate={new Date().toISOString()}\n//         hourHeight={60}\n//         showMoreMonth={onShowMoreMonthClick}\n//         timezone={'Europe/Berlin'}\n//         onEventDragFinish={OnEventDragFinish}\n//       />\n//     </>\n//   );\n// };\n// export default CalendComponent;\n// import { render } from 'react-dom';\n// import './Calendar.css';\n// import * as React from 'react';\n// import { ScheduleComponent, Day, Week, WorkWeek, Month, Agenda, Inject, Resize, DragAndDrop } from '@syncfusion/ej2-react-schedule';\n// import { applyCategoryColor } from './Helper';\n// import { extend } from '@syncfusion/ej2-base';\n// import { ButtonComponent } from '@syncfusion/ej2-react-buttons';\n// import { SampleBase } from './Sample-base';\n// import { PropertyPane } from './Property-pane';\n// import * as dataSource from './datasource.json';\n// /**\n//  * Schedule events sample\n//  */\n// export default class Events extends SampleBase {\n//     constructor() {\n//         super(...arguments);\n//         this.data = extend([], dataSource.scheduleData, null, true);\n//     }\n//     onEventRendered(args) {\n//         applyCategoryColor(args, this.scheduleObj.currentView);\n//     }\n//     onClear() {\n//         document.getElementById('EventLog').innerHTML = '';\n//     }\n//     onCreate() {\n//         this.appendElement('Schedule <b>Load</b> event is triggered<hr>');\n//     }\n//     onActionBegin() {\n//         this.appendElement('Schedule <b>Action Begin</b> event is triggered<hr>');\n//     }\n//     onActionComplete() {\n//         this.appendElement('Schedule <b>Action Complete</b> event is triggered<hr>');\n//     }\n//     onActionFailure() {\n//         this.appendElement('Schedule <b>Action Failure</b> event is triggered<hr>');\n//     }\n//     onCellDoubleClick() {\n//         this.appendElement('SChedule <b>Cell Double Click</b> event is triggered<hr>');\n//     }\n//     onCellClick() {\n//         this.appendElement('Schedule <b>Cell Click</b> event is triggered<hr>');\n//     }\n//     onNavigating() {\n//         this.appendElement('Schedule <b>Navigating</b> event is triggered<hr>');\n//     }\n//     onDestroyed() {\n//         this.appendElement('Schedule <b>Destroyed</b> event is triggered<hr>');\n//     }\n//     onEventClick() {\n//         this.appendElement('Schedule <b>Event Click</b> event is triggered<hr>');\n//     }\n//     onPopupOpen() {\n//         this.appendElement('Schedule <b>Popup Open</b> event is triggered<hr>');\n//     }\n//     appendElement(html) {\n//         let span = document.createElement('span');\n//         span.innerHTML = html;\n//         let log = document.getElementById('EventLog');\n//         log.insertBefore(span, log.firstChild);\n//     }\n//     render() {\n//         return (<div className='schedule-control-section'>\n//         <div className='col-lg-9 control-section'>\n//           <div className='control-wrapper'>\n//             <ScheduleComponent ref={schedule => this.scheduleObj = schedule} width='100%' height='650px' selectedDate={new Date(2021, 0, 10)} eventSettings={{ dataSource: this.data }} created={this.onCreate.bind(this)} eventRendered={this.onEventRendered.bind(this)} actionBegin={this.onActionBegin.bind(this)} actionComplete={this.onActionComplete.bind(this)} actionFailure={this.onActionFailure.bind(this)} cellClick={this.onCellClick.bind(this)} cellDoubleClick={this.onCellDoubleClick.bind(this)} destroyed={this.onDestroyed.bind(this)} navigating={this.onNavigating.bind(this)} eventClick={this.onEventClick.bind(this)} popupOpen={this.onPopupOpen.bind(this)}>\n//               <Inject services={[Day, Week, WorkWeek, Month, Agenda, Resize, DragAndDrop]}/>\n//             </ScheduleComponent>\n//           </div>\n//         </div>\n//         <div className='col-lg-3 property-section'>\n//           <PropertyPane title='Event Trace'>\n//             <table id='property' title='Properties' className='property-panel-table' style={{ width: '100%' }}>\n//               <tbody>\n//                 <tr style={{ height: '250px' }}>\n//                   <td>\n//                     <div className='eventarea' style={{ height: '245px', overflow: 'auto' }}>\n//                       <span className='EventLog' id='EventLog' style={{ wordBreak: 'normal' }}></span>\n//                     </div>\n//                   </td>\n//                 </tr>\n//                 <tr style={{ height: '50px' }}>\n//                   <td style={{ width: '30%' }}>\n//                     <div className='evtbtn' style={{ paddingBottom: '10px' }}>\n//                       <ButtonComponent title='Clear' onClick={this.onClear.bind(this)}>Clear</ButtonComponent>\n//                     </div>\n//                   </td>\n//                 </tr>\n//               </tbody>\n//             </table>\n//           </PropertyPane>\n//         </div>\n//       </div>);\n//     }\n// }\nimport React, { useEffect, useState } from 'react';\nimport { Scheduler } from \"@aldabil/react-scheduler\";\nimport toast, { Toaster } from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CalendarComponent() {\n  _s();\n\n  const notify = () => toast(\"Don't you worry, don't you worry, child \\n See heaven's got a plan for you\", {\n    icon: '✈️'\n  });\n\n  useEffect(() => {\n    notify();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Toaster, {\n      position: \"top-center\",\n      reverseOrder: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Scheduler, {\n      view: \"week\",\n      selectedDate: new Date(),\n      color: \"secondary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(CalendarComponent, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = CalendarComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"CalendarComponent\");","map":{"version":3,"sources":["C:/Users/Naila/Desktop/projekatSi/frontend/src/Components/Calendar.jsx"],"names":["React","useEffect","useState","Scheduler","toast","Toaster","CalendarComponent","notify","icon","Date"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AAIA;AAEE;AACA;AACA;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAMA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,0BAA1B;AACA,OAAOC,KAAP,IAAgBC,OAAhB,QAA+B,iBAA/B;;;AAGA,eAAe,SAASC,iBAAT,GAA6B;AAAA;;AAG1C,QAAMC,MAAM,GAAG,MAAMH,KAAK,CAAC,4EAAD,EAA+E;AACvGI,IAAAA,IAAI,EAAE;AADiG,GAA/E,CAA1B;;AAIAP,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,MAAM;AACP,GAFQ,EAEN,EAFM,CAAT;AAKA,sBAAS;AAAA,4BACP,QAAC,OAAD;AACA,MAAA,QAAQ,EAAC,YADT;AAEA,MAAA,YAAY,EAAE;AAFd;AAAA;AAAA;AAAA;AAAA,YADO,eAKP,QAAC,SAAD;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,YAAY,EAAE,IAAIE,IAAJ,EAFhB;AAGE,MAAA,KAAK,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA,YALO;AAAA,kBAAT;AAYD;;GAxBuBH,iB;;KAAAA,iB","sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import Kalend, { CalendarEvent, CalendarView, OnEventDragFinish } from 'calend';\r\n// import 'calend/dist/styles/index.css';\r\n// import toast, { Toaster } from 'react-hot-toast';\r\n// import { OnEventClickData } from 'calend';\r\n\r\n\r\n\r\n// const CalendComponent = () => {\r\n\r\n  // useEffect(() => {\r\n  //   notify();\r\n  // }, []);\r\n\r\n//   const events = {\r\n//     '01-11-2021': [\r\n//         {\r\n//         id: 1,\r\n//         startAt: '2021-11-21T18:00:00.000Z',\r\n//         endAt: '2021-11-21T19:00:00.000Z',\r\n//         summary: 'test',\r\n//         color: 'blue',\r\n//         }\r\n//     ],\r\n//     '21-11-2021': [\r\n//         {\r\n//         id: 2,\r\n//         startAt: '2021-11-21T18:00:00.000Z',\r\n//         endAt: '2021-11-21T19:00:00.000Z',\r\n//         summary: 'test',\r\n//         color: 'blue',\r\n//         }\r\n//     ]\r\n// }\r\n\r\n// const notify = () => toast(\"Don't you worry, don't you worry, child \\n See heaven's got a plan for you\", {\r\n//   icon: '🛩️',\r\n// });\r\n\r\n//   const [demoEvents, setDemoEvents] = useState(events);\r\n\r\n//   const onNewEventClick = (demoEvents) => {\r\n//     console.log(demoEvents);\r\n//   };\r\n\r\n//   const onShowMoreMonthClick = (demoEvents) => {\r\n//     console.log(demoEvents);\r\n//   };\r\n\r\n\r\n//   const onEventClick = (demoEvents) => {\r\n//     console.log(demoEvents);\r\n//     //modal for this\r\n//   };\r\n\r\n\r\n//   return (\r\n// //     <>\r\n//       <Toaster\r\n//         position=\"top-center\"\r\n//         reverseOrder={false}\r\n//       />\r\n//       <Kalend\r\n//         onNewEventClick={onNewEventClick}\r\n//         initialView={CalendarView.WEEK}\r\n//         disabledViews={[]}\r\n//         onEventClick={onEventClick}\r\n//         events={demoEvents}\r\n//         initialDate={new Date().toISOString()}\r\n//         hourHeight={60}\r\n//         showMoreMonth={onShowMoreMonthClick}\r\n//         timezone={'Europe/Berlin'}\r\n//         onEventDragFinish={OnEventDragFinish}\r\n//       />\r\n//     </>\r\n//   );\r\n// };\r\n\r\n\r\n// export default CalendComponent;\r\n\r\n\r\n\r\n\r\n\r\n// import { render } from 'react-dom';\r\n// import './Calendar.css';\r\n// import * as React from 'react';\r\n// import { ScheduleComponent, Day, Week, WorkWeek, Month, Agenda, Inject, Resize, DragAndDrop } from '@syncfusion/ej2-react-schedule';\r\n// import { applyCategoryColor } from './Helper';\r\n\r\n// import { extend } from '@syncfusion/ej2-base';\r\n// import { ButtonComponent } from '@syncfusion/ej2-react-buttons';\r\n// import { SampleBase } from './Sample-base';\r\n// import { PropertyPane } from './Property-pane';\r\n// import * as dataSource from './datasource.json';\r\n// /**\r\n//  * Schedule events sample\r\n//  */\r\n// export default class Events extends SampleBase {\r\n//     constructor() {\r\n//         super(...arguments);\r\n//         this.data = extend([], dataSource.scheduleData, null, true);\r\n//     }\r\n//     onEventRendered(args) {\r\n//         applyCategoryColor(args, this.scheduleObj.currentView);\r\n//     }\r\n//     onClear() {\r\n//         document.getElementById('EventLog').innerHTML = '';\r\n//     }\r\n//     onCreate() {\r\n//         this.appendElement('Schedule <b>Load</b> event is triggered<hr>');\r\n//     }\r\n//     onActionBegin() {\r\n//         this.appendElement('Schedule <b>Action Begin</b> event is triggered<hr>');\r\n//     }\r\n//     onActionComplete() {\r\n//         this.appendElement('Schedule <b>Action Complete</b> event is triggered<hr>');\r\n//     }\r\n//     onActionFailure() {\r\n//         this.appendElement('Schedule <b>Action Failure</b> event is triggered<hr>');\r\n//     }\r\n//     onCellDoubleClick() {\r\n//         this.appendElement('SChedule <b>Cell Double Click</b> event is triggered<hr>');\r\n//     }\r\n//     onCellClick() {\r\n//         this.appendElement('Schedule <b>Cell Click</b> event is triggered<hr>');\r\n//     }\r\n//     onNavigating() {\r\n//         this.appendElement('Schedule <b>Navigating</b> event is triggered<hr>');\r\n//     }\r\n//     onDestroyed() {\r\n//         this.appendElement('Schedule <b>Destroyed</b> event is triggered<hr>');\r\n//     }\r\n//     onEventClick() {\r\n//         this.appendElement('Schedule <b>Event Click</b> event is triggered<hr>');\r\n//     }\r\n//     onPopupOpen() {\r\n//         this.appendElement('Schedule <b>Popup Open</b> event is triggered<hr>');\r\n//     }\r\n//     appendElement(html) {\r\n//         let span = document.createElement('span');\r\n//         span.innerHTML = html;\r\n//         let log = document.getElementById('EventLog');\r\n//         log.insertBefore(span, log.firstChild);\r\n//     }\r\n//     render() {\r\n//         return (<div className='schedule-control-section'>\r\n//         <div className='col-lg-9 control-section'>\r\n//           <div className='control-wrapper'>\r\n//             <ScheduleComponent ref={schedule => this.scheduleObj = schedule} width='100%' height='650px' selectedDate={new Date(2021, 0, 10)} eventSettings={{ dataSource: this.data }} created={this.onCreate.bind(this)} eventRendered={this.onEventRendered.bind(this)} actionBegin={this.onActionBegin.bind(this)} actionComplete={this.onActionComplete.bind(this)} actionFailure={this.onActionFailure.bind(this)} cellClick={this.onCellClick.bind(this)} cellDoubleClick={this.onCellDoubleClick.bind(this)} destroyed={this.onDestroyed.bind(this)} navigating={this.onNavigating.bind(this)} eventClick={this.onEventClick.bind(this)} popupOpen={this.onPopupOpen.bind(this)}>\r\n//               <Inject services={[Day, Week, WorkWeek, Month, Agenda, Resize, DragAndDrop]}/>\r\n//             </ScheduleComponent>\r\n//           </div>\r\n//         </div>\r\n//         <div className='col-lg-3 property-section'>\r\n//           <PropertyPane title='Event Trace'>\r\n//             <table id='property' title='Properties' className='property-panel-table' style={{ width: '100%' }}>\r\n//               <tbody>\r\n//                 <tr style={{ height: '250px' }}>\r\n//                   <td>\r\n//                     <div className='eventarea' style={{ height: '245px', overflow: 'auto' }}>\r\n//                       <span className='EventLog' id='EventLog' style={{ wordBreak: 'normal' }}></span>\r\n//                     </div>\r\n//                   </td>\r\n//                 </tr>\r\n//                 <tr style={{ height: '50px' }}>\r\n//                   <td style={{ width: '30%' }}>\r\n//                     <div className='evtbtn' style={{ paddingBottom: '10px' }}>\r\n//                       <ButtonComponent title='Clear' onClick={this.onClear.bind(this)}>Clear</ButtonComponent>\r\n//                     </div>\r\n//                   </td>\r\n//                 </tr>\r\n//               </tbody>\r\n//             </table>\r\n//           </PropertyPane>\r\n//         </div>\r\n//       </div>);\r\n//     }\r\n// }\r\n\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Scheduler } from \"@aldabil/react-scheduler\";\r\nimport toast, { Toaster } from 'react-hot-toast';\r\n\r\n\r\nexport default function CalendarComponent() {\r\n\r\n  \r\n  const notify = () => toast(\"Don't you worry, don't you worry, child \\n See heaven's got a plan for you\", {\r\n    icon: '✈️',\r\n  });\r\n\r\n  useEffect(() => {\r\n    notify();\r\n  }, []);\r\n\r\n\r\n  return ( <>\r\n    <Toaster\r\n    position=\"top-center\"\r\n    reverseOrder={false}\r\n  />\r\n    <Scheduler\r\n      view=\"week\"\r\n      selectedDate={new Date()}\r\n      color=\"secondary\"\r\n    />\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}