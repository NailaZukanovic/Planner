{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Naila\\\\Desktop\\\\projekatSi\\\\frontend\\\\src\\\\Components\\\\Login.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./styles.css\";\nimport React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Register() {\n  _s();\n\n  const navigate = useNavigate();\n  const [formData, setFormData] = React.useState({\n    name: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n    confirm: \"\",\n    isJoined: true\n  });\n\n  function handleChange(event) {\n    console.log(event);\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = event.target;\n    setFormData(prevFormdData => {\n      return { ...prevFormdData,\n        [name]: type === \"checkbox\" ? checked : value\n      };\n    });\n  }\n\n  console.log(formData);\n\n  function handleSubmit(event) {\n    event.preventDefault();\n\n    if (formData.password === formData.confirm) {\n      axios.post('http://localhost:4000/signup', {\n        name: formData.name,\n        lastName: formData.lastName,\n        email: formData.email,\n        password: formData.password\n      });\n      navigate(\"/notes\");\n    } else {\n      console.log(\"Passwords do not match\");\n      return; //because i dont want run \"Thanks..\" if password not match\n    }\n\n    if (formData.isJoined) {\n      console.log(\"Thanks for signig up for our newsletter\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"First name\",\n        className: \"form--input\",\n        value: formData.name,\n        onChange: handleChange,\n        name: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Last name\",\n        className: \"form--input\",\n        value: formData.lastName,\n        onChange: handleChange,\n        name: \"lastName\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email address\",\n        className: \"form--input\",\n        value: formData.email,\n        onChange: handleChange,\n        name: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        className: \"form--input\",\n        value: formData.password,\n        onChange: handleChange,\n        name: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"form--submit\",\n        children: \"Sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Register, \"s5xSaRfH2HkNJCGAAX3yPXAnwiU=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/Naila/Desktop/projekatSi/frontend/src/Components/Login.jsx"],"names":["React","useNavigate","axios","Register","navigate","formData","setFormData","useState","name","lastName","email","password","confirm","isJoined","handleChange","event","console","log","value","type","checked","target","prevFormdData","handleSubmit","preventDefault","post"],"mappings":"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","sourcesContent":["import \"./styles.css\";\r\nimport React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\nexport default function Register() {\r\n    const navigate = useNavigate();\r\n\r\n  const [formData, setFormData] = React.useState({\r\n    name: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirm: \"\",\r\n    isJoined: true\r\n  });\r\n\r\n  function handleChange(event) {\r\n    console.log(event);\r\n    const { name, value, type, checked } = event.target;\r\n    setFormData((prevFormdData) => {\r\n      return {\r\n        ...prevFormdData,\r\n        [name]: type === \"checkbox\" ? checked : value\r\n      };\r\n    });\r\n  }\r\n  console.log(formData);\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    if (formData.password === formData.confirm) {\r\n        axios.post('http://localhost:4000/signup', {\r\n            name: formData.name,\r\n            lastName: formData.lastName,\r\n            email: formData.email,\r\n            password: formData.password\r\n        });\r\n\r\n        navigate(\"/notes\");\r\n    } else {\r\n      console.log(\"Passwords do not match\");\r\n      return; //because i dont want run \"Thanks..\" if password not match\r\n    }\r\n    if (formData.isJoined) {\r\n      console.log(\"Thanks for signig up for our newsletter\");\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"form-container\">\r\n      <form className=\"form\" onSubmit={handleSubmit}>\r\n      <input\r\n          type=\"text\"\r\n          placeholder=\"First name\"\r\n          className=\"form--input\"\r\n          value={formData.name}\r\n          onChange={handleChange}\r\n          name=\"name\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Last name\"\r\n          className=\"form--input\"\r\n          value={formData.lastName}\r\n          onChange={handleChange}\r\n          name=\"lastName\"\r\n        />\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email address\"\r\n          className=\"form--input\"\r\n          value={formData.email}\r\n          onChange={handleChange}\r\n          name=\"email\"\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          className=\"form--input\"\r\n          value={formData.password}\r\n          onChange={handleChange}\r\n          name=\"password\"\r\n        />\r\n        <button className=\"form--submit\">Sign up</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}