{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Naila\\\\Desktop\\\\projekatSi\\\\frontend\\\\src\\\\Components\\\\pages\\\\Notes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { Container } from '@material-ui/core';\nimport NoteCard from './component_note/NoteCard.js';\nimport { makeStyles } from '@material-ui/core';\nimport TextField from '@mui/material/TextField';\nimport IconButton from '@mui/material/IconButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst axios = require('axios');\n\nconst useStyles = makeStyles({\n  page: {\n    background: '#f9f9f9',\n    width: '100%',\n    padding: 20\n  },\n  field: {\n    marginTop: 20,\n    marginBotton: 20,\n    display: 'block'\n  }\n});\nexport default function Notes() {\n  _s();\n\n  const classes = useStyles();\n  const [notes, setNotes] = useState([]); //     set search query to empty string\n\n  const [q, setQ] = useState(\"\"); //     set search parameters\n  //     we only what to search countries by capital and name\n  //     this list can be longer if you want\n  //     you can search countries even by their population\n  // just add it to this array\n\n  const [searchParam] = useState([\"category\"]);\n\n  const search = items => {\n    return items.filter(item => {\n      return searchParam.some(newItem => {\n        return item[newItem].toString().toLowerCase().indexOf(q.toLowerCase()) > -1;\n      });\n    });\n  };\n\n  const cancelSearch = () => {\n    setQ(\"\");\n  };\n\n  useEffect(() => {\n    axios.get('http://localhost:4000/notes') // .then(res => res.json())\n    .then(data => {\n      setNotes(data.data.notes);\n      console.log(data);\n    });\n  }, []);\n\n  const handleDelete = async _id => {\n    console.log(_id);\n    await fetch('http://localhost:4000/notes/' + _id, {\n      method: 'DELETE'\n    }).then(res => console.log(res)).catch(err => console.log(err));\n    console.log(notes);\n    const newNotes = notes.filter(note => note._id != _id);\n    setNotes(newNotes);\n  };\n\n  const handleUpdate = _id => {\n    console.log(_id);\n  }; //xs={12}  lg={4}\n\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: classes.page,\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      variant: \"standard\",\n      value: q,\n      onChange: e => setQ(e.target.value),\n      placeholder: \"Search\\u2026\",\n      InputProps: /*#__PURE__*/_jsxDEV(SearchIcon, {\n        fontSize: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this) // <IconButton\n      //   title=\"Clear\"\n      //   aria-label=\"Clear\"\n      //   size=\"small\"\n      //   style={{ visibility: props.value ? 'visible' : 'hidden' }}\n      //   onClick={props.clearSearch}\n      // >\n      //   <ClearIcon fontSize=\"small\" />\n      // </IconButton>\n      // sx={{\n      //   width: {\n      //     xs: 1,\n      //     sm: 'auto',\n      //   },\n      //   m: (theme) => theme.spacing(1, 0.5, 1.5),\n      //   '& .MuiSvgIcon-root': {\n      //     mr: 0.5,\n      //   },\n      //   '& .MuiInput-underline:before': {\n      //     borderBottom: 1,\n      //     borderColor: 'divider',\n      //   },\n      // }}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: search(notes).map(note => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        lg: 4,\n        children: /*#__PURE__*/_jsxDEV(NoteCard, {\n          note: note,\n          handleDelete: () => handleDelete(note._id),\n          handleUpdate: handleUpdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 15\n        }, this)\n      }, note._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Notes, \"ytiEvsYhHzwrzyrnhNfP2xkCD1Q=\", false, function () {\n  return [useStyles];\n});\n\n_c = Notes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Notes\");","map":{"version":3,"sources":["C:/Users/Naila/Desktop/projekatSi/frontend/src/Components/pages/Notes.js"],"names":["React","useEffect","useState","Grid","Paper","Container","NoteCard","makeStyles","TextField","IconButton","axios","require","useStyles","page","background","width","padding","field","marginTop","marginBotton","display","Notes","classes","notes","setNotes","q","setQ","searchParam","search","items","filter","item","some","newItem","toString","toLowerCase","indexOf","cancelSearch","get","then","data","console","log","handleDelete","_id","fetch","method","res","catch","err","newNotes","note","handleUpdate","e","target","value","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useState} from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Container } from '@material-ui/core';\r\nimport NoteCard from './component_note/NoteCard.js';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport TextField from '@mui/material/TextField';\r\nimport IconButton from '@mui/material/IconButton';\r\n\r\nconst axios = require('axios');\r\n\r\nconst useStyles = makeStyles({\r\n    page: \r\n    {\r\n      background: '#f9f9f9',\r\n      width: '100%',\r\n      padding:20 \r\n    },\r\n    \r\n    field: {\r\n      marginTop: 20,\r\n      marginBotton: 20,\r\n      display: 'block'\r\n    }\r\n});\r\n  \r\n  \r\nexport default function Notes() {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [notes, setNotes] = useState([]);\r\n\r\n     //     set search query to empty string\r\n     const [q, setQ] = useState(\"\");\r\n     //     set search parameters\r\n     //     we only what to search countries by capital and name\r\n     //     this list can be longer if you want\r\n     //     you can search countries even by their population\r\n     // just add it to this array\r\n     const [searchParam] = useState([\"category\"]);\r\n\r\n\r\n     const search = (items) => {\r\n      return items.filter((item) => {\r\n        return searchParam.some((newItem) => {\r\n            return (\r\n                item[newItem]\r\n                    .toString()\r\n                    .toLowerCase()\r\n                    .indexOf(q.toLowerCase()) > -1\r\n              );\r\n          });\r\n      });\r\n    }\r\n\r\n    const cancelSearch = () => {\r\n      setQ(\"\");\r\n    };\r\n  \r\n    useEffect(() => {\r\n      axios.get('http://localhost:4000/notes')\r\n        // .then(res => res.json())\r\n        .then(data => \r\n          { setNotes(data.data.notes);\r\n              console.log(data); }\r\n        )\r\n    }, [])\r\n  \r\n    const handleDelete = async (_id) => {\r\n      console.log(_id);\r\n\r\n      await fetch('http://localhost:4000/notes/' + _id, {\r\n        method: 'DELETE'\r\n      }).then(res => console.log(res)).catch(err => console.log(err));\r\n\r\n      console.log(notes);\r\n\r\n      const newNotes = notes.filter(note => note._id != _id)\r\n      setNotes(newNotes)\r\n    }\r\n\r\n    const handleUpdate = (_id) => \r\n    {\r\n      console.log(_id);\r\n    }\r\n//xs={12}  lg={4}\r\n    return(\r\n      <Container className={classes.page}>\r\n                    \r\n\r\n            <TextField\r\n              variant=\"standard\"\r\n              value={q}\r\n              onChange={(e) => setQ(e.target.value)}\r\n              placeholder=\"Search…\"\r\n              InputProps={\r\n                <SearchIcon fontSize=\"small\" />\r\n                  // <IconButton\r\n                  //   title=\"Clear\"\r\n                  //   aria-label=\"Clear\"\r\n                  //   size=\"small\"\r\n                  //   style={{ visibility: props.value ? 'visible' : 'hidden' }}\r\n                  //   onClick={props.clearSearch}\r\n                  // >\r\n                  //   <ClearIcon fontSize=\"small\" />\r\n                  // </IconButton>\r\n                  }\r\n              // sx={{\r\n              //   width: {\r\n              //     xs: 1,\r\n              //     sm: 'auto',\r\n              //   },\r\n              //   m: (theme) => theme.spacing(1, 0.5, 1.5),\r\n              //   '& .MuiSvgIcon-root': {\r\n              //     mr: 0.5,\r\n              //   },\r\n              //   '& .MuiInput-underline:before': {\r\n              //     borderBottom: 1,\r\n              //     borderColor: 'divider',\r\n              //   },\r\n              // }}\r\n            />\r\n                  \r\n\r\n        <Grid container spacing={3}>\r\n          {search(notes).map(note => (\r\n            <Grid item xs={12} md={6} lg={4} key={note._id}>\r\n              <NoteCard note={note} handleDelete={() => handleDelete(note._id)} handleUpdate={handleUpdate}/>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Container>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}