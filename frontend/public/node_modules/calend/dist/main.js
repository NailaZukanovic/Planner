var $cw6c3$reactjsxruntime = require("react/jsx-runtime");
var $cw6c3$react = require("react");
var $cw6c3$luxon = require("luxon");
var $cw6c3$swchelpers = require("@swc/helpers");
var $cw6c3$regeneratorruntime = require("regenerator-runtime");

function $parcel$defineInteropFlag(a) {
  Object.defineProperty(a, '__esModule', {value: true, configurable: true});
}
function $parcel$export(e, n, v, s) {
  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});
}
function $parcel$interopDefault(a) {
  return a && a.__esModule ? a.default : a;
}

$parcel$defineInteropFlag(module.exports);

$parcel$export(module.exports, "CalendarView", function () { return $3f7b2fe5d2c34f8f$export$b573856c46cc9357; });
$parcel$export(module.exports, "default", function () { return $3f7b2fe5d2c34f8f$export$2e2bcd8739ae039; });









var $88a08af890f49243$export$eae15a231de23f4a = 25;
var $88a08af890f49243$export$fd6e3e2f92ae10fd = 1;
var $88a08af890f49243$export$c1af425794ec7f44 = 5;
var $88a08af890f49243$export$b4e2ba6756dec2c = 8;
var $88a08af890f49243$export$25973911efc96b71 = 40;
var $88a08af890f49243$export$447c5938f45c45a5 = 40;
var $88a08af890f49243$export$1c9a1263a0d343f4 = 40;
var $88a08af890f49243$export$81f0fddb54debad3 = 50;
var $88a08af890f49243$export$27633cf363057263 = 25;
var $88a08af890f49243$export$4b16cd32b50218c6 = 14;
var $88a08af890f49243$export$418e7590fd81e209 = [
    '00',
    '01',
    '02',
    '03',
    '04',
    '05',
    '06',
    '07',
    '08',
    '09',
    '10',
    '11',
    '12',
    '13',
    '14',
    '15',
    '16',
    '17',
    '18',
    '19',
    '20',
    '21',
    '22',
    '23', 
];







var $e4750b0ebeed8e48$export$ec9758e21af63072;
(function(CALENDAR_VIEW) {
    CALENDAR_VIEW["AGENDA"] = 'agenda';
    CALENDAR_VIEW["WEEK"] = 'week';
    CALENDAR_VIEW["DAY"] = 'day';
    CALENDAR_VIEW["THREE_DAYS"] = 'threeDays';
    CALENDAR_VIEW["MONTH"] = 'month';
})($e4750b0ebeed8e48$export$ec9758e21af63072 || ($e4750b0ebeed8e48$export$ec9758e21af63072 = {
}));
var $e4750b0ebeed8e48$export$76a2e4c433c23bb9;
(function(EVENT_TYPE) {
    EVENT_TYPE["NORMAL"] = 'normal';
    EVENT_TYPE["MONTH"] = 'month';
    EVENT_TYPE["AGENDA"] = 'agenda';
    EVENT_TYPE["HEADER"] = 'header';
})($e4750b0ebeed8e48$export$76a2e4c433c23bb9 || ($e4750b0ebeed8e48$export$76a2e4c433c23bb9 = {
}));
var $e4750b0ebeed8e48$export$c2bed76d77ee7287;
(function(CALENDAR_NAVIGATION_DIRECTION) {
    CALENDAR_NAVIGATION_DIRECTION["FORWARD"] = 'forward';
    CALENDAR_NAVIGATION_DIRECTION["BACKWARDS"] = 'backwards';
    CALENDAR_NAVIGATION_DIRECTION["TODAY"] = 'today';
})($e4750b0ebeed8e48$export$c2bed76d77ee7287 || ($e4750b0ebeed8e48$export$c2bed76d77ee7287 = {
}));




//
// Support for local datetime, timezones and floating times
//
var $28306200f69a6328$var$FLOATING_DATETIME = 'floating'; // fixed datetime without timezone
var $28306200f69a6328$var$UTC_TIMEZONE = 'UTC';
var $28306200f69a6328$export$64d4bb1347f411e8 = function(date, zone, deviceTimezone) {
    var dateString = typeof date === 'string' ? date : date.toString();
    var isFloatingDatetime = zone === $28306200f69a6328$var$FLOATING_DATETIME;
    // Adjust date with timezone so when converted to UTC it represents correct value with fixed time
    if (isFloatingDatetime) {
        var dateFloating = $cw6c3$luxon.DateTime.fromISO(dateString, {
            zone: $28306200f69a6328$var$UTC_TIMEZONE
        });
        return dateFloating.toUTC().toISO();
    }
    var thisDate = $cw6c3$luxon.DateTime.fromISO(dateString);
    // Adjust datetime to device timezone
    if (deviceTimezone) {
        var dateConvert = thisDate.setZone(zone);
        return dateConvert.setZone(deviceTimezone).toString();
    }
    return thisDate.setZone(zone).toString();
};
var $28306200f69a6328$export$6c2618c4afcf6cfb = function(date, zone, deviceTimezone) {
    var dateString = typeof date === 'string' ? date : date.toString();
    var isFloatingDatetime = zone === $28306200f69a6328$var$FLOATING_DATETIME;
    // Adjust date with timezone so when converted to UTC it represents correct value with fixed time
    if (isFloatingDatetime) {
        var dateFloating = $cw6c3$luxon.DateTime.fromISO(dateString, {
            zone: $28306200f69a6328$var$UTC_TIMEZONE
        });
        return dateFloating.toUTC();
    }
    var thisDate = $cw6c3$luxon.DateTime.fromISO(dateString);
    if (!zone) {
        // Adjust datetime to device timezone
        if (deviceTimezone) return thisDate.setZone(deviceTimezone);
        else return thisDate;
    }
    return thisDate.setZone(zone);
};


var $bf7b38bce41ca3dd$export$b7a9dbebc395fc65 = function(className, isDark) {
    return isDark ? "".concat(className, "-dark") : className;
};
var $bf7b38bce41ca3dd$export$5f81845c2fa0b381 = function(className, isMobile) {
    return isMobile ? "".concat(className, "-mobile") : className;
};
var $bf7b38bce41ca3dd$export$cf733e3bd5432c08 = function(className, isMobile, isDark) {
    var classNameParsed = className;
    classNameParsed = isMobile ? "".concat(classNameParsed, "-mobile") : classNameParsed;
    classNameParsed = isDark ? "".concat(classNameParsed, "-dark") : classNameParsed;
    return classNameParsed;
};
var $bf7b38bce41ca3dd$export$f5a7c490b6f9fbc4 = function(dateObj) {
    return dateObj.isValid ? dateObj.toFormat('dd-MM-yyyy') : $cw6c3$luxon.DateTime.fromISO(dateObj).toFormat('dd-MM-yyyy');
};
var $bf7b38bce41ca3dd$export$76c69f043295405f = function(calendarView) {
    if (calendarView === $e4750b0ebeed8e48$export$ec9758e21af63072.THREE_DAYS || calendarView === $e4750b0ebeed8e48$export$ec9758e21af63072.DAY || calendarView === $e4750b0ebeed8e48$export$ec9758e21af63072.WEEK) return $88a08af890f49243$export$447c5938f45c45a5;
    return 0;
};
var $bf7b38bce41ca3dd$export$4be7a748c9766cf9 = function(array) {
    return array[0];
};
var $bf7b38bce41ca3dd$export$126fc096895fc6f5 = function(array) {
    return array[array.length - 1];
};
var $bf7b38bce41ca3dd$export$3643189503061f69 = function(date) {
    return date.set({
        hour: 0,
        minute: 0,
        second: 0
    }).toUTC().toString();
};
var $bf7b38bce41ca3dd$export$a7827c78319dafc9 = function(date) {
    return date.set({
        hour: 23,
        minute: 59,
        second: 59
    }).toUTC().toString();
};
var $bf7b38bce41ca3dd$export$23783ea7bfe28abd = function(item) {
    if (!item) return false;
    return(// @ts-ignore
    $28306200f69a6328$export$6c2618c4afcf6cfb(item.endAt, item.timezoneStart).diff($28306200f69a6328$export$6c2618c4afcf6cfb(item.startAt, item.timezoneStart), 'days').toObject().days > 1);
};
var $bf7b38bce41ca3dd$export$205aaf06acb1c5fc = function(calendarView) {
    switch(calendarView){
        case $e4750b0ebeed8e48$export$ec9758e21af63072.AGENDA:
            return 'Agenda';
        case $e4750b0ebeed8e48$export$ec9758e21af63072.DAY:
            return 'Day';
        case $e4750b0ebeed8e48$export$ec9758e21af63072.THREE_DAYS:
            return '3 days';
        case $e4750b0ebeed8e48$export$ec9758e21af63072.WEEK:
            return 'Week';
        case $e4750b0ebeed8e48$export$ec9758e21af63072.MONTH:
            return 'Month';
        default:
            return '';
    }
};



//
// Support for local datetime, timezones and floating times
//
var $d49542164c9bae14$var$FLOATING_DATETIME = 'floating'; // fixed datetime without timezone
var $d49542164c9bae14$var$UTC_TIMEZONE = 'UTC';
var $d49542164c9bae14$export$9e6a8e9ca52f6a3d = "yyyy-MM-dd HH:mm:ss 'Z'";
var $d49542164c9bae14$export$b7b5db2aa6555cc1 = 'd. MMM, HH:mm';
var $d49542164c9bae14$export$45c85543ba71221d = 'd. MMMM';
var $d49542164c9bae14$export$c4e1e4e065ff5bd8 = 'HH:mm';
var $d49542164c9bae14$export$2fd089738c9b03fb = 'd. MMMM (EEEEEE)';
var $d49542164c9bae14$export$4679370298bfc65 = 'cccc';
var $d49542164c9bae14$export$1be242b518527e80 = 'ccc';
var $d49542164c9bae14$export$884cf35d3975e8b9 = 'EEEEEE';
var $d49542164c9bae14$export$7c233a6f2ca6f19e = 'd. MMMM yyyy';
var $d49542164c9bae14$export$74b2237eca26435b = 'dd-MM-yyyy';
var $d49542164c9bae14$export$64d4bb1347f411e8 = function(date, zone, deviceTimezone) {
    var dateString = typeof date === 'string' ? date : date.toString();
    var isFloatingDatetime = zone === $d49542164c9bae14$var$FLOATING_DATETIME;
    // Adjust date with timezone so when converted to UTC it represents correct value with fixed time
    if (isFloatingDatetime) {
        var dateFloating = $cw6c3$luxon.DateTime.fromISO(dateString, {
            zone: $d49542164c9bae14$var$UTC_TIMEZONE
        });
        return dateFloating.toUTC().toISO();
    }
    var thisDate = $cw6c3$luxon.DateTime.fromISO(dateString);
    // Adjust datetime to device timezone
    if (deviceTimezone) {
        var dateConvert = thisDate.setZone(zone);
        return dateConvert.setZone(deviceTimezone).toString();
    }
    return thisDate.setZone(zone).toString();
};
var $d49542164c9bae14$var$LuxonHelper = {
    parseToDateTime: function(date) {
        return typeof date === 'string' ? $cw6c3$luxon.DateTime.fromISO(date) : date;
    },
    getLastDayOfMonth: function(date) {
        var daysInMonth = date.daysInMonth;
        return date.set({
            day: daysInMonth
        });
    },
    getFirstDayOfMonth: function(date) {
        return date.set({
            day: 1
        });
    },
    isSameDay: function(dateA, dateB) {
        var dateAParsed = $d49542164c9bae14$var$LuxonHelper.parseToDateTime(dateA);
        var dateBParsed = $d49542164c9bae14$var$LuxonHelper.parseToDateTime(dateB);
        return dateAParsed.year === dateBParsed.year && dateAParsed.month === dateBParsed.month && dateAParsed.day === dateBParsed.day;
    },
    isBefore: function(dateA, dateB) {
        return $cw6c3$luxon.DateTime.fromISO(dateB).valueOf() - $cw6c3$luxon.DateTime.fromISO(dateA).valueOf() > 0;
    },
    isBeforeInDateTime: function(dateA, dateB) {
        return dateB.valueOf() - dateA.valueOf() > 0;
    },
    isBeforeAny: function(dateA, dateB) {
        var dateADateTime = $d49542164c9bae14$var$LuxonHelper.parseToDateTime(dateA);
        var dateBDateTime = $d49542164c9bae14$var$LuxonHelper.parseToDateTime(dateB);
        return dateBDateTime.valueOf() - dateADateTime.valueOf() > 0;
    },
    isToday: function(dateA) {
        var todayDate = $cw6c3$luxon.DateTime.local();
        return dateA.day === todayDate.day && dateA.month === todayDate.month && dateA.year === todayDate.year;
    },
    parseToString: function(date) {
        if (typeof date !== 'string') {
            if (date.isValid) return date.toUTC().toString();
        }
        return date.toString();
    },
    toUtcString: function(date) {
        return $cw6c3$luxon.DateTime.fromISO(date).toUTC().toISO();
    },
    toUtc: function(date) {
        return date.toUTC().toISO();
    },
    setTimezone: function(dateString, timezone) {
        return $cw6c3$luxon.DateTime.fromISO(dateString).setZone(timezone).toString();
    },
    toHumanDate: function(dateString) {
        return $cw6c3$luxon.DateTime.fromISO(dateString).toFormat('d LLL yyyy hh:mm');
    }
};
var $d49542164c9bae14$export$2e2bcd8739ae039 = $d49542164c9bae14$var$LuxonHelper;











var $1500da26cef85c66$var$ONE_DAY = 1;
var $1500da26cef85c66$var$THREE_DAYS = 3;
var $1500da26cef85c66$var$SEVEN_DAYS = 7;
var $1500da26cef85c66$export$447c5938f45c45a5 = 24;
var $1500da26cef85c66$export$4f483ccf7f9b0ee = 39;
var $1500da26cef85c66$export$a68b5cd2c63899ef = 56;
var $1500da26cef85c66$export$569cc43c3490b3be = 138;
var $1500da26cef85c66$export$7c9eed87636cb7a0 = 208;
var $1500da26cef85c66$export$5277584b4918f333 = 166;
var $1500da26cef85c66$export$f23b20f837a0ffd = 50;
var $1500da26cef85c66$export$4d1e296c90a49235 = 247;
var $1500da26cef85c66$export$b314e84a21bd4b5f = function(stringDate) {
    return stringDate.slice(0, stringDate.indexOf('T'));
};
var $1500da26cef85c66$export$a6181a60b480c9a4 = [
    0,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    10,
    11,
    12,
    13,
    14,
    15,
    16,
    17,
    18,
    19,
    20,
    21,
    22,
    23,
    24, 
];
var $1500da26cef85c66$export$418e7590fd81e209 = [
    '00',
    '01',
    '02',
    '03',
    '04',
    '05',
    '06',
    '07',
    '08',
    '09',
    '10',
    '11',
    '12',
    '13',
    '14',
    '15',
    '16',
    '17',
    '18',
    '19',
    '20',
    '21',
    '22',
    '23', 
];
var $1500da26cef85c66$export$2d5ed1e6bc597003 = function(colorString, isDark) {
    return $1500da26cef85c66$export$b1af3e61661bd3b2[colorString] ? $1500da26cef85c66$export$b1af3e61661bd3b2[colorString][isDark ? 'dark' : 'light'] : colorString;
};
var $1500da26cef85c66$export$b1af3e61661bd3b2 = {
    red: {
        dark: '#ef9a9a',
        light: '#e53935'
    },
    pink: {
        dark: '#f48fb1',
        light: '#d81b60'
    },
    purple: {
        dark: '#ce93d8',
        light: '#8e24aa'
    },
    'deep purple': {
        dark: '#b39ddb',
        light: '#5e35b1'
    },
    indigo: {
        dark: '#9fa8da',
        light: '#3949ab'
    },
    blue: {
        dark: '#90caf9',
        light: '#1e88e5'
    },
    'light blue': {
        dark: '#81d4fa',
        light: '#039be5'
    },
    cyan: {
        dark: '#80deea',
        light: '#00acc1'
    },
    teal: {
        dark: '#80cbc4',
        light: '#00897b'
    },
    green: {
        dark: '#a5d6a7',
        light: '#43a047'
    },
    'light green': {
        dark: '#c5e1a5',
        light: '#7cb342'
    },
    yellow: {
        dark: '#fff59d',
        light: '#fdd835'
    },
    amber: {
        dark: '#ffe082',
        light: '#ffb300'
    },
    orange: {
        dark: '#ffcc80',
        light: '#fb8c00'
    },
    'deep orange': {
        dark: '#ffab91',
        light: '#f4511e'
    },
    brown: {
        dark: '#bcaaa4',
        light: '#6d4c41'
    },
    'blue grey': {
        dark: '#b0bec5',
        light: '#546e7a'
    }
};
var $1500da26cef85c66$export$933d53aed74a6ef0 = [
    'Mo',
    'Tu',
    'We',
    'Th',
    'Fr',
    'Sa',
    'Su'
];
var $1500da26cef85c66$export$737cca9a4f8febb7 = function(date) {
    return date;
};
var $1500da26cef85c66$var$getOneDay = function(date, setSelectedDate) {
    var refDate = $1500da26cef85c66$export$737cca9a4f8febb7(date);
    // Set state
    if (setSelectedDate) setSelectedDate(refDate);
    return [
        refDate
    ];
};
var $1500da26cef85c66$export$f82b43a5dad4749 = function(refDate) {
    var firstDayInMonth = $d49542164c9bae14$export$2e2bcd8739ae039.getFirstDayOfMonth(refDate);
    var daysInMonth = refDate.daysInMonth;
    var monthDays = [];
    // Add missing days to month view
    for(var i = 0; i <= daysInMonth; i += 1){
        var day = firstDayInMonth.plus({
            days: i
        });
        monthDays.push(day);
    }
    return monthDays;
};
var $1500da26cef85c66$export$be98daea68e5bd4 = function(date) {
    var FIVE_WEEKS_DAYS_COUNT = 36;
    // Get reference date for calculating new month
    // Get first week of current month
    var firstDayOfCurrentMonth = $d49542164c9bae14$export$2e2bcd8739ae039.getFirstDayOfMonth(date);
    var firstWeekOfCurrentMonth = $1500da26cef85c66$export$69ac73875782844e(firstDayOfCurrentMonth, $e4750b0ebeed8e48$export$ec9758e21af63072.WEEK, undefined);
    var monthDays = firstWeekOfCurrentMonth;
    // Add missing days to month view
    for(var i = 1; i < FIVE_WEEKS_DAYS_COUNT; i += 1){
        var day = firstWeekOfCurrentMonth[6].plus({
            days: i
        });
        monthDays.push(day);
    }
    return monthDays;
};
var $1500da26cef85c66$export$4b1bd9c645c26ec4 = function(date, setSelectedDate) {
    var monthDays = $1500da26cef85c66$export$f82b43a5dad4749(date);
    // Set state
    if (setSelectedDate) setSelectedDate(monthDays[15]);
    return monthDays;
};
var $1500da26cef85c66$export$214c174a056fc56f = function(date, setSelectedDate) {
    var monthDays = $1500da26cef85c66$export$be98daea68e5bd4(date);
    // Set state
    if (setSelectedDate) setSelectedDate(monthDays[15]);
    return monthDays;
};
var $1500da26cef85c66$export$69ac73875782844e = function(date, calendarView, setSelectedDate) {
    // Set state
    if (setSelectedDate && calendarView !== $e4750b0ebeed8e48$export$ec9758e21af63072.MONTH) setSelectedDate(date);
    var days = [];
    var dayInWeek = date.weekday;
    var startDate = date.minus({
        days: dayInWeek - 1
    });
    if (calendarView === $e4750b0ebeed8e48$export$ec9758e21af63072.MONTH) {
        if (dayInWeek === 0) {
            for(var i = 6; i > 0; i--)days.push(date.minus({
                days: i
            }));
            days.push(date);
        } else {
            days.push(startDate);
            for(var i1 = 1; i1 < 7; i1++)days.push(startDate.plus({
                days: i1
            }));
        }
    } else for(var i2 = 0; i2 < 7; i2++)days.push(startDate.plus({
        days: i2
    }));
    return days;
};
var $1500da26cef85c66$export$b34cdd4783897766 = function(date, setSelectedDate, isGoingForward) {
    var days = [];
    if (isGoingForward === null || isGoingForward === undefined) for(var i = 0; i <= 2; i++)days.push(date.plus({
        days: i
    }));
    else if (isGoingForward) for(var i3 = 1; i3 <= 3; i3++)days.push(date.plus({
        days: i3
    }));
    else for(var i4 = 3; i4 > 0; i4--)days.push(date.minus({
        days: i4
    }));
    // Set state
    if (setSelectedDate) setSelectedDate(days[1]);
    return days;
};
var $1500da26cef85c66$export$e75d169fad6edf5f = function(calendarView, date, setSelectedDate) {
    switch(calendarView){
        case $e4750b0ebeed8e48$export$ec9758e21af63072.WEEK:
            return $1500da26cef85c66$export$69ac73875782844e(date, calendarView, setSelectedDate);
        case $e4750b0ebeed8e48$export$ec9758e21af63072.THREE_DAYS:
            return $1500da26cef85c66$export$b34cdd4783897766(date, setSelectedDate);
        case $e4750b0ebeed8e48$export$ec9758e21af63072.DAY:
            return $1500da26cef85c66$var$getOneDay(date, setSelectedDate);
        case $e4750b0ebeed8e48$export$ec9758e21af63072.MONTH:
            return $1500da26cef85c66$export$214c174a056fc56f(date, setSelectedDate);
        case $e4750b0ebeed8e48$export$ec9758e21af63072.AGENDA:
            return $1500da26cef85c66$export$4b1bd9c645c26ec4(date, setSelectedDate);
        default:
            return $1500da26cef85c66$export$69ac73875782844e(date, calendarView, setSelectedDate);
    }
};
var $1500da26cef85c66$export$f16d393a3268e3f3 = function(calendarView) {
    switch(calendarView){
        case $e4750b0ebeed8e48$export$ec9758e21af63072.WEEK:
            return $1500da26cef85c66$var$SEVEN_DAYS;
        case $e4750b0ebeed8e48$export$ec9758e21af63072.THREE_DAYS:
            return $1500da26cef85c66$var$THREE_DAYS;
        case $e4750b0ebeed8e48$export$ec9758e21af63072.DAY:
            return $1500da26cef85c66$var$ONE_DAY;
        default:
            return $1500da26cef85c66$var$SEVEN_DAYS;
    }
};
var $1500da26cef85c66$export$ac706279630843b4 = function(calendars) {
    var result = {
    };
    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;
    try {
        for(var _iterator = calendars[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){
            var calendar = _step.value;
            result[calendar.id] = {
                color: {
                    light: calendar.color.light,
                    dark: calendar.color.dark
                }
            };
        }
    } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
    } finally{
        try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
            }
        } finally{
            if (_didIteratorError) {
                throw _iteratorError;
            }
        }
    }
    return result;
};
var $1500da26cef85c66$export$431753531f5fca31 = function(item) {
    return typeof item === 'string' ? $cw6c3$luxon.DateTime.fromISO(item) : item;
};
var $1500da26cef85c66$export$89694f4f8cea7fb = function(item) {
    return typeof item === 'string' ? item : item.toString();
};
var $1500da26cef85c66$export$8abac2236d14a91f = function(oldIndex, newIndex) {
    return oldIndex === 0 && newIndex === 1 || oldIndex === 1 && newIndex === 2 || oldIndex === 2 && newIndex === 0;
};
var $1500da26cef85c66$export$77c6031193b02723 = function(calendarView) {
    switch(calendarView){
        case $e4750b0ebeed8e48$export$ec9758e21af63072.MONTH:
            return 15;
        case $e4750b0ebeed8e48$export$ec9758e21af63072.AGENDA:
            return 15;
        case $e4750b0ebeed8e48$export$ec9758e21af63072.WEEK:
            return 2;
        case $e4750b0ebeed8e48$export$ec9758e21af63072.THREE_DAYS:
            return 0;
        case $e4750b0ebeed8e48$export$ec9758e21af63072.DAY:
            return 0;
        default:
            return 2;
    }
};
var $1500da26cef85c66$var$getReferenceDate = function(direction, calendarView, calendarDays) {
    if (direction === $e4750b0ebeed8e48$export$c2bed76d77ee7287.TODAY) return $cw6c3$luxon.DateTime.now();
    if (calendarView === $e4750b0ebeed8e48$export$ec9758e21af63072.THREE_DAYS) {
        if (direction === $e4750b0ebeed8e48$export$c2bed76d77ee7287.FORWARD) return $bf7b38bce41ca3dd$export$126fc096895fc6f5(calendarDays).plus({
            days: 1
        });
        else return $bf7b38bce41ca3dd$export$4be7a748c9766cf9(calendarDays).minus({
            days: 3
        });
    }
    if (calendarView === $e4750b0ebeed8e48$export$ec9758e21af63072.WEEK || calendarView === $e4750b0ebeed8e48$export$ec9758e21af63072.DAY) {
        if (direction === $e4750b0ebeed8e48$export$c2bed76d77ee7287.FORWARD) return $bf7b38bce41ca3dd$export$126fc096895fc6f5(calendarDays).plus({
            days: 1
        });
        else return $bf7b38bce41ca3dd$export$4be7a748c9766cf9(calendarDays).minus({
            days: 1
        });
    }
    if (calendarView === $e4750b0ebeed8e48$export$ec9758e21af63072.MONTH || calendarView === $e4750b0ebeed8e48$export$ec9758e21af63072.AGENDA) {
        if (direction === $e4750b0ebeed8e48$export$c2bed76d77ee7287.FORWARD) return calendarDays[15].plus({
            months: 1
        });
        else return calendarDays[15].minus({
            months: 1
        });
    }
    return $cw6c3$luxon.DateTime.now();
};
var $1500da26cef85c66$export$20dc9138dd5b1a6a = function(direction, calendarDays, calendarView, setSelectedDate) {
    return $1500da26cef85c66$export$e75d169fad6edf5f(calendarView, $1500da26cef85c66$var$getReferenceDate(direction, calendarView, calendarDays), setSelectedDate);
};


var $585762b051d85803$var$adjustForMinimalHeight = function(eventA, eventB) {
    var result = {
        eventA: $cw6c3$swchelpers.objectSpread({
        }, eventA),
        eventB: $cw6c3$swchelpers.objectSpread({
        }, eventB)
    };
    var eventADiff = $cw6c3$luxon.DateTime.fromISO(eventA.endAt).diff($cw6c3$luxon.DateTime.fromISO(eventA.startAt)).minutes;
    var eventBDiff = $cw6c3$luxon.DateTime.fromISO(eventB.endAt).diff($cw6c3$luxon.DateTime.fromISO(eventB.startAt)).minutes;
    if (eventADiff < $88a08af890f49243$export$eae15a231de23f4a) result.eventA.endAt = $cw6c3$luxon.DateTime.fromISO(result.eventA.endAt).plus({
        minutes: $88a08af890f49243$export$eae15a231de23f4a - eventADiff
    });
    if (eventBDiff < $88a08af890f49243$export$eae15a231de23f4a) result.eventB.endAt = $cw6c3$luxon.DateTime.fromISO(result.eventB.endAt).plus({
        minutes: $88a08af890f49243$export$eae15a231de23f4a - eventBDiff
    });
    return result;
};
var $585762b051d85803$export$6a8cd07afb93412f = function(events, baseWidth, defaultTimezone, hourHeight, selectedView) {
    var result = [];
    var offsetCount = []; //Store every event id of overlapping items
    var offsetCountFinal; //Sort events by id number
    var tableWidth = baseWidth / $1500da26cef85c66$export$f16d393a3268e3f3(selectedView);
    var tableSpace = tableWidth / 100 * $88a08af890f49243$export$b4e2ba6756dec2c;
    if (events) // Filter all day events and multi day events
    events.filter(function(item) {
        return !item.allDay && // @ts-ignore
        $28306200f69a6328$export$6c2618c4afcf6cfb(item.endAt, item.timezoneStart, defaultTimezone).diff($28306200f69a6328$export$6c2618c4afcf6cfb(item.startAt, item.timezoneStart, defaultTimezone), 'days').toObject().days < 1;
    }).map(function(event) {
        var width = 1; //Full width
        var offsetLeft = 0;
        // Compare events
        events.forEach(function(item2) {
            if (event.id !== item2.id && !item2.allDay) {
                // adjust events to have at least minimal height to check
                // overlapping
                var ref = $585762b051d85803$var$adjustForMinimalHeight(event, item2), eventA = ref.eventA, eventB = ref.eventB;
                if ($585762b051d85803$export$c212dd23f1f0a1e3(eventA, eventB) && // @ts-ignore
                $28306200f69a6328$export$6c2618c4afcf6cfb(eventB.endAt, eventB.timezoneStart, defaultTimezone).diff($28306200f69a6328$export$6c2618c4afcf6cfb(eventB.startAt, eventB.timezoneStart, defaultTimezone), 'days').toObject().days < 1) {
                    width = width + 1; //add width for every overlapping item
                    offsetCount.push(item2.id); // set offset for positioning
                    offsetCount.push(event.id); // set offset for positioning
                }
            }
        });
        var offsetTop = // @ts-ignore
        $28306200f69a6328$export$6c2618c4afcf6cfb(event.startAt, event.timezoneStart, defaultTimezone).diff($28306200f69a6328$export$6c2618c4afcf6cfb(event.startAt, event.timezoneStart, defaultTimezone).set({
            hour: 0,
            minute: 0,
            second: 0
        }), 'minutes').toObject().minutes / (60 / hourHeight); // adjust based on hour column height
        var eventHeight = // @ts-ignore
        $28306200f69a6328$export$6c2618c4afcf6cfb(event.endAt, event.timezoneStart).diff($28306200f69a6328$export$6c2618c4afcf6cfb(event.startAt, event.timezoneStart), 'minutes').toObject().minutes / (60 / hourHeight); // adjust based on hour column height
        var eventWidth = tableWidth / width;
        //sort items for proper calculations of offset by id
        // prevent different order in loop
        if (offsetCount.length > 0) offsetCountFinal = offsetCount.sort();
        if (offsetCountFinal) offsetLeft = eventWidth * offsetCountFinal.indexOf(event.id); //count offset
        //event.left
        // Current status: events is displayed in wrong place
        offsetCount = [];
        offsetCountFinal = '';
        result.push({
            event: event,
            height: eventHeight < $88a08af890f49243$export$eae15a231de23f4a ? $88a08af890f49243$export$eae15a231de23f4a : eventHeight,
            width: eventWidth,
            offsetLeft: offsetLeft,
            offsetTop: offsetTop,
            zIndex: 2,
            meta: {
                isFullWidth: width === 1,
                showTime: eventWidth >= $88a08af890f49243$export$81f0fddb54debad3 && eventHeight >= $88a08af890f49243$export$81f0fddb54debad3,
                centerText: eventHeight <= $88a08af890f49243$export$81f0fddb54debad3
            }
        });
    });
    var partialResult = result.map(function(item, index) {
        var ref;
        // full event width
        if ((ref = item.meta) === null || ref === void 0 ? void 0 : ref.isFullWidth) return $cw6c3$swchelpers.objectSpread({
        }, item, {
            width: Math.round(item.width - tableSpace)
        });
        else if (item.offsetLeft > 0) return $cw6c3$swchelpers.objectSpread({
        }, item, {
            width: Math.round(item.width),
            offsetLeft: item.offsetLeft - tableSpace,
            zIndex: item.zIndex ? item.zIndex + 2 : 2
        });
        else return $cw6c3$swchelpers.objectSpread({
        }, item, {
            width: Math.round(item.width)
        });
    });
    return partialResult;
};
var $585762b051d85803$export$c212dd23f1f0a1e3 = function(eventA, eventB) {
    var startAtFirst = $cw6c3$luxon.DateTime.fromISO(eventA.startAt);
    var endAtFirst = $cw6c3$luxon.DateTime.fromISO(eventA.endAt);
    return $cw6c3$luxon.Interval.fromDateTimes(startAtFirst, endAtFirst).overlaps($cw6c3$luxon.Interval.fromDateTimes($cw6c3$luxon.DateTime.fromISO(eventB.startAt), $cw6c3$luxon.DateTime.fromISO(eventB.endAt)));
};
var $585762b051d85803$export$f917769c218c90fd = function(event, day) {
    var dateStart = $28306200f69a6328$export$6c2618c4afcf6cfb(event.startAt, event.timezoneStart);
    var dateEnd = $28306200f69a6328$export$6c2618c4afcf6cfb(event.endAt, event.timezoneStart);
    var dayTruncated = $1500da26cef85c66$export$431753531f5fca31(day).set({
        hour: 0,
        minute: 0,
        millisecond: 0,
        second: 0
    }).toMillis();
    var eventStartTruncated = dateStart.set({
        hour: 0,
        minute: 0,
        millisecond: 0,
        second: 0
    }).toMillis();
    var eventEndTruncated = dateEnd.set({
        hour: 0,
        minute: 0,
        millisecond: 0,
        second: 0
    }).toMillis();
    // fix wrong positioning when external all day event ends in next day
    if (event.externalID) return dayTruncated >= eventStartTruncated && dayTruncated < eventEndTruncated;
    else return dayTruncated >= eventStartTruncated && dayTruncated <= eventEndTruncated;
};
var $585762b051d85803$export$3a6eb9efca632dee = function(event, days) {
    var hasMatch = false;
    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;
    try {
        for(var _iterator = days[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){
            var day = _step.value;
            if ($585762b051d85803$export$f917769c218c90fd(event, day)) {
                hasMatch = true;
                return true;
            // return false;
            }
        }
    } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
    } finally{
        try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
            }
        } finally{
            if (_didIteratorError) {
                throw _iteratorError;
            }
        }
    }
    return hasMatch;
};











var $8304c40ecd0ca62c$var$EventSummary = function(props) {
    var isDark = props.isDark, summary = props.summary, type = props.type;
    return(/*#__PURE__*/ $cw6c3$reactjsxruntime.jsxs("p", {
        className: "Calend__text ".concat($bf7b38bce41ca3dd$export$b7a9dbebc395fc65('Calend__Event__summary', isDark), " Calend__Event__summary__type-").concat(type),
        children: [
            summary,
            ' '
        ]
    }));
};
var $8304c40ecd0ca62c$export$2e2bcd8739ae039 = $8304c40ecd0ca62c$var$EventSummary;


var $e4c1f2269414489f$var$EventMonth = function(props) {
    var isDark = props.isDark, event = props.event, type = props.type;
    return(/*#__PURE__*/ $cw6c3$reactjsxruntime.jsx($8304c40ecd0ca62c$export$2e2bcd8739ae039, {
        summary: event.summary,
        isDark: isDark,
        type: type
    }));
};
var $e4c1f2269414489f$export$2e2bcd8739ae039 = $e4c1f2269414489f$var$EventMonth;















// tslint:disable-next-line:cyclomatic-complexity
var $e7acfb653c6fbfca$var$Reducer = function(state, action) {
    switch(action.type){
        case 'events':
            return $cw6c3$swchelpers.objectSpread({
            }, state, {
                events: action.payload
            });
        case 'initialView':
            return $cw6c3$swchelpers.objectSpread({
            }, state, {
                initialView: action.payload
            });
        case 'selectedView':
            return $cw6c3$swchelpers.objectSpread({
            }, state, {
                selectedView: action.payload
            });
        case 'isMobile':
            return $cw6c3$swchelpers.objectSpread({
            }, state, {
                isMobile: action.payload
            });
        case 'selectedDate':
            return $cw6c3$swchelpers.objectSpread({
            }, state, {
                selectedDate: action.payload
            });
        case 'hourHeight':
            return $cw6c3$swchelpers.objectSpread({
            }, state, {
                hourHeight: action.payload
            });
        case 'calendarDays':
            return $cw6c3$swchelpers.objectSpread({
            }, state, {
                calendarDays: action.payload
            });
        case 'isLoading':
            return $cw6c3$swchelpers.objectSpread({
            }, state, {
                isLoading: action.payload
            });
        case 'width':
            return $cw6c3$swchelpers.objectSpread({
            }, state, {
                width: action.payload
            });
        case 'height':
            return $cw6c3$swchelpers.objectSpread({
            }, state, {
                height: action.payload
            });
        case 'isDark':
            return $cw6c3$swchelpers.objectSpread({
            }, state, {
                isDark: action.payload
            });
        case 'timezone':
            return $cw6c3$swchelpers.objectSpread({
            }, state, {
                timezone: action.payload
            });
        case 'headerEventRowsCount':
            return $cw6c3$swchelpers.objectSpread({
            }, state, {
                headerEventRowsCount: action.payload
            });
        default:
            return state;
    }
};
var $e7acfb653c6fbfca$export$2e2bcd8739ae039 = $e7acfb653c6fbfca$var$Reducer;




var $65553fbba1d6d65b$var$initialContext = {
    isDark: false,
    isLoading: false,
    headerEventRowsCount: 0,
    events: {
    },
    initialView: null,
    selectedView: null,
    selectedDate: $cw6c3$luxon.DateTime.now(),
    hourHeight: $88a08af890f49243$export$1c9a1263a0d343f4 + 40,
    calendarDays: [],
    width: 0,
    height: 0,
    isMobile: false,
    timezone: ''
};
var $65553fbba1d6d65b$var$StoreProvider = function(param) {
    var children = param.children;
    var ref = $cw6c3$swchelpers.slicedToArray($cw6c3$react.useReducer($e7acfb653c6fbfca$export$2e2bcd8739ae039, $65553fbba1d6d65b$var$initialContext), 2), store = ref[0], dispatch = ref[1];
    return(/*#__PURE__*/ $cw6c3$reactjsxruntime.jsx($65553fbba1d6d65b$export$841858b892ce1f4c.Provider, {
        value: [
            store,
            dispatch
        ],
        children: children
    }));
};
var $65553fbba1d6d65b$export$841858b892ce1f4c = /*#__PURE__*/ $cw6c3$react.createContext();
var $65553fbba1d6d65b$export$2e2bcd8739ae039 = $65553fbba1d6d65b$var$StoreProvider;


var $5293df8efc30aa85$var$TIME_FORMAT = 'HH:mm';
var $5293df8efc30aa85$var$formatEventTime = function(event) {
    var startAt = event.startAt, endAt = event.endAt, timezoneStart = event.timezoneStart;
    var startAtDateTime = $28306200f69a6328$export$6c2618c4afcf6cfb(startAt, timezoneStart);
    var endAtDateTime = $28306200f69a6328$export$6c2618c4afcf6cfb(endAt, timezoneStart);
    return "".concat(startAtDateTime.toFormat($5293df8efc30aa85$var$TIME_FORMAT), " - ").concat(endAtDateTime.toFormat($5293df8efc30aa85$var$TIME_FORMAT));
};
var $5293df8efc30aa85$var$formatEventTimeV2 = function(event, timezone) {
    var startAt = event.startAt, endAt = event.endAt, timezoneStart = event.timezoneStart;
    var startAtDateTime = $28306200f69a6328$export$6c2618c4afcf6cfb(startAt, timezoneStart, timezone);
    var endAtDateTime = $28306200f69a6328$export$6c2618c4afcf6cfb(endAt, timezoneStart, timezone);
    return {
        start: "".concat(startAtDateTime.toFormat($5293df8efc30aa85$var$TIME_FORMAT)),
        end: "".concat(endAtDateTime.toFormat($5293df8efc30aa85$var$TIME_FORMAT))
    };
};
var $5293df8efc30aa85$var$EventTime = function(props) {
    var isDark = props.isDark, event = props.event, type = props.type;
    var ref = $cw6c3$swchelpers.slicedToArray($cw6c3$react.useContext($65553fbba1d6d65b$export$841858b892ce1f4c), 1), store = ref[0];
    var timezone = store.timezone;
    var timeV2 = $5293df8efc30aa85$var$formatEventTimeV2(event, timezone);
    // const time: string = formatEventTime(event);
    return(/*#__PURE__*/ $cw6c3$reactjsxruntime.jsxs("p", {
        className: "Calend__text ".concat($bf7b38bce41ca3dd$export$b7a9dbebc395fc65('Calend__Event__time', isDark), " Calend__Event__time__type-").concat(type),
        children: [
            timeV2.start,
            " - ",
            timeV2.end
        ]
    }));
};
var $5293df8efc30aa85$export$2e2bcd8739ae039 = $5293df8efc30aa85$var$EventTime;


var $05400c9842705755$var$EventNormal = function(props) {
    var isDark = props.isDark, event = props.event, type = props.type, meta = props.meta;
    return(/*#__PURE__*/ $cw6c3$reactjsxruntime.jsxs("div", {
        style: {
            display: 'flex',
            flexDirection: 'column',
            maxWidth: '-webkit-fill-available'
        },
        children: [
            /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx($8304c40ecd0ca62c$export$2e2bcd8739ae039, {
                summary: event.summary,
                isDark: isDark,
                type: type
            }),
            (meta === null || meta === void 0 ? void 0 : meta.showTime) ? /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx($5293df8efc30aa85$export$2e2bcd8739ae039, {
                isDark: isDark,
                event: event,
                type: $e4750b0ebeed8e48$export$76a2e4c433c23bb9.NORMAL
            }) : null
        ]
    }));
};
var $05400c9842705755$export$2e2bcd8739ae039 = $05400c9842705755$var$EventNormal;






var $82d351ff4940fae4$var$EventAgenda = function(props) {
    var isDark = props.isDark, event = props.event, type = props.type;
    return(/*#__PURE__*/ $cw6c3$reactjsxruntime.jsxs("div", {
        className: 'Calend__EventAgenda__container',
        children: [
            /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx($8304c40ecd0ca62c$export$2e2bcd8739ae039, {
                summary: event.summary,
                isDark: isDark,
                type: type
            }),
            /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx($5293df8efc30aa85$export$2e2bcd8739ae039, {
                isDark: isDark,
                event: event,
                type: type
            })
        ]
    }));
};
var $82d351ff4940fae4$export$2e2bcd8739ae039 = $82d351ff4940fae4$var$EventAgenda;






var $f7dc25aaa4235907$var$timeout;
var $f7dc25aaa4235907$var$ButtonBase = function(props) {
    var id = props.id, onClick = props.onClick, text = props.text, className = props.className, style1 = props.style, isDark = props.isDark, children = props.children, propagation = props.propagation, disabled = props.disabled, onClickFromParent = props.onClickFromParent;
    var buttonRef = $cw6c3$react.useRef(null);
    var ref = $cw6c3$swchelpers.slicedToArray($cw6c3$react.useState(false), 2), isPressed = ref[0], setIsPressed = ref[1];
    var ref1 = $cw6c3$swchelpers.slicedToArray($cw6c3$react.useState({
    }), 2), spanStyle = ref1[0], setSpanStyle = ref1[1];
    var onButtonClick = function(e) {
        onClick(e);
        if (onClickFromParent) onClickFromParent();
    };
    var animateRipple = function(event) {
        var button = buttonRef.current;
        if (!button) return;
        var rect = button.getBoundingClientRect();
        var oneSide = button.clientWidth > button.clientHeight ? button.clientWidth : button.clientHeight;
        var touches = event.touches ? event.touches[0] : undefined;
        var clickLeft;
        var clickTop;
        if (touches) {
            clickLeft = touches.clientX - rect.left - oneSide;
            clickTop = touches.clientY - rect.top - oneSide;
        } else {
            clickLeft = event.clientX;
            clickTop = event.clientY;
        }
        var style = {
            width: "".concat(oneSide * 2, "px"),
            height: "".concat(oneSide * 2, "px"),
            left: "".concat(clickLeft, "px"),
            top: "".concat(clickTop, "px")
        };
        setSpanStyle(style);
        setIsPressed(true);
    };
    var onTouchStart = function(e) {
        if (!propagation) e.stopPropagation();
        // e.preventDefault();
        if (isPressed) setIsPressed(false);
        $f7dc25aaa4235907$var$timeout = setTimeout(function() {
            animateRipple(e);
        }, 100);
    };
    var handleTouchOff = function() {
        var timeout = setTimeout(function() {
            setIsPressed(false);
        }, 500);
    };
    // Clear timeout for ripple effect
    var onTouchMove = function(e) {
        if (!propagation) e.stopPropagation();
        // e.preventDefault();
        clearTimeout($f7dc25aaa4235907$var$timeout);
    };
    var buttonText = text ? text : '';
    var buttonClassName = className ? "Calend__button ".concat(className, " Calend__ButtonBase") : 'Calend__button Calend__ButtonBase';
    return(/*#__PURE__*/ $cw6c3$reactjsxruntime.jsxs("button", {
        id: id,
        ref: buttonRef,
        onClick: onButtonClick,
        onTouchMove: onTouchMove,
        onTouchStart: onTouchStart,
        // onTouchStart={handleTouchStart}
        // onMouseLeave={handleTouchOff}
        // onTouchEnd={handleTouchOff}
        // onTouchEndCapture={handleTouchCancel}
        className: buttonClassName,
        style: style1,
        children: [
            children ? children : buttonText,
            isPressed && !disabled ? /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx("span", {
                style: spanStyle,
                className: 'Calend__ButtonBase__animation'
            }) : null
        ]
    }));
};
var $f7dc25aaa4235907$export$2e2bcd8739ae039 = $f7dc25aaa4235907$var$ButtonBase;



var $b852c5f3008abacb$var$DEFAULT_EVENT_HEIGHT = 14;
var $b852c5f3008abacb$var$EventButton = function(props) {
    var event = props.event, eventWidth = props.eventWidth, offsetLeft = props.offsetLeft, offsetTop = props.offsetTop, _height = props.height, height = _height === void 0 ? $b852c5f3008abacb$var$DEFAULT_EVENT_HEIGHT : _height, type = props.type, handleEventClick = props.handleEventClick, zIndex = props.zIndex, meta = props.meta;
    var ref = $cw6c3$swchelpers.slicedToArray($cw6c3$react.useContext($65553fbba1d6d65b$export$841858b892ce1f4c), 1), store = ref[0];
    var isDark = store.isDark;
    var eventColor = $1500da26cef85c66$export$2d5ed1e6bc597003(event.color, isDark);
    var ref1 = $cw6c3$swchelpers.slicedToArray($cw6c3$react.useState(0), 2), heightTest = ref1[0], setHeight = ref1[1];
    var style = {
        position: type === $e4750b0ebeed8e48$export$76a2e4c433c23bb9.MONTH || type === $e4750b0ebeed8e48$export$76a2e4c433c23bb9.AGENDA ? 'relative' : 'absolute',
        height: heightTest,
        width: eventWidth,
        top: offsetTop ? offsetTop : 0,
        left: offsetLeft ? offsetLeft : 0,
        // borderColor: eventColor,
        zIndex: zIndex,
        border: zIndex > 2 ? "solid 1px white" : "solid 1px ".concat(eventColor),
        backgroundColor: /*dragging ? 'blue' : */ eventColor
    };
    var onEventClick = function(e) {
        e.preventDefault();
        e.stopPropagation();
        handleEventClick(event);
    // history.push(`/${APP_PATH.EVENT_VIEW}/${event.id}`);
    };
    $cw6c3$react.useEffect(function() {
        setHeight(height);
    }, []);
    return(/*#__PURE__*/ $cw6c3$reactjsxruntime.jsxs($f7dc25aaa4235907$export$2e2bcd8739ae039, {
        isDark: isDark,
        //Dragging func {...panResponder.panHandlers}
        style: style,
        className: "Calend__Event-".concat(type),
        onClick: onEventClick,
        children: [
            type === $e4750b0ebeed8e48$export$76a2e4c433c23bb9.MONTH || type === $e4750b0ebeed8e48$export$76a2e4c433c23bb9.HEADER ? /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx($e4c1f2269414489f$export$2e2bcd8739ae039, {
                event: event,
                isDark: isDark,
                type: type
            }) : null,
            type === $e4750b0ebeed8e48$export$76a2e4c433c23bb9.NORMAL ? /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx($05400c9842705755$export$2e2bcd8739ae039, {
                event: event,
                isDark: isDark,
                type: type,
                meta: meta
            }) : null,
            type === $e4750b0ebeed8e48$export$76a2e4c433c23bb9.AGENDA ? /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx($82d351ff4940fae4$export$2e2bcd8739ae039, {
                event: event,
                isDark: isDark,
                type: type
            }) : null
        ]
    }));
};
var $b852c5f3008abacb$export$2e2bcd8739ae039 /**
 TODO dragging
 //
 // const getNewOffset = (
 //   currentIndex: any,
 //   clientXRaw: any,
 //   width: any,
 //   daysNum: any,
 //   setState: any
 // ) => {
//   let widthCalendar: any = width - 40; //minus hours column
//   let clientX: any = clientXRaw - 40; //follow mouse but minus right menu
//   let oneDay: any = width / daysNum;
//   let newIndex: any; //index of column under mouse
//   //for desktop
//   if (clientX > 0 && clientX < oneDay) {
//     newIndex = 1;
//   } else if (clientX > oneDay && clientX < 2 * oneDay) {
//     newIndex = 2;
//   } else if (clientX > 2 * oneDay && clientX < 3 * oneDay) {
//     newIndex = 3;
//   } else if (clientX > 3 * oneDay && clientX < 4 * oneDay) {
//     newIndex = 4;
//   } else if (clientX > 4 * oneDay && clientX < 5 * oneDay) {
//     newIndex = 5;
//   } else if (clientX > 5 * oneDay && clientX < 6 * oneDay) {
//     newIndex = 6;
//   } else if (clientX < 0) {
//     newIndex = 0;
//   }
//   let newOffset;
//   if (currentIndex > newIndex) {
//     //moving left
//     // current index is 4, so when moving to begining, index 1, I need to set  as 0 - (3 * width of one day)
//     // current index is 4, so, index 2 has to be 0 - (2* one day)
//     if (newIndex === 0) {
//       newOffset = -(currentIndex * oneDay);
//     } else {
//       newOffset = -((currentIndex - newIndex) * oneDay);
//     }
//   } else if (newIndex > currentIndex) {
//     //moving right
//     newOffset = 0 + (newIndex - currentIndex) * oneDay;
//   } else if (newIndex === currentIndex) {
//   }
//   setState('offsetLeft', newOffset);
//   setState('newIndex', newIndex);
// };

 const initialState: any = {
  dragging: false,
  initialTop: 0,
  initialLeft: 0,
  offsetTop: 0,
  offsetLeft: 0,
  xPosition: 0,
  //TEMP
  drawingX: 102,
  drawingY: '',
  dayWidth: 102,
  newTime: '',
  currentIndex: '',
  newIndex: '',
  dateFrom: '',
  eventHasChanged: false,
};

 interface CalendarEventProps {
  offsetTop: number;
  offsetLeft: number;
  index: number;
  colorName: string;
  isDark: boolean;
  eventHeight: number;
  eventWidth: number;
  event: any;
}
 const CalendarEvent = (props: CalendarEventProps) => {
  const [state, dispatchState] = useReducer(stateReducer, initialState);

  const {
    offsetTop,
    offsetLeft,
    index,
    colorName,
    isDark,
    eventHeight,
    eventWidth,
    event,
  } = props;
  const { startAt } = event;

  const setState = (type: any, payload: any) => {
    // @ts-ignore
    dispatchState({ type, payload });
  };

  const history: any = useHistory();

  useEffect(() => {
    initStatPosition();
  }, []);

  const initStatPosition = () => {
    setState('initialTop', offsetTop);
    setState('initialLeft', offsetLeft);
    setState('offsetTop', offsetTop);
    setState('offsetLeft', offsetLeft);
    setState('drawingY', offsetTop);
    setState('currentIndex', index);
    setState('startAt', startAt);
  };

  //
  // const getNewTime = (offsetTop) => {
  //   //hour * minutes / 1.5 is offsetTop
  //   let newTime = offsetTop * 1.5;
  //   let dateFrom = parse(props.event.dateFrom);
  //   let dateNow;
  //   if (state.currentIndex === state.newIndex) {
  //     dateNow = dateFrom;
  //   } else if (state.currentIndex > state.newIndex) {
  //     //move left, sub days
  //     dateNow = subDays(dateFrom, state.currentIndex - state.newIndex);
  //   } else if (state.currentIndex < state.newIndex) {
  //     //move right, add days
  //     dateNow = addDays(dateFrom, state.newIndex - state.currentIndex);
  //   }
  //   let newDateFrom = addMinutes(
  //     parse(
  //       new Date(getYear(dateNow), getMonth(dateNow), getDate(dateNow), 0, 0, 0)
  //     ),
  //     newTime
  //   );
  //   let hour = parseInt(newTime / 60);
  //   let minutesString = (newTime % 60).toString().slice(0, 1);
  //   let minutes = 60 * parseFloat('0.' + minutesString);
  //
  //   let newDifferenceInMinutes = differenceInMinutes(
  //     parse(props.event.dateTill),
  //     parse(props.event.dateFrom)
  //   );
  //
  //   let newDateTill = addMinutes(newDateFrom, newDifferenceInMinutes);
  //   setState({ dateFrom: newDateFrom, dateTill: newDateTill });
  //   return newTime;
  // };
  //
  // const onMove = (e) => {
  //   if (!state.eventHasChanged) {
  //     setState({ eventHasChanged: true });
  //   }
  //   let screenWidth = e.screenX;
  //   let screenHeight = e.screenY;
  //   let daysNum = 7;
  //   let drawingX = state.drawingX;
  //   let clientX = e.clientX;
  //
  //   let currentIndex = props.index;
  //
  //   setState('offsetTop', state.offsetTop + e.movementY);
  //   getNewOffset(currentIndex, clientX, width, daysNum, setState);
  //   getNewTime(state.offsetTop);
  // };
  //
  // const onMouseDown = (e) => {
  //   e.preventDefault();
  //   e.stopPropagation();
  //   if (e.button !== 0) return;
  //   document.addEventListener('mousemove', onMouseMove);
  //   document.addEventListener('mouseup', onMouseUp);
  // };
  //
  // const onMouseUp = (e) => {
  //   e.preventDefault();
  //   e.stopPropagation();
  //   if (state.eventHasChanged) {
  //     editEvent();
  //   }
  //   document.removeEventListener('mousemove', onMouseMove);
  //   document.removeEventListener('mouseup', onMouseUp);
  //   setTimeout(() => {
  //     setState('dragging', false);
  //     setState('eventHasChanged', false);
  //   }, 0);
  // };
  //
  // const onMouseMove = (e) => {
  //   if (!state.dragging) {
  //     setState('dragging', true);
  //   }
  //   onMove(e);
  //   e.preventDefault();
  //   e.stopPropagation();
  // };
  const colorObj: any = calendarColors[colorName ? colorName : 'indigo'];
  const colorCode: string = isDark ? colorObj.dark : colorObj.light;

  const handleEventSelect = (e: any) => {
    e.preventDefault();
    e.stopPropagation();
    history.push(`/event/${event.id}`);
  };

  const style = {
    height: eventHeight - 2,
    width: eventWidth,
    borderWidth: 1,
    borderColor: colorCode,
    opacity: 1, //0.4,
    backgroundColor: colorCode,
    top: props.offsetTop,
    left: props.offsetLeft,
    boxShadow: state.dragging
      ? '0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22)'
      : '',
  };
**/  = $b852c5f3008abacb$var$EventButton;




var $17d79b7922eec8b8$var$renderEvents = function(dataset, baseWidth, defaultTimezone, selectedView, hourHeight, handleEventClick) {
    var calculatedResults = $585762b051d85803$export$6a8cd07afb93412f(dataset, baseWidth, defaultTimezone, hourHeight, selectedView);
    return calculatedResults.map(function(item) {
        /*#__PURE__*/ return $cw6c3$reactjsxruntime.jsx($b852c5f3008abacb$export$2e2bcd8739ae039, {
            height: item.height,
            offsetTop: item.offsetTop,
            eventWidth: item.width,
            offsetLeft: item.offsetLeft,
            event: item.event,
            type: $e4750b0ebeed8e48$export$76a2e4c433c23bb9.NORMAL,
            handleEventClick: handleEventClick,
            zIndex: item.zIndex,
            meta: item.meta
        }, item.event.id);
    });
};
var $17d79b7922eec8b8$var$DaysViewOneDay = function(props) {
    var day = props.day, index = props.index, data = props.data, handleNewEventClick = props.handleNewEventClick, handleEventClick = props.handleEventClick;
    var ref = $cw6c3$swchelpers.slicedToArray($cw6c3$react.useContext($65553fbba1d6d65b$export$841858b892ce1f4c), 1), store = ref[0];
    var isDark = store.isDark, width = store.width, selectedView = store.selectedView, hourHeight = store.hourHeight, timezone = store.timezone;
    var oneDayStyle = {
        width: width / $1500da26cef85c66$export$f16d393a3268e3f3(selectedView),
        height: hourHeight * 24
    };
    var isToday = $d49542164c9bae14$export$2e2bcd8739ae039.isToday(day);
    var isFirstDay = index === 0;
    var dataForDay = data;
    var dateNow = $cw6c3$luxon.DateTime.local();
    var nowPosition = dateNow.diff($cw6c3$luxon.DateTime.local().set({
        hour: 0,
        minute: 0,
        second: 0
    }), 'minutes').toObject().minutes / (60 / hourHeight);
    $cw6c3$react.useEffect(function() {
        if (isToday) {
            var elements = document.querySelectorAll('.calendar-body__wrapper');
            var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;
            try {
                for(var _iterator = elements[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){
                    var element = _step.value;
                    element.scrollTo({
                        top: nowPosition - 40,
                        behavior: 'smooth'
                    });
                }
            } catch (err) {
                _didIteratorError = true;
                _iteratorError = err;
            } finally{
                try {
                    if (!_iteratorNormalCompletion && _iterator.return != null) {
                        _iterator.return();
                    }
                } finally{
                    if (_didIteratorError) {
                        throw _iteratorError;
                    }
                }
            }
        }
    }, []);
    var eventNodes = $17d79b7922eec8b8$var$renderEvents(dataForDay, width, timezone, selectedView, hourHeight, handleEventClick);
    var handleEventClickInternal = function(event) {
        var rect = event.target.getBoundingClientRect();
        var y = event.clientY - rect.top;
        // Get hour from click event
        var hour = y / hourHeight;
        handleNewEventClick({
            day: day.toJSDate(),
            hour: hour,
            event: event
        });
    };
    return(/*#__PURE__*/ $cw6c3$reactjsxruntime.jsx("div", {
        style: oneDayStyle,
        className: !isFirstDay ? $bf7b38bce41ca3dd$export$b7a9dbebc395fc65('Calend__DayViewOneDay Calend__DayViewOneDay__border-left', isDark) : 'Calend__DayViewOneDay',
        onClick: handleEventClickInternal,
        children: dataForDay && dataForDay.length > 0 ? eventNodes : null
    }, day.toString()));
};
var $17d79b7922eec8b8$export$2e2bcd8739ae039 = $17d79b7922eec8b8$var$DaysViewOneDay;









var $db9a28e0bd6328b4$var$renderHours = function(width, hourHeight, isDark) {
    return $88a08af890f49243$export$418e7590fd81e209.map(function(hour) {
        return hour === '00' || hour === '24' ? /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx("div", {
            className: 'Calend__CalendarBodyHours__container',
            style: {
                minHeight: hourHeight
            }
        }, hour) : /*#__PURE__*/ $cw6c3$reactjsxruntime.jsxs("div", {
            className: 'Calend__CalendarBodyHours__container',
            style: {
                minHeight: hourHeight
            },
            children: [
                /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx("p", {
                    className: $bf7b38bce41ca3dd$export$b7a9dbebc395fc65('Calend__text Calend__CalendarBodyHours__text', isDark),
                    children: hour
                }),
                /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx("div", {
                    className: $bf7b38bce41ca3dd$export$b7a9dbebc395fc65('Calend__text Calend__CalendarBodyHours__line', isDark),
                    style: {
                        width: width - $88a08af890f49243$export$447c5938f45c45a5
                    }
                })
            ]
        }, hour);
    });
};
var $db9a28e0bd6328b4$var$CalendarBodyHours = function() {
    var ref = $cw6c3$swchelpers.slicedToArray($cw6c3$react.useContext($65553fbba1d6d65b$export$841858b892ce1f4c), 1), store = ref[0];
    var width = store.width, height = store.height, hourHeight = store.hourHeight, isDark = store.isDark;
    var hours = $db9a28e0bd6328b4$var$renderHours(width, hourHeight, isDark);
    return(/*#__PURE__*/ $cw6c3$reactjsxruntime.jsx("div", {
        className: 'Calend__CalendarBodyHours__wrapper',
        style: {
            height: height
        },
        children: hours
    }));
};
var $db9a28e0bd6328b4$export$2e2bcd8739ae039 = $db9a28e0bd6328b4$var$CalendarBodyHours;



var $be26fc4a0d3aa4a6$var$renderOneDay = function(calendarDays, handleNewEventClick, events, handleEventClick) {
    return calendarDays.map(function(day, index) {
        var formattedDayString = $bf7b38bce41ca3dd$export$f5a7c490b6f9fbc4(day);
        return(/*#__PURE__*/ $cw6c3$reactjsxruntime.jsx($17d79b7922eec8b8$export$2e2bcd8739ae039, {
            day: day,
            index: index,
            data: events ? events[formattedDayString] : [],
            handleNewEventClick: handleNewEventClick,
            handleEventClick: handleEventClick
        }, day.toString()));
    });
};
var $be26fc4a0d3aa4a6$var$DaysViewTable = function(props) {
    var handleNewEventClick = props.handleNewEventClick, handleEventClick = props.handleEventClick;
    var ref = $cw6c3$swchelpers.slicedToArray($cw6c3$react.useContext($65553fbba1d6d65b$export$841858b892ce1f4c), 1), store = ref[0];
    var hourHeight = store.hourHeight, calendarDays = store.calendarDays, width = store.width, height = store.height, events = store.events, selectedView = store.selectedView;
    var headerEventRowsCount = 0;
    var days = $be26fc4a0d3aa4a6$var$renderOneDay(calendarDays, handleNewEventClick, events, handleEventClick);
    var style = {
        paddingLeft: $88a08af890f49243$export$447c5938f45c45a5,
        width: width,
        height: height
    };
    /**
   * Adjust scroll position for all screens
   * @param currentIndex
   */ var setCurrentOffset = function() {
        var currentElement = document.getElementById("Calend__timetable");
        // Have to set middle clone for last screen manually to get correct current offset
        var currentOffset = currentElement.scrollTop;
        // Need to select with query selector as byId doesn't select clones
        var elements = document.querySelectorAll('.calendar-body__wrapper');
        var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;
        try {
            for(var _iterator = elements[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){
                var element = _step.value;
                element.scrollTop = currentOffset;
            }
        } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
        } finally{
            try {
                if (!_iteratorNormalCompletion && _iterator.return != null) {
                    _iterator.return();
                }
            } finally{
                if (_didIteratorError) {
                    throw _iteratorError;
                }
            }
        }
    };
    var adjustScrollPosition = function() {
        var currentElement = document.getElementById("Calend__timetable");
        currentElement.scrollTop = $cw6c3$luxon.DateTime.now().hour * hourHeight - hourHeight;
    };
    // Debounce scroll function
    // Turn off for desktop layout as there is just one active screen
    // const handleScroll = _.debounce(() => {
    //   if (!isMobile) {
    //     return;
    //   }
    //   setCurrentOffset();
    // }, 50);
    $cw6c3$react.useEffect(function() {
        adjustScrollPosition();
    }, []);
    // const onPageChange = async (isGoingForward?: boolean) => {
    //   await getNewCalendarDays(calendarDays, selectedView, isGoingForward);
    // };
    return(// <Carousel onPageChange={onPageChange}>
    /*#__PURE__*/ $cw6c3$reactjsxruntime.jsxs("div", {
        style: style,
        className: 'Calend__CalendarBody',
        id: "Calend__timetable",
        children: [
            /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx($db9a28e0bd6328b4$export$2e2bcd8739ae039, {
            }),
            days
        ]
    }));
};
var $be26fc4a0d3aa4a6$export$2e2bcd8739ae039 = $be26fc4a0d3aa4a6$var$DaysViewTable;




var $2c4fe1f6b84a6784$export$3c49c185de0c2bfc = function() {
    var rootEl = document.querySelector('.Calend__Calendar__root');
    if (rootEl) return rootEl.clientWidth;
    return 0;
};
var $2c4fe1f6b84a6784$export$3aee49006f13db09 = function() {
    var ref = $cw6c3$swchelpers.slicedToArray($cw6c3$react.useState($2c4fe1f6b84a6784$export$3c49c185de0c2bfc()), 2), width = ref[0], setWidth = ref[1];
    // Get width on init
    $cw6c3$react.useEffect(function() {
        var listenToResizeEvent = function() {
            setWidth($2c4fe1f6b84a6784$export$3c49c185de0c2bfc());
        };
        window.addEventListener('resize', listenToResizeEvent);
        return function() {
            window.removeEventListener('resize', listenToResizeEvent);
        };
    }, []);
    return width;
};
var $2c4fe1f6b84a6784$export$c08559766941f856 = function() {
    var rootEl = document.querySelector('.Calend__Calendar__table');
    if (rootEl) return rootEl.clientHeight;
    return 0;
};
var $2c4fe1f6b84a6784$export$30dc190df7e420c4 = function() {
    var ref = $cw6c3$swchelpers.slicedToArray($cw6c3$react.useState($2c4fe1f6b84a6784$export$c08559766941f856()), 2), height = ref[0], setHeight = ref[1];
    // Get height on init
    $cw6c3$react.useEffect(function() {
        $2c4fe1f6b84a6784$export$c08559766941f856();
    }, []);
    $cw6c3$react.useEffect(function() {
        var listenToResizeEvent = function() {
            setHeight($2c4fe1f6b84a6784$export$c08559766941f856());
        };
        window.addEventListener('resize', listenToResizeEvent);
        return function() {
            window.removeEventListener('resize', listenToResizeEvent);
        };
    }, []);
    return height;
};




















var $0689dc746d054cae$var$DayOfWeekText = function(props) {
    var width = props.width, day = props.day;
    return(/*#__PURE__*/ $cw6c3$reactjsxruntime.jsx("div", {
        className: 'Calend__CalendarHeaderWeekDays__col',
        style: {
            width: width
        },
        children: /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx("p", {
            className: 'Calend__text Calend__CalendarHeaderWeekDays__text',
            children: day.toFormat('EEE')
        })
    }));
};
var $0689dc746d054cae$export$2e2bcd8739ae039 = $0689dc746d054cae$var$DayOfWeekText;


/**
 * Render text representation of days
 *
 * @param props
 * @constructor
 */ var $386a7bec00aa15a1$var$CalendarHeaderWeekDays = function(props) {
    var daysNum = props.daysNum, days = props.days;
    var ref = $cw6c3$swchelpers.slicedToArray($cw6c3$react.useContext($65553fbba1d6d65b$export$841858b892ce1f4c), 1), store = ref[0];
    var calendarDays = store.calendarDays, width = store.width, selectedView = store.selectedView;
    var isMonthView = selectedView === $e4750b0ebeed8e48$export$ec9758e21af63072.MONTH;
    var colWidth = width / daysNum;
    var renderDaysText = function() {
        var dayTextColumnWidth = {
            width: colWidth
        };
        if (isMonthView) return $1500da26cef85c66$export$933d53aed74a6ef0.map(function(day) {
            /*#__PURE__*/ return $cw6c3$reactjsxruntime.jsx("div", {
                className: 'Calend__CalendarHeaderWeekDays__col',
                style: dayTextColumnWidth,
                children: /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx("p", {
                    className: 'Calend__text Calend__CalendarHeaderWeekDays__text',
                    children: day
                })
            }, day);
        });
        return days.map(function(day) {
            /*#__PURE__*/ return $cw6c3$reactjsxruntime.jsx($0689dc746d054cae$export$2e2bcd8739ae039, {
                day: day,
                width: colWidth
            }, day.toString());
        });
    };
    var namesForDays = renderDaysText();
    return(/*#__PURE__*/ $cw6c3$reactjsxruntime.jsx("div", {
        className: 'Calend__CalendarHeaderWeekDays__wrapper',
        children: /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx("div", {
            className: 'Calend__CalendarHeaderWeekDays__container',
            children: namesForDays
        })
    }));
};
var $386a7bec00aa15a1$export$2e2bcd8739ae039 = $386a7bec00aa15a1$var$CalendarHeaderWeekDays;




var $9a525da4604d3f07$var$CalendarHeaderColText = function(props) {
    var children = props.children;
    return(/*#__PURE__*/ $cw6c3$reactjsxruntime.jsx("div", {
        className: 'Calend__CalendarHeaderColText__container',
        children: children
    }));
};
var $9a525da4604d3f07$export$2e2bcd8739ae039 = $9a525da4604d3f07$var$CalendarHeaderColText;












var $2a3380b4418c18d4$var$CalendarHeaderCol = function(props) {
    var children = props.children;
    var ref = $cw6c3$swchelpers.slicedToArray($cw6c3$react.useContext($65553fbba1d6d65b$export$841858b892ce1f4c), 1), store = ref[0];
    var isDark = store.isDark;
    return(/*#__PURE__*/ $cw6c3$reactjsxruntime.jsx("div", {
        className: $bf7b38bce41ca3dd$export$b7a9dbebc395fc65('Calend__CalendarHeaderCol', isDark),
        children: children
    }));
};
var $2a3380b4418c18d4$export$2e2bcd8739ae039 = $2a3380b4418c18d4$var$CalendarHeaderCol;









var $ecf585202d453fcb$var$DateWeekDay = function(props) {
    var isSelected = props.isSelected, width = props.width, day = props.day;
    var ref = $cw6c3$swchelpers.slicedToArray($cw6c3$react.useContext($65553fbba1d6d65b$export$841858b892ce1f4c), 1), store = ref[0];
    var isDark = store.isDark;
    var isDayToday = $d49542164c9bae14$export$2e2bcd8739ae039.isToday(day);
    return(/*#__PURE__*/ $cw6c3$reactjsxruntime.jsx("div", {
        className: 'Calend__CalendarHeaderDates__col',
        style: {
            width: width
        },
        children: /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx("div", {
            className: "Calend__CalendarHeaderDates__circle".concat(isDayToday ? '-today' : '').concat(isSelected ? '-selected' : '').concat(isDark ? '-dark' : ''),
            children: /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx("p", {
                className: "Calend__text Calend__CalendarHeaderDates__text".concat(isDayToday || isSelected ? '-today' : '').concat(isDark ? '-dark' : ''),
                children: day.day
            })
        })
    }));
};
var $ecf585202d453fcb$export$2e2bcd8739ae039 = $ecf585202d453fcb$var$DateWeekDay;


/**
 * Get numeric representation of days
 *
 * @param props
 * @constructor
 */ var $0c3afbe9f694dbf0$var$CalendarHeaderDates = function(props) {
    var ref = $cw6c3$swchelpers.slicedToArray($cw6c3$react.useContext($65553fbba1d6d65b$export$841858b892ce1f4c), 1), store = ref[0];
    var isDark = store.isDark, calendarDays = store.calendarDays, selectedDate = store.selectedDate, calendarView = store.calendarView, width = store.width;
    var daysNum = props.daysNum;
    var colWidth = width / daysNum;
    var renderNumericDays = function() {
        return calendarDays.map(function(day) {
            var isDayToday = $d49542164c9bae14$export$2e2bcd8739ae039.isToday(day);
            var isSelected = $d49542164c9bae14$export$2e2bcd8739ae039.isSameDay(day, selectedDate) && calendarView === $e4750b0ebeed8e48$export$ec9758e21af63072.DAY && !isDayToday;
            return(/*#__PURE__*/ $cw6c3$reactjsxruntime.jsx($ecf585202d453fcb$export$2e2bcd8739ae039, {
                width: colWidth,
                day: day,
                isSelected: isSelected
            }, day.toString()));
        });
    };
    var numericDays = renderNumericDays();
    return(/*#__PURE__*/ $cw6c3$reactjsxruntime.jsx($2a3380b4418c18d4$export$2e2bcd8739ae039, {
        children: /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx($9a525da4604d3f07$export$2e2bcd8739ae039, {
            children: numericDays
        })
    }));
};
var $0c3afbe9f694dbf0$export$2e2bcd8739ae039 = $0c3afbe9f694dbf0$var$CalendarHeaderDates;








var $a214409a8fa5f760$var$CalendarHeaderWrapper = function(props) {
    var children = props.children, isMonthView = props.isMonthView;
    var ref = $cw6c3$swchelpers.slicedToArray($cw6c3$react.useContext($65553fbba1d6d65b$export$841858b892ce1f4c), 1), store = ref[0];
    var isDark = store.isDark;
    var headerStyle = {
        paddingLeft: isMonthView ? 0 : $1500da26cef85c66$export$447c5938f45c45a5
    };
    return(/*#__PURE__*/ $cw6c3$reactjsxruntime.jsx("div", {
        className: $bf7b38bce41ca3dd$export$b7a9dbebc395fc65('Calend__CalendarHeaderCol', isDark),
        style: headerStyle,
        children: children
    }));
};
var $a214409a8fa5f760$export$2e2bcd8739ae039 = $a214409a8fa5f760$var$CalendarHeaderWrapper;



var $2d4e959c42b07254$var$CalendarHeaderDays = function(props) {
    var isMonthView = props.isMonthView;
    var ref = $cw6c3$swchelpers.slicedToArray($cw6c3$react.useContext($65553fbba1d6d65b$export$841858b892ce1f4c), 1), store = ref[0];
    var calendarDays = store.calendarDays, width = store.width;
    var daysNum = isMonthView ? 7 : calendarDays.length;
    return(/*#__PURE__*/ $cw6c3$reactjsxruntime.jsxs($a214409a8fa5f760$export$2e2bcd8739ae039, {
        isMonthView: isMonthView,
        children: [
            /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx($9a525da4604d3f07$export$2e2bcd8739ae039, {
                children: /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx($386a7bec00aa15a1$export$2e2bcd8739ae039, {
                    width: width,
                    daysNum: daysNum,
                    days: calendarDays
                })
            }),
            !isMonthView ? /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx($9a525da4604d3f07$export$2e2bcd8739ae039, {
                children: /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx($0c3afbe9f694dbf0$export$2e2bcd8739ae039, {
                    daysNum: daysNum
                })
            }) : null
        ]
    }));
};
var $2d4e959c42b07254$export$2e2bcd8739ae039 = $2d4e959c42b07254$var$CalendarHeaderDays;












var $c57d36d3233524f5$export$ebf0f5b49a0a9e59 = function(events, width, calendarDays) {
    // TODO prefilter only relevant events
    // TODO remove used events from main array
    // const formattedDayString: string = formatTimestampToDate(day);
    //
    // const dataForDay: any = events ? events[formattedDayString] : [];
    //
    // const headerEvents: any = renderEvents(calendarBodyWidth, dataForDay);
    //
    // compare each event and find those which can be placed next to each
    // other and are not overlapping
    // form them to row
    var tableSpace = (width + $88a08af890f49243$export$447c5938f45c45a5) / 100 * $88a08af890f49243$export$b4e2ba6756dec2c;
    var result = [];
    var usedEvents = [];
    // filter only header events
    var headerEventsFiltered = [];
    Object.entries(events).map(function(param) {
        var _param = $cw6c3$swchelpers.slicedToArray(param, 2), key = _param[0], items = _param[1];
        // @ts-ignore
        items.forEach(function(item) {
            // filter only relevant events
            if (item.allDay || $bf7b38bce41ca3dd$export$23783ea7bfe28abd(item)) {
                var isInRange = $585762b051d85803$export$3a6eb9efca632dee(item, calendarDays);
                if (isInRange) // correct position when external event ends in next day
                headerEventsFiltered.push(item);
            }
        });
    });
    // find all matching events to fit in one row
    headerEventsFiltered.forEach(function(event) {
        var eventPositionResult = [];
        // check if event was used already
        // skip iteration if event was already resolved
        if (usedEvents.includes(event.id)) return true;
        // set event to row
        var rowWithNotOverlappingEvents = [
            event
        ];
        usedEvents.push(event.id);
        // compare to rest of the events
        headerEventsFiltered.forEach(function(eventToCompare) {
            // check if event was used already
            // skip iteration if event was already resolved
            if (usedEvents.includes(eventToCompare.id)) return true;
            // don't compare to self // maybe remove?
            if (event.id === eventToCompare.id) return true;
            // check if events are not overlapping
            var isOverlapping = $585762b051d85803$export$c212dd23f1f0a1e3(event, eventToCompare);
            // found not overlapping matching event
            if (!isOverlapping) {
                var isMatchingAll = true;
                // compare match with other stored events for same row
                rowWithNotOverlappingEvents.forEach(function(itemFromRow) {
                    var isOverlappingAll = $585762b051d85803$export$c212dd23f1f0a1e3(itemFromRow, eventToCompare);
                    // prevent merging if only one conflict exists
                    if (isOverlappingAll) isMatchingAll = false;
                });
                if (isMatchingAll) {
                    // store compared event in used array and add to row
                    usedEvents.push(eventToCompare.id);
                    rowWithNotOverlappingEvents.push(eventToCompare);
                }
            }
        });
        // now we have row with only not overlapping events
        // sort events in row by start date
        var sortedResult = rowWithNotOverlappingEvents.sort(function(a, b) {
            return $cw6c3$luxon.DateTime.fromISO(a.startAt).toMillis() - $cw6c3$luxon.DateTime.fromISO(b.startAt).toMillis();
        });
        // place events accordingly in row next to each other
        sortedResult.forEach(function(item) {
            var offset = 0;
            var eventWidth = 0;
            var hasMatchingDay = false;
            var overlapCounter = 0;
            calendarDays.forEach(function(day) {
                if ($585762b051d85803$export$f917769c218c90fd(item, day)) {
                    // set base offset only for first item
                    eventWidth += width;
                    hasMatchingDay = true;
                    overlapCounter += 1; // remove
                }
                // increment offset only till we have matching day
                if (!hasMatchingDay) offset += width;
            });
            // create event position data
            var eventPositionData = {
                event: item,
                width: Math.round(eventWidth - tableSpace),
                offsetLeft: offset + $88a08af890f49243$export$447c5938f45c45a5,
                offsetTop: 0,
                height: 40,
                zIndex: 2
            };
            eventPositionResult.push(eventPositionData);
        });
        // save row to result
        result.push(eventPositionResult);
    });
    return result;
};





var $89f45f2bf33757e0$var$CalendarHeaderEvents = function(props) {
    var ref2 = $cw6c3$swchelpers.slicedToArray($cw6c3$react.useContext($65553fbba1d6d65b$export$841858b892ce1f4c), 2), store = ref2[0], dispatch = ref2[1];
    var selectedView = store.selectedView, events = store.events, width = store.width, calendarDays = store.calendarDays;
    var setContext = function(type, payload) {
        dispatch({
            type: type,
            payload: payload
        });
    };
    var ref1 = $cw6c3$swchelpers.slicedToArray($cw6c3$react.useState('Calend__CalendarHeaderEvents_animationExpand'), 2), animation = ref1[0], setAnimation = ref1[1];
    var renderEvents = function(baseWidth, rows) {
        var rowEvents = function(row) {
            return row.map(function(item) {
                return(/*#__PURE__*/ $cw6c3$reactjsxruntime.jsx($b852c5f3008abacb$export$2e2bcd8739ae039, {
                    eventWidth: item.width,
                    offsetLeft: item.offsetLeft,
                    event: item.event,
                    offsetTop: item.offsetTop,
                    type: $e4750b0ebeed8e48$export$76a2e4c433c23bb9.HEADER,
                    handleEventClick: props.handleEventClick,
                    zIndex: 2
                }, item.event.id));
            });
        };
        return rows.map(function(row) {
            var ref;
            return(/*#__PURE__*/ $cw6c3$reactjsxruntime.jsx("div", {
                className: 'Calend__CalendarHeaderEvents__eventRow',
                children: rowEvents(row)
            }, row === null || row === void 0 ? void 0 : (ref = row[0]) === null || ref === void 0 ? void 0 : ref.event.id));
        });
    };
    var column = width / $1500da26cef85c66$export$f16d393a3268e3f3(selectedView);
    var colWidthStyle = {
        width: column
    };
    var daysNumbers = calendarDays.map(function(day) {
        return(/*#__PURE__*/ $cw6c3$reactjsxruntime.jsx("div", {
            className: 'Calend__CalendarHeaderEvents__col-wrapper',
            style: colWidthStyle
        }, day.toString()));
    });
    var eventPositions = $c57d36d3233524f5$export$ebf0f5b49a0a9e59(events, width / calendarDays.length, calendarDays);
    var headerEvents = renderEvents(width, eventPositions);
    var headerStyle = {
        // paddingLeft: CALENDAR_OFFSET_LEFT,
        height: eventPositions.length * 22,
        transition: 'all 0.3s'
    };
    $cw6c3$react.useEffect(function() {
        setContext('headerEventRowsCount', headerEvents.length ? headerEvents.length : 0);
        setTimeout(function() {
            setContext('height', $2c4fe1f6b84a6784$export$c08559766941f856());
        }, 600);
    }, [
        headerEvents.length
    ]);
    $cw6c3$react.useEffect(function() {
        // set animation
        setAnimation('Calend__CalendarHeaderEvents_animationExpand');
        // clean animation
        setTimeout(function() {
            setAnimation('');
        }, 600);
    }, [
        eventPositions.length
    ]);
    return(/*#__PURE__*/ $cw6c3$reactjsxruntime.jsxs("div", {
        className: "Calend__CalendarHeaderEvents__container ".concat(animation),
        style: headerStyle,
        children: [
            /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx("div", {
                className: 'Calend__CalendarHeaderEvents__row',
                children: daysNumbers
            }),
            /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx("div", {
                className: "Calend__CalendarHeaderEvents__rows ".concat(animation),
                children: headerEvents
            })
        ]
    }));
};
var $89f45f2bf33757e0$export$2e2bcd8739ae039 = $89f45f2bf33757e0$var$CalendarHeaderEvents;




var $58f20473f1f0067a$var$CalendarHeader = function(props) {
    var handleEventClick = props.handleEventClick;
    var ref = $cw6c3$swchelpers.slicedToArray($cw6c3$react.useContext($65553fbba1d6d65b$export$841858b892ce1f4c), 1), store = ref[0];
    var isDark = store.isDark, width = store.width, selectedView = store.selectedView;
    var isDayView = selectedView === $e4750b0ebeed8e48$export$ec9758e21af63072.DAY;
    var isMonthView = selectedView === $e4750b0ebeed8e48$export$ec9758e21af63072.MONTH;
    return(/*#__PURE__*/ $cw6c3$reactjsxruntime.jsxs("div", {
        className: "Calend__CalendarHeader".concat(!isMonthView ? '-tall' : '').concat(isDayView ? '-day' : '').concat(isMonthView ? '-small' : '').concat(isDark ? '-dark' : ''),
        children: [
            /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx($2d4e959c42b07254$export$2e2bcd8739ae039, {
                width: width,
                isMonthView: isMonthView
            }),
            !isMonthView ? /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx($89f45f2bf33757e0$export$2e2bcd8739ae039, {
                handleEventClick: handleEventClick
            }) : null
        ]
    }));
};
var $58f20473f1f0067a$export$2e2bcd8739ae039 = $58f20473f1f0067a$var$CalendarHeader;




var $fdc093f51db59598$var$CalendarTableLayoutLayer = function(props) {
    var ref = $cw6c3$swchelpers.slicedToArray($cw6c3$react.useState(false), 2), isMounted = ref[0], setIsMounted = ref[1];
    $cw6c3$react.useEffect(function() {
        var rootEl = document.querySelector('.Calend__Calendar__table');
        if (rootEl) setIsMounted(true);
    }, [
        document.querySelector('.Calend__Calendar__table')
    ]);
    return isMounted ? props.children : null;
};
var $fdc093f51db59598$export$2e2bcd8739ae039 = $fdc093f51db59598$var$CalendarTableLayoutLayer;









var $629f3f2cedb859fe$export$61a922cf92af4c55 = function(index) {
    if (index < 7) {
        if (index === 6) return 'Calend__MonthOneDay__border-bottom';
        else return 'Calend__MonthOneDay__border-bottom-right';
    } else if (index < 35) {
        if (index === 13 || index === 20 || index === 27 || index === 34) return 'Calend__MonthOneDay__border-bottom';
        else return 'Calend__MonthOneDay__border-bottom-right';
    } else {
        if (index === 41) return 'Calend__MonthOneDay__border';
        else return 'Calend__MonthOneDay__border-right';
    }
};









var $ef45241bb9ecd0fe$var$DAY_TABLE_WIDTH = '90%';
var $ef45241bb9ecd0fe$var$MonthOneDay = function(props) {
    var index1 = props.index, data = props.data, day1 = props.day, handleEventClick = props.handleEventClick, showMoreMonth = props.showMoreMonth;
    var ref = $cw6c3$swchelpers.slicedToArray($cw6c3$react.useContext($65553fbba1d6d65b$export$841858b892ce1f4c), 1), store = ref[0];
    var isDark = store.isDark, selectedDate = store.selectedDate, height = store.height;
    var renderEvents = function(dataset) {
        var tableWidth = $ef45241bb9ecd0fe$var$DAY_TABLE_WIDTH;
        var tableHeight = height / 6 - $88a08af890f49243$export$27633cf363057263; // height of one day
        var maxEvents = Number((tableHeight / $88a08af890f49243$export$4b16cd32b50218c6).toFixed(0)) - 1;
        var eventsCount = [];
        var handleShowMore = function() {
            if (showMoreMonth) showMoreMonth(dataset);
        };
        if (dataset) return dataset.map(function(event, index) {
            eventsCount.push('one');
            if (eventsCount.length < maxEvents) return(/*#__PURE__*/ $cw6c3$reactjsxruntime.jsx($b852c5f3008abacb$export$2e2bcd8739ae039, {
                eventWidth: tableWidth,
                event: event,
                type: $e4750b0ebeed8e48$export$76a2e4c433c23bb9.MONTH,
                handleEventClick: handleEventClick,
                zIndex: 2
            }, event.id));
            else if (eventsCount.length > maxEvents && index + 1 === dataset.length) return(/*#__PURE__*/ $cw6c3$reactjsxruntime.jsx($f7dc25aaa4235907$export$2e2bcd8739ae039, {
                isDark: isDark,
                className: 'Calend__Monthview_Event',
                style: {
                    width: '100%',
                    display: 'flex',
                    justifyContent: 'center',
                    alignItems: 'center'
                },
                onClick: handleShowMore,
                children: /*#__PURE__*/ $cw6c3$reactjsxruntime.jsxs("p", {
                    className: 'Calend__text',
                    style: {
                        fontSize: 11
                    },
                    children: [
                        eventsCount.length + 1 - maxEvents,
                        " more"
                    ]
                })
            }, day1.toString()));
        });
    };
    var renderDate = function(date) {
        var day = date.day;
        if ($d49542164c9bae14$export$2e2bcd8739ae039.isToday(date)) return(/*#__PURE__*/ $cw6c3$reactjsxruntime.jsx("div", {
            className: $bf7b38bce41ca3dd$export$b7a9dbebc395fc65('Calend__MonthOneDay__date-container Calend__MonthOneDay__circle-color', isDark),
            children: /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx("p", {
                className: $bf7b38bce41ca3dd$export$b7a9dbebc395fc65('Calend__text Calend__MonthOneDay__date-today', isDark),
                children: day
            })
        }));
        else if (date.hasSame(selectedDate, 'month')) return(/*#__PURE__*/ $cw6c3$reactjsxruntime.jsx("div", {
            className: 'Calend__MonthOneDay__date-container',
            children: /*#__PURE__*/ $cw6c3$reactjsxruntime.jsxs("p", {
                className: $bf7b38bce41ca3dd$export$b7a9dbebc395fc65('Calend__text Calend__MonthOneDay__date', isDark),
                children: [
                    ' ',
                    day
                ]
            })
        }));
        else return(/*#__PURE__*/ $cw6c3$reactjsxruntime.jsx("div", {
            className: 'Calend__MonthOneDay__date-container',
            children: /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx("p", {
                className: $bf7b38bce41ca3dd$export$b7a9dbebc395fc65('Calend__text Calend__MonthOneDay__date-past', isDark),
                children: day
            })
        }));
    };
    var dataForDay = data;
    var events = dataForDay ? renderEvents(dataForDay) : null;
    var borderClassName = $629f3f2cedb859fe$export$61a922cf92af4c55(index1);
    return(/*#__PURE__*/ $cw6c3$reactjsxruntime.jsxs("div", {
        className: borderClassName,
        children: [
            /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx("div", {
                className: 'Calend__MonthOneDay__header-container',
                children: renderDate(day1)
            }),
            /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx("div", {
                className: 'Calend__MonthOneDay__events-container',
                children: events
            })
        ]
    }));
};
var $ef45241bb9ecd0fe$export$2e2bcd8739ae039 = $ef45241bb9ecd0fe$var$MonthOneDay;




var $4e630ae36e00686b$var$renderOneDay = function(data, prefix, tableHeight, events, handleEventClick, showMoreMonth) {
    return data.map(function(day, index) {
        var formattedDayString = $bf7b38bce41ca3dd$export$f5a7c490b6f9fbc4(day);
        return(/*#__PURE__*/ $cw6c3$reactjsxruntime.jsx($ef45241bb9ecd0fe$export$2e2bcd8739ae039, {
            index: index,
            day: day,
            data: events ? events[formattedDayString] : [],
            handleEventClick: handleEventClick,
            showMoreMonth: showMoreMonth
        }, "".concat(prefix, "-").concat(formattedDayString)));
    });
};
var $4e630ae36e00686b$var$MonthView = function(props) {
    var ref = $cw6c3$swchelpers.slicedToArray($cw6c3$react.useContext($65553fbba1d6d65b$export$841858b892ce1f4c), 1), store = ref[0];
    var height = store.height, width = store.width, calendarDays = store.calendarDays, events = store.events;
    var handleEventClick = props.handleEventClick, showMoreMonth = props.showMoreMonth;
    // Calculate height for days table
    var daysWrapper = {
        width: width,
        height: height
    };
    // const onPageChange = async (isGoingForward?: boolean) => {
    //   await getNewCalendarDays(calendarDays, CALENDAR_VIEW.MONTH, isGoingForward);
    // };
    var days = $4e630ae36e00686b$var$renderOneDay(calendarDays, 'month1', height, events, handleEventClick, showMoreMonth);
    return(// <Carousel onPageChange={onPageChange}>
    /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx("div", {
        className: 'Calend__MonthView__container',
        style: daysWrapper,
        children: days
    }));
};
var $4e630ae36e00686b$export$2e2bcd8739ae039 = $4e630ae36e00686b$var$MonthView;











/**
 * Calendar title in header in month date format
 * @param props
 * @constructor
 */ var $e8a58db0b7f8e0e1$var$HeaderCalendarTitle = function(props) {
    var title = props.title;
    var ref = $cw6c3$swchelpers.slicedToArray($cw6c3$react.useContext($65553fbba1d6d65b$export$841858b892ce1f4c), 1), store = ref[0];
    var isDark = store.isDark, isMobile = store.isMobile;
    return(/*#__PURE__*/ $cw6c3$reactjsxruntime.jsx("div", {
        className: $bf7b38bce41ca3dd$export$cf733e3bd5432c08("Calend__HeaderCalendarTitle__container", isMobile),
        children: /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx("p", {
            className: $bf7b38bce41ca3dd$export$cf733e3bd5432c08('Calend__text Calend__HeaderCalendarTitle', isMobile, isDark),
            children: title
        })
    }));
};
var $e8a58db0b7f8e0e1$export$2e2bcd8739ae039 = $e8a58db0b7f8e0e1$var$HeaderCalendarTitle;










var $6188babcb8da6286$var$HeaderCalendarButton = function(props) {
    var buttonData = props.buttonData, setViewChanged = props.setViewChanged, handleClose = props.handleClose, isForcedMobile = props.isForcedMobile;
    var ref = $cw6c3$swchelpers.slicedToArray($cw6c3$react.useContext($65553fbba1d6d65b$export$841858b892ce1f4c), 1), store = ref[0];
    var isDark = store.isDark, selectedView = store.selectedView, isMobile = store.isMobile;
    var isSelected = buttonData.value === selectedView;
    var buttonClassName = "Calend__header_calendar_button".concat(isSelected ? '-selected' : '');
    var textClassName = "Calend__text Calend__header_calendar_button-text".concat(isSelected ? '-selected' : '');
    var navigateFunction = function() {
        if (handleClose) handleClose();
        setViewChanged(buttonData.value);
    };
    return(/*#__PURE__*/ $cw6c3$reactjsxruntime.jsx($f7dc25aaa4235907$export$2e2bcd8739ae039, {
        className: $bf7b38bce41ca3dd$export$cf733e3bd5432c08(buttonClassName, isMobile || isForcedMobile),
        isDark: isDark,
        onClick: navigateFunction,
        children: /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx("p", {
            className: $bf7b38bce41ca3dd$export$cf733e3bd5432c08(textClassName, isMobile, isDark),
            children: buttonData.label
        })
    }));
};
var $6188babcb8da6286$export$72c130881ba16236 = function(disabledViews) {
    if (!disabledViews || disabledViews && (disabledViews === null || disabledViews === void 0 ? void 0 : disabledViews.length) + 1 !== Object.values($e4750b0ebeed8e48$export$ec9758e21af63072).length) return false;
    return true;
};
/**
 * Buttons for switching calendar view in desktop layout
 * @constructor
 */ var $6188babcb8da6286$var$HeaderCalendarButtons = function(props) {
    var disabledViews = props.disabledViews, setViewChanged = props.setViewChanged, handleClose = props.handleClose, isForcedMobile = props.isForcedMobile;
    var ref = $cw6c3$swchelpers.slicedToArray($cw6c3$react.useContext($65553fbba1d6d65b$export$841858b892ce1f4c), 1), store = ref[0];
    var isDark = store.isDark, isMobile = store.isMobile;
    return $6188babcb8da6286$export$72c130881ba16236(disabledViews) ? null : /*#__PURE__*/ $cw6c3$reactjsxruntime.jsxs("div", {
        className: $bf7b38bce41ca3dd$export$cf733e3bd5432c08('Calend__header_calendar_buttons__container', !!(isMobile || isForcedMobile), isDark),
        children: [
            !(disabledViews === null || disabledViews === void 0 ? void 0 : disabledViews.includes($e4750b0ebeed8e48$export$ec9758e21af63072.AGENDA)) ? /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx($6188babcb8da6286$var$HeaderCalendarButton, {
                buttonData: {
                    label: 'Agenda',
                    value: $e4750b0ebeed8e48$export$ec9758e21af63072.AGENDA
                },
                setViewChanged: setViewChanged,
                handleClose: handleClose,
                isForcedMobile: isForcedMobile
            }) : null,
            !(disabledViews === null || disabledViews === void 0 ? void 0 : disabledViews.includes($e4750b0ebeed8e48$export$ec9758e21af63072.DAY)) ? /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx($6188babcb8da6286$var$HeaderCalendarButton, {
                buttonData: {
                    label: 'Day',
                    value: $e4750b0ebeed8e48$export$ec9758e21af63072.DAY
                },
                setViewChanged: setViewChanged,
                handleClose: handleClose,
                isForcedMobile: isForcedMobile
            }) : null,
            !(disabledViews === null || disabledViews === void 0 ? void 0 : disabledViews.includes($e4750b0ebeed8e48$export$ec9758e21af63072.THREE_DAYS)) ? /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx($6188babcb8da6286$var$HeaderCalendarButton, {
                buttonData: {
                    label: '3 Days',
                    value: $e4750b0ebeed8e48$export$ec9758e21af63072.THREE_DAYS
                },
                setViewChanged: setViewChanged,
                handleClose: handleClose,
                isForcedMobile: isForcedMobile
            }) : null,
            !(disabledViews === null || disabledViews === void 0 ? void 0 : disabledViews.includes($e4750b0ebeed8e48$export$ec9758e21af63072.WEEK)) ? /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx($6188babcb8da6286$var$HeaderCalendarButton, {
                buttonData: {
                    label: 'Week',
                    value: $e4750b0ebeed8e48$export$ec9758e21af63072.WEEK
                },
                setViewChanged: setViewChanged,
                handleClose: handleClose,
                isForcedMobile: isForcedMobile
            }) : null,
            !(disabledViews === null || disabledViews === void 0 ? void 0 : disabledViews.includes($e4750b0ebeed8e48$export$ec9758e21af63072.MONTH)) ? /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx($6188babcb8da6286$var$HeaderCalendarButton, {
                buttonData: {
                    label: 'Month',
                    value: $e4750b0ebeed8e48$export$ec9758e21af63072.MONTH
                },
                setViewChanged: setViewChanged,
                handleClose: handleClose,
                isForcedMobile: isForcedMobile
            }) : null
        ]
    });
};
var $6188babcb8da6286$export$2e2bcd8739ae039 = $6188babcb8da6286$var$HeaderCalendarButtons;







var $224cea852abf103b$var$ButtonIcon = function(props) {
    var ref = $cw6c3$swchelpers.slicedToArray($cw6c3$react.useState(false), 2), isPressed = ref[0], setIsPressed = ref[1];
    var children = props.children, onClick = props.onClick, size = props.size, disabled = props.disabled, isDark = props.isDark, iconSize = props.iconSize, noActive = props.noActive, backdropClassName = props.backdropClassName, style = props.style;
    var handleTouchStart = function() {
        return setIsPressed(true);
    };
    var handleTouchOff = function(e) {
        return setIsPressed(false);
    };
    var containerClassName = !size ? 'Calend__ButtonIcon__container' : "Calend__ButtonIcon__container-".concat(size);
    var backdropClassNameString = backdropClassName ? backdropClassName : 'Calend__ButtonIcon__backdrop';
    var buttonClassName = noActive ? "".concat(disabled ? 'Calend__ButtonIcon__disabled ' : '', "Calend__ButtonIcon-inactive") : "".concat(disabled ? 'Calend__ButtonIcon__disabled ' : '', "Calend__ButtonIcon");
    var IconElement = /*#__PURE__*/ ($parcel$interopDefault($cw6c3$react)).cloneElement(children, {
        className: "Calend__ButtonIcon__svg".concat(iconSize ? "-".concat(iconSize) : '-normal')
    });
    return(/*#__PURE__*/ $cw6c3$reactjsxruntime.jsx("div", {
        className: containerClassName,
        style: style,
        children: /*#__PURE__*/ $cw6c3$reactjsxruntime.jsxs("button", {
            className: $bf7b38bce41ca3dd$export$b7a9dbebc395fc65(buttonClassName, isDark),
            onClick: onClick,
            disabled: disabled,
            onTouchStart: handleTouchStart,
            onTouchEnd: handleTouchOff,
            children: [
                IconElement,
                isPressed ? /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx("div", {
                    className: backdropClassNameString
                }) : null
            ]
        })
    }));
};
var $224cea852abf103b$export$2e2bcd8739ae039 = $224cea852abf103b$var$ButtonIcon;




var $dbb42d455cc6ab5e$var$CalendarIcon = function(props) {
    /*#__PURE__*/ return $cw6c3$reactjsxruntime.jsx("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 24 24",
        className: props.className,
        fill: props.fill,
        children: /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx("g", {
            "data-name": "Layer 2",
            children: /*#__PURE__*/ $cw6c3$reactjsxruntime.jsxs("g", {
                "data-name": "calendar",
                children: [
                    /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx("rect", {
                        width: "24",
                        height: "24",
                        opacity: "0"
                    }),
                    /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx("path", {
                        d: "M18 4h-1V3a1 1 0 0 0-2 0v1H9V3a1 1 0 0 0-2 0v1H6a3 3 0 0 0-3 3v12a3 3 0 0 0 3 3h12a3 3 0 0 0 3-3V7a3 3 0 0 0-3-3zM6 6h1v1a1 1 0 0 0 2 0V6h6v1a1 1 0 0 0 2 0V6h1a1 1 0 0 1 1 1v4H5V7a1 1 0 0 1 1-1zm12 14H6a1 1 0 0 1-1-1v-6h14v6a1 1 0 0 1-1 1z"
                    }),
                    /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx("circle", {
                        cx: "8",
                        cy: "16",
                        r: "1"
                    }),
                    /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx("path", {
                        d: "M16 15h-4a1 1 0 0 0 0 2h4a1 1 0 0 0 0-2z"
                    })
                ]
            })
        })
    });
};
var $dbb42d455cc6ab5e$export$2e2bcd8739ae039 = $dbb42d455cc6ab5e$var$CalendarIcon;




var $6731f9a94a3181eb$var$ChevronRight = function(props) {
    /*#__PURE__*/ return $cw6c3$reactjsxruntime.jsx("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 24 24",
        className: props.className,
        children: /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx("g", {
            "data-name": "Layer 2",
            children: /*#__PURE__*/ $cw6c3$reactjsxruntime.jsxs("g", {
                "data-name": "chevron-right",
                children: [
                    /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx("rect", {
                        width: "24",
                        height: "24",
                        transform: "rotate(-90 12 12)",
                        opacity: "0"
                    }),
                    /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx("path", {
                        d: "M10.5 17a1 1 0 0 1-.71-.29 1 1 0 0 1 0-1.42L13.1 12 9.92 8.69a1 1 0 0 1 0-1.41 1 1 0 0 1 1.42 0l3.86 4a1 1 0 0 1 0 1.4l-4 4a1 1 0 0 1-.7.32z"
                    })
                ]
            })
        })
    });
};
var $6731f9a94a3181eb$export$2e2bcd8739ae039 = $6731f9a94a3181eb$var$ChevronRight;




var $2599bf883e3836e7$var$ChevronDown = function(props) {
    /*#__PURE__*/ return $cw6c3$reactjsxruntime.jsx("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 24 24",
        className: props.className,
        children: /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx("g", {
            "data-name": "Layer 2",
            children: /*#__PURE__*/ $cw6c3$reactjsxruntime.jsxs("g", {
                "data-name": "chevron-down",
                children: [
                    /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx("rect", {
                        width: "24",
                        height: "24",
                        opacity: "0"
                    }),
                    /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx("path", {
                        d: "M12 15.5a1 1 0 0 1-.71-.29l-4-4a1 1 0 1 1 1.42-1.42L12 13.1l3.3-3.18a1 1 0 1 1 1.38 1.44l-4 3.86a1 1 0 0 1-.68.28z"
                    })
                ]
            })
        })
    });
};
var $2599bf883e3836e7$export$2e2bcd8739ae039 = $2599bf883e3836e7$var$ChevronDown;




var $9121bfdb0fa011e9$var$ChevronLeft = function(props) {
    /*#__PURE__*/ return $cw6c3$reactjsxruntime.jsx("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 24 24",
        className: props.className,
        children: /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx("g", {
            "data-name": "Layer 2",
            children: /*#__PURE__*/ $cw6c3$reactjsxruntime.jsxs("g", {
                "data-name": "chevron-left",
                children: [
                    /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx("rect", {
                        width: "24",
                        height: "24",
                        transform: "rotate(90 12 12)",
                        opacity: "0"
                    }),
                    /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx("path", {
                        d: "M13.36 17a1 1 0 0 1-.72-.31l-3.86-4a1 1 0 0 1 0-1.4l4-4a1 1 0 1 1 1.42 1.42L10.9 12l3.18 3.3a1 1 0 0 1 0 1.41 1 1 0 0 1-.72.29z"
                    })
                ]
            })
        })
    });
};
var $9121bfdb0fa011e9$export$2e2bcd8739ae039 = $9121bfdb0fa011e9$var$ChevronLeft;




var $e5981d21af543faf$var$MenuIcon = function(props) {
    /*#__PURE__*/ return $cw6c3$reactjsxruntime.jsx("svg", {
        className: props.className,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 24 24",
        children: /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx("g", {
            "data-name": "Layer 2",
            children: /*#__PURE__*/ $cw6c3$reactjsxruntime.jsxs("g", {
                "data-name": "more-vertical",
                children: [
                    /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx("rect", {
                        width: "24",
                        height: "24",
                        transform: "rotate(-90 12 12)",
                        opacity: "0"
                    }),
                    /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx("circle", {
                        cx: "12",
                        cy: "12",
                        r: "2"
                    }),
                    /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx("circle", {
                        cx: "12",
                        cy: "5",
                        r: "2"
                    }),
                    /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx("circle", {
                        cx: "12",
                        cy: "19",
                        r: "2"
                    })
                ]
            })
        })
    });
};
var $e5981d21af543faf$export$2e2bcd8739ae039 = $e5981d21af543faf$var$MenuIcon;


var $1c7a61445362ebf7$export$a9676248d3e54baf = {
    ChevronDown: $2599bf883e3836e7$export$2e2bcd8739ae039,
    ChevronLeft: $9121bfdb0fa011e9$export$2e2bcd8739ae039,
    ChevronRight: $6731f9a94a3181eb$export$2e2bcd8739ae039,
    Calendar: $dbb42d455cc6ab5e$export$2e2bcd8739ae039,
    More: $e5981d21af543faf$export$2e2bcd8739ae039
};







var $63103f0ef67d319d$export$3d0db7ed812b6b3f = $cw6c3$swchelpers.asyncToGenerator(($parcel$interopDefault($cw6c3$regeneratorruntime)).mark(function _callee(calendarDays, calendarView, direction, dispatchContext) {
    var setSelectedDate, newCalendarDays;
    return ($parcel$interopDefault($cw6c3$regeneratorruntime)).wrap(function _callee$(_ctx) {
        while(1)switch(_ctx.prev = _ctx.next){
            case 0:
                setSelectedDate = function(date) {
                    dispatchContext('selectedDate', date);
                };
                newCalendarDays = $1500da26cef85c66$export$20dc9138dd5b1a6a(direction, calendarDays, calendarView, setSelectedDate);
                dispatchContext('calendarDays', newCalendarDays);
                dispatchContext('selectedDate', newCalendarDays[$1500da26cef85c66$export$77c6031193b02723(calendarView)]);
            case 4:
            case "end":
                return _ctx.stop();
        }
    }, _callee);
}));
var $63103f0ef67d319d$export$28b655052872eb26 = $cw6c3$swchelpers.asyncToGenerator(($parcel$interopDefault($cw6c3$regeneratorruntime)).mark(function _callee(selectedView, setContext, param) {
    var dateNow;
    return ($parcel$interopDefault($cw6c3$regeneratorruntime)).wrap(function _callee$(_ctx) {
        while(1)switch(_ctx.prev = _ctx.next){
            case 0:
                dateNow = param === void 0 ? $cw6c3$luxon.DateTime.now() : param;
                _ctx.next = 3;
                return $63103f0ef67d319d$export$3d0db7ed812b6b3f([
                    dateNow
                ], selectedView, $e4750b0ebeed8e48$export$c2bed76d77ee7287.TODAY, setContext);
            case 3:
            case "end":
                return _ctx.stop();
        }
    }, _callee);
}));








var $d2b46716a1f3a2a1$var$DesktopLayout = function(props) {
    var children = props.children;
    var ref = $cw6c3$swchelpers.slicedToArray($cw6c3$react.useContext($65553fbba1d6d65b$export$841858b892ce1f4c), 1), store = ref[0];
    var isMobile = store.isMobile;
    return !isMobile ? /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx("div", {
        className: 'Calend__DesktopLayout',
        children: children
    }) : null;
};
var $d2b46716a1f3a2a1$export$2e2bcd8739ae039 = $d2b46716a1f3a2a1$var$DesktopLayout;






var $60dd5ae4676e5d2e$var$MobileLayout = function(props) {
    var children = props.children, style = props.style;
    var ref = $cw6c3$swchelpers.slicedToArray($cw6c3$react.useContext($65553fbba1d6d65b$export$841858b892ce1f4c), 1), store = ref[0];
    var isMobile = store.isMobile;
    return isMobile ? /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx("div", {
        className: 'Calend__MobileLayout',
        style: style,
        children: children
    }) : null;
};
var $60dd5ae4676e5d2e$export$2e2bcd8739ae039 = $60dd5ae4676e5d2e$var$MobileLayout;












var $95f304efc96ef4c9$var$CalendarViewDropdown = function(props) {
    var disableMobileDropdown = props.disableMobileDropdown, setViewChanged = props.setViewChanged, disabledViews = props.disabledViews;
    var ref = $cw6c3$swchelpers.slicedToArray($cw6c3$react.useState(false), 2), isOpen = ref[0], setOpen = ref[1];
    var ref1 = $cw6c3$swchelpers.slicedToArray($cw6c3$react.useContext($65553fbba1d6d65b$export$841858b892ce1f4c), 1), store = ref1[0];
    var isDark = store.isDark, isMobile = store.isMobile, selectedView = store.selectedView;
    var handleOpen = function() {
        return setOpen(true);
    };
    var handleClose = function() {
        return setOpen(false);
    };
    var preventDefault = function(e) {
        e.preventDefault();
        e.stopPropagation();
    };
    return isMobile && (disableMobileDropdown || $6188babcb8da6286$export$72c130881ba16236(disabledViews)) || $6188babcb8da6286$export$72c130881ba16236(disabledViews) ? null : /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx($cw6c3$reactjsxruntime.Fragment, {
        children: /*#__PURE__*/ $cw6c3$reactjsxruntime.jsxs("div", {
            className: 'Calend__CalendarViewDropdown__wrapper',
            children: [
                isMobile ? /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx($224cea852abf103b$export$2e2bcd8739ae039, {
                    isDark: isDark,
                    onClick: handleOpen,
                    children: /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx($1c7a61445362ebf7$export$a9676248d3e54baf.More, {
                        className: $bf7b38bce41ca3dd$export$b7a9dbebc395fc65('icon-svg', isDark)
                    })
                }, 'calendar') : /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx($f7dc25aaa4235907$export$2e2bcd8739ae039, {
                    isDark: isDark,
                    className: 'Calend__ButtonBase-border',
                    onClick: handleOpen,
                    text: $bf7b38bce41ca3dd$export$205aaf06acb1c5fc(selectedView)
                }),
                isOpen ? /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx("div", {
                    className: 'Calend__CalendarViewDropdown__backdrop',
                    onClick: handleClose
                }) : null,
                isOpen ? /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx("div", {
                    className: 'Calend__CalendarViewDropdown__container',
                    children: /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx("div", {
                        className: 'Calend__CalendarViewDropdown__container-content',
                        onClick: preventDefault,
                        children: /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx($6188babcb8da6286$export$2e2bcd8739ae039, {
                            disabledViews: disabledViews,
                            setViewChanged: setViewChanged,
                            handleClose: handleClose,
                            isForcedMobile: true
                        })
                    })
                }) : null
            ]
        })
    });
};
var $95f304efc96ef4c9$export$2e2bcd8739ae039 = $95f304efc96ef4c9$var$CalendarViewDropdown;


/**
 * Title with calendar navigation buttons for desktop layout
 * @param props
 * @constructor
 */ var $21db0de5ba63f204$var$CalendarDesktopNavigation = function(props) {
    var ref = $cw6c3$swchelpers.slicedToArray($cw6c3$react.useContext($65553fbba1d6d65b$export$841858b892ce1f4c), 2), store = ref[0], dispatch = ref[1];
    var setContext = function(type, payload) {
        dispatch({
            type: type,
            payload: payload
        });
    };
    var isDark = store.isDark, calendarDays = store.calendarDays, selectedView = store.selectedView, selectedDate = store.selectedDate, isMobile = store.isMobile, width = store.width;
    var ref1 = $cw6c3$swchelpers.slicedToArray($cw6c3$react.useState(true), 2), isFullNavigationHidden = ref1[0], setIsFullNavigationHidden = ref1[1];
    var title = $cw6c3$luxon.DateTime.fromISO(selectedDate).toFormat('MMMM yyyy');
    var navigateBackwards = $cw6c3$swchelpers.asyncToGenerator(($parcel$interopDefault($cw6c3$regeneratorruntime)).mark(function _callee() {
        return ($parcel$interopDefault($cw6c3$regeneratorruntime)).wrap(function _callee$(_ctx) {
            while(1)switch(_ctx.prev = _ctx.next){
                case 0:
                    _ctx.next = 2;
                    return $63103f0ef67d319d$export$3d0db7ed812b6b3f(calendarDays, selectedView, $e4750b0ebeed8e48$export$c2bed76d77ee7287.BACKWARDS, setContext);
                case 2:
                    return _ctx.abrupt("return", _ctx.sent);
                case 3:
                case "end":
                    return _ctx.stop();
            }
        }, _callee);
    }));
    var navigateForward = $cw6c3$swchelpers.asyncToGenerator(($parcel$interopDefault($cw6c3$regeneratorruntime)).mark(function _callee() {
        return ($parcel$interopDefault($cw6c3$regeneratorruntime)).wrap(function _callee$(_ctx) {
            while(1)switch(_ctx.prev = _ctx.next){
                case 0:
                    _ctx.next = 2;
                    return $63103f0ef67d319d$export$3d0db7ed812b6b3f(calendarDays, selectedView, $e4750b0ebeed8e48$export$c2bed76d77ee7287.FORWARD, setContext);
                case 2:
                    return _ctx.abrupt("return", _ctx.sent);
                case 3:
                case "end":
                    return _ctx.stop();
            }
        }, _callee);
    }));
    var navigateToTodayDate = $cw6c3$swchelpers.asyncToGenerator(($parcel$interopDefault($cw6c3$regeneratorruntime)).mark(function _callee() {
        return ($parcel$interopDefault($cw6c3$regeneratorruntime)).wrap(function _callee$(_ctx) {
            while(1)switch(_ctx.prev = _ctx.next){
                case 0:
                    _ctx.next = 2;
                    return $63103f0ef67d319d$export$28b655052872eb26(selectedView, setContext, $cw6c3$luxon.DateTime.now());
                case 2:
                case "end":
                    return _ctx.stop();
            }
        }, _callee);
    }));
    // handle showing  full desktop navigation panel or dropdown for
    // different screen size
    $cw6c3$react.useEffect(function() {
        var element = document.querySelector('.Calend__CalendarDesktopNavigation__container');
        if (element) {
            if (element) {
                if (element.getBoundingClientRect().width <= 820) setIsFullNavigationHidden(true);
                else setIsFullNavigationHidden(false);
            }
        }
    }, [
        width
    ]);
    return(/*#__PURE__*/ $cw6c3$reactjsxruntime.jsxs("div", {
        className: $bf7b38bce41ca3dd$export$cf733e3bd5432c08('Calend__CalendarDesktopNavigation__container', isMobile, isDark),
        children: [
            /*#__PURE__*/ $cw6c3$reactjsxruntime.jsxs("div", {
                style: {
                    display: 'flex',
                    flexDirection: 'row',
                    width: isMobile ? '100%' : 'auto'
                },
                children: [
                    /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx($d2b46716a1f3a2a1$export$2e2bcd8739ae039, {
                        children: /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx("div", {
                            className: 'Calend__CalendarDesktopNavigation__buttons',
                            children: /*#__PURE__*/ $cw6c3$reactjsxruntime.jsxs($cw6c3$reactjsxruntime.Fragment, {
                                children: [
                                    /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx($f7dc25aaa4235907$export$2e2bcd8739ae039, {
                                        className: 'Calend__ButtonBase-border',
                                        isDark: isDark,
                                        onClick: navigateToTodayDate,
                                        children: "Today"
                                    }),
                                    /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx($224cea852abf103b$export$2e2bcd8739ae039, {
                                        isDark: isDark,
                                        onClick: navigateBackwards,
                                        children: /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx($1c7a61445362ebf7$export$a9676248d3e54baf.ChevronLeft, {
                                            className: $bf7b38bce41ca3dd$export$b7a9dbebc395fc65('Calend__icon-svg', isDark)
                                        })
                                    }, 'left'),
                                    /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx($224cea852abf103b$export$2e2bcd8739ae039, {
                                        isDark: isDark,
                                        onClick: navigateForward,
                                        children: /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx($1c7a61445362ebf7$export$a9676248d3e54baf.ChevronRight, {
                                            className: $bf7b38bce41ca3dd$export$b7a9dbebc395fc65('Calend__icon-svg', isDark)
                                        })
                                    }, 'right')
                                ]
                            })
                        })
                    }),
                    /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx($e8a58db0b7f8e0e1$export$2e2bcd8739ae039, {
                        title: title
                    }),
                    /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx($60dd5ae4676e5d2e$export$2e2bcd8739ae039, {
                        style: {
                            width: '100%'
                        },
                        children: /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx("div", {
                            className: 'Calend__CalendarDesktopNavigation__buttons',
                            children: /*#__PURE__*/ $cw6c3$reactjsxruntime.jsxs($cw6c3$reactjsxruntime.Fragment, {
                                children: [
                                    /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx($224cea852abf103b$export$2e2bcd8739ae039, {
                                        isDark: isDark,
                                        onClick: navigateBackwards,
                                        children: /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx($1c7a61445362ebf7$export$a9676248d3e54baf.ChevronLeft, {
                                            className: $bf7b38bce41ca3dd$export$b7a9dbebc395fc65('Calend__icon-svg', isDark)
                                        })
                                    }, 'left'),
                                    /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx($224cea852abf103b$export$2e2bcd8739ae039, {
                                        isDark: isDark,
                                        onClick: navigateForward,
                                        children: /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx($1c7a61445362ebf7$export$a9676248d3e54baf.ChevronRight, {
                                            className: $bf7b38bce41ca3dd$export$b7a9dbebc395fc65('Calend__icon-svg', isDark)
                                        })
                                    }, 'right'),
                                    /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx($224cea852abf103b$export$2e2bcd8739ae039, {
                                        isDark: isDark,
                                        onClick: navigateToTodayDate,
                                        children: /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx($1c7a61445362ebf7$export$a9676248d3e54baf.Calendar, {
                                            className: $bf7b38bce41ca3dd$export$b7a9dbebc395fc65('Calend__icon-svg', isDark)
                                        })
                                    }, 'calendar'),
                                    /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx($95f304efc96ef4c9$export$2e2bcd8739ae039, {
                                        disabledViews: props.disabledViews,
                                        setViewChanged: props.setViewChanged,
                                        disableMobileDropdown: props.disableMobileDropdown
                                    })
                                ]
                            })
                        })
                    })
                ]
            }),
            /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx("div", {
                style: {
                    display: 'flex',
                    flexDirection: 'row',
                    marginRight: 12,
                    justifyContent: 'flex-end',
                    flex: 'auto'
                },
                children: /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx($d2b46716a1f3a2a1$export$2e2bcd8739ae039, {
                    children: isFullNavigationHidden ? /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx($95f304efc96ef4c9$export$2e2bcd8739ae039, {
                        disabledViews: props.disabledViews,
                        setViewChanged: props.setViewChanged,
                        disableMobileDropdown: props.disableMobileDropdown
                    }) : /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx($6188babcb8da6286$export$2e2bcd8739ae039, {
                        disabledViews: props.disabledViews,
                        setViewChanged: props.setViewChanged
                    })
                })
            })
        ]
    }));
};
var $21db0de5ba63f204$export$2e2bcd8739ae039 = $21db0de5ba63f204$var$CalendarDesktopNavigation;















var $86ca9f6752cc056e$var$renderEvents = function(events, handleEventClick) {
    if (!events || events.length === 0) return [];
    var sortedEvents = events === null || events === void 0 ? void 0 : events.sort(function(a, b) {
        return $cw6c3$luxon.DateTime.fromISO(a.startAt).toMillis() - $cw6c3$luxon.DateTime.fromISO(b.startAt).toMillis();
    });
    return sortedEvents.map(function(event) {
        return(/*#__PURE__*/ $cw6c3$reactjsxruntime.jsx($b852c5f3008abacb$export$2e2bcd8739ae039, {
            event: event,
            eventWidth: '100%',
            type: $e4750b0ebeed8e48$export$76a2e4c433c23bb9.AGENDA,
            handleEventClick: handleEventClick,
            zIndex: 1
        }, event.id));
    });
};
var $86ca9f6752cc056e$var$AgendaDayRow = function(props) {
    var day = props.day, events = props.events, handleEventClick = props.handleEventClick;
    var dayEvents = $86ca9f6752cc056e$var$renderEvents(events, handleEventClick);
    return(/*#__PURE__*/ $cw6c3$reactjsxruntime.jsxs("div", {
        className: 'Calend__AgendaDayRow__container',
        children: [
            /*#__PURE__*/ $cw6c3$reactjsxruntime.jsxs("div", {
                className: 'Calend__AgendaDayRow__container-day',
                children: [
                    /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx($0689dc746d054cae$export$2e2bcd8739ae039, {
                        day: day,
                        width: 50
                    }),
                    /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx($ecf585202d453fcb$export$2e2bcd8739ae039, {
                        width: 50,
                        day: day
                    })
                ]
            }),
            /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx("div", {
                className: 'Calend__AgendaDayRow__events',
                children: dayEvents
            })
        ]
    }));
};
var $86ca9f6752cc056e$export$2e2bcd8739ae039 = $86ca9f6752cc056e$var$AgendaDayRow;


var $ae9d5d34ac1cc52f$var$renderAgendaEvents = function(events, calendarDays, handleEventClick) {
    return calendarDays.map(function(day) {
        var hasEvents = !!events[day.toFormat($d49542164c9bae14$export$74b2237eca26435b)];
        if (hasEvents) return(/*#__PURE__*/ $cw6c3$reactjsxruntime.jsx($86ca9f6752cc056e$export$2e2bcd8739ae039, {
            day: day,
            events: events[day.toFormat($d49542164c9bae14$export$74b2237eca26435b)],
            handleEventClick: handleEventClick
        }, day.toString()));
    });
};
var $ae9d5d34ac1cc52f$var$AgendaView = function(props) {
    var handleEventClick = props.handleEventClick;
    var ref = $cw6c3$swchelpers.slicedToArray($cw6c3$react.useContext($65553fbba1d6d65b$export$841858b892ce1f4c), 1), store = ref[0];
    var events = store.events, calendarDays = store.calendarDays, height = store.height;
    var agendaEvents = $ae9d5d34ac1cc52f$var$renderAgendaEvents(events, calendarDays, handleEventClick);
    return(/*#__PURE__*/ $cw6c3$reactjsxruntime.jsx("div", {
        className: 'Calend__Agenda__container',
        style: {
            height: height
        },
        children: agendaEvents
    }));
};
var $ae9d5d34ac1cc52f$export$2e2bcd8739ae039 = $ae9d5d34ac1cc52f$var$AgendaView;


var $2c06f9532bb9aaf9$var$Calendar = function(props) {
    var onNewEventClick = props.onNewEventClick, onEventClick = props.onEventClick, config = props.config, onSelectView = props.onSelectView, disableMobileDropdown = props.disableMobileDropdown, timezone = props.timezone;
    var ref5 = $cw6c3$swchelpers.slicedToArray($cw6c3$react.useContext($65553fbba1d6d65b$export$841858b892ce1f4c), 2), store = ref5[0], dispatch = ref5[1];
    var setContext = function(type, payload) {
        dispatch({
            type: type,
            payload: payload
        });
    };
    var selectedView = store.selectedView, selectedDate = store.selectedDate, calendarDays = store.calendarDays;
    var width = $2c4fe1f6b84a6784$export$3aee49006f13db09();
    var height = $2c4fe1f6b84a6784$export$30dc190df7e420c4();
    var ref1 = $cw6c3$swchelpers.slicedToArray($cw6c3$react.useState(''), 2), prevView = ref1[0], setPrevView = ref1[1];
    var ref2 = $cw6c3$swchelpers.slicedToArray($cw6c3$react.useState(null), 2), viewChanged = ref2[0], setViewChanged = ref2[1];
    $cw6c3$react.useEffect(function() {
        var calendarDaysInitial = $1500da26cef85c66$export$e75d169fad6edf5f(props.selectedView || config.initialView, config.initialDate ? config.initialDate : $cw6c3$luxon.DateTime.now());
        setContext('calendarDays', calendarDaysInitial);
    }, []);
    // init context
    $cw6c3$react.useEffect(function() {
        setContext('isDark', config.isDark);
        setContext('events', config.events || []);
        setContext('initialView', props.selectedView || config.initialView || $e4750b0ebeed8e48$export$ec9758e21af63072.WEEK);
        setContext('selectedView', props.selectedView || config.initialView || $e4750b0ebeed8e48$export$ec9758e21af63072.WEEK);
        setContext('selectedDate', config.initialDate || $cw6c3$luxon.DateTime.now());
        setContext('hourHeight', config.hourHeight || $88a08af890f49243$export$1c9a1263a0d343f4);
        setContext('height', height);
        setContext('width', width - $bf7b38bce41ca3dd$export$76c69f043295405f(config.initialView || props.selectedView || selectedView));
        if (width < 750) setContext('isMobile', true);
        else setContext('isMobile', false);
        // handle timezone
        if (timezone) setContext('timezone', timezone);
        else // set system timezone
        setContext('timezone', Intl.DateTimeFormat().resolvedOptions().timeZone);
    }, []);
    $cw6c3$react.useEffect(function() {
        if (timezone) setContext('timezone', timezone);
        else setContext('timezone', Intl.DateTimeFormat().resolvedOptions().timeZone);
    }, [
        timezone
    ]);
    $cw6c3$react.useEffect(function() {
        setContext('width', $2c4fe1f6b84a6784$export$3c49c185de0c2bfc() - $bf7b38bce41ca3dd$export$76c69f043295405f(selectedView || props.selectedView || config.initialView));
        if (width < 750) setContext('isMobile', true);
        else setContext('isMobile', false);
    }, [
        width
    ]);
    $cw6c3$react.useEffect(function() {
        setContext('height', $2c4fe1f6b84a6784$export$c08559766941f856());
    }, [
        height
    ]);
    // needs to be separate due to inconsistency for month view
    $cw6c3$react.useEffect(function() {
        setContext('height', $2c4fe1f6b84a6784$export$c08559766941f856());
    }, [
        selectedView,
        props.selectedView
    ]);
    $cw6c3$react.useEffect(function() {
        // if (props.selectedView && props.selectedView === selectedView) {
        //   return;
        // }
        if (prevView === viewChanged) return;
        // prevent infinit loop
        if (!props.selectedView && onSelectView) {
            onSelectView(viewChanged);
            return;
        }
        if (!viewChanged) return;
        setContext('calendarDays', calendarDays[0]);
        setContext('selectedView', viewChanged);
        // prevent flickering due to
        // change in calendar days length
        // setContext('calendarDays', null);
        // use either passed value or internal state
        var setSelectedDate = function(date) {
            return setContext('selectedDate', date);
        };
        var calendarDaysNew = $1500da26cef85c66$export$e75d169fad6edf5f(viewChanged, $cw6c3$luxon.DateTime.now(), setSelectedDate);
        setContext('calendarDays', calendarDaysNew);
        setContext('isDark', config.isDark);
        setContext('events', config.events);
        setContext('selectedDate', config.initialDate || $cw6c3$luxon.DateTime.now());
        setContext('hourHeight', config.hourHeight);
        setContext('width', width - $bf7b38bce41ca3dd$export$76c69f043295405f(viewChanged));
        setPrevView(viewChanged);
        setViewChanged(null);
    // setContext('height', getHeight());
    }, [
        viewChanged
    ]);
    $cw6c3$react.useEffect(function() {
        if (prevView === props.selectedView) return;
        if (props.selectedView && props.selectedView !== selectedView) {
            setContext('calendarDays', calendarDays[0]);
            setContext('selectedView', props.selectedView);
            setPrevView(props.selectedView);
            var setSelectedDate = function(date) {
                return setContext('selectedDate', date);
            };
            var calendarDaysNew = $1500da26cef85c66$export$e75d169fad6edf5f(props.selectedView, $cw6c3$luxon.DateTime.now(), setSelectedDate);
            setContext('calendarDays', calendarDaysNew);
            // setContext('height', getHeight());
            // setContext('width', width - getTableOffset(selectedView));
            setContext('isDark', config.isDark);
            setContext('events', config.events);
            setContext('selectedDate', config.initialDate || $cw6c3$luxon.DateTime.now());
            setContext('hourHeight', config.hourHeight);
            // setContext('height', getHeight());
            setContext('width', width - $bf7b38bce41ca3dd$export$76c69f043295405f(props.selectedView));
        }
    }, [
        props.selectedView
    ]);
    var handleNewEventClick = function(data) {
        onNewEventClick(data);
    };
    var handleEventClick = function(data) {
        onEventClick(data);
    };
    $cw6c3$react.useEffect(function() {
        setContext('events', config.events);
    }, [
        JSON.stringify(config.events)
    ]);
    $cw6c3$react.useEffect(function() {
        var ref, ref3, ref4;
        if (props.onPageChange && calendarDays && calendarDays[0] && calendarDays.length > 0) props.onPageChange({
            rangeFrom: calendarDays === null || calendarDays === void 0 ? void 0 : (ref = calendarDays[0]) === null || ref === void 0 ? void 0 : ref.set({
                hour: 0,
                minute: 0
            }).minus({
                days: 1
            }).toUTC().toString(),
            rangeTo: (ref4 = calendarDays === null || calendarDays === void 0 ? void 0 : (ref3 = calendarDays[(calendarDays === null || calendarDays === void 0 ? void 0 : calendarDays.length) - 1]) === null || ref3 === void 0 ? void 0 : ref3.set({
                hour: 23,
                minute: 59,
                second: 59
            }).plus({
                days: 2
            })) === null || ref4 === void 0 ? void 0 : ref4.toUTC().toString()
        });
    }, [
        selectedView,
        calendarDays === null || calendarDays === void 0 ? void 0 : calendarDays[0],
        calendarDays === null || calendarDays === void 0 ? void 0 : calendarDays[(calendarDays === null || calendarDays === void 0 ? void 0 : calendarDays.length) - 1], 
    ]);
    return selectedView && (calendarDays === null || calendarDays === void 0 ? void 0 : calendarDays.length) > 0 && selectedDate ? /*#__PURE__*/ $cw6c3$reactjsxruntime.jsxs($cw6c3$reactjsxruntime.Fragment, {
        children: [
            /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx($21db0de5ba63f204$export$2e2bcd8739ae039, {
                disabledViews: props.disabledViews,
                setViewChanged: setViewChanged,
                disableMobileDropdown: disableMobileDropdown
            }),
            selectedView !== $e4750b0ebeed8e48$export$ec9758e21af63072.AGENDA ? /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx($58f20473f1f0067a$export$2e2bcd8739ae039, {
                handleEventClick: handleEventClick
            }) : null,
            /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx("div", {
                className: 'Calend__Calendar__table',
                children: /*#__PURE__*/ $cw6c3$reactjsxruntime.jsxs($fdc093f51db59598$export$2e2bcd8739ae039, {
                    children: [
                        selectedView === $e4750b0ebeed8e48$export$ec9758e21af63072.MONTH ? /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx($4e630ae36e00686b$export$2e2bcd8739ae039, {
                            handleEventClick: handleEventClick,
                            showMoreMonth: props.showMoreMonth
                        }) : null,
                        selectedView === $e4750b0ebeed8e48$export$ec9758e21af63072.DAY || selectedView === $e4750b0ebeed8e48$export$ec9758e21af63072.THREE_DAYS || selectedView === $e4750b0ebeed8e48$export$ec9758e21af63072.WEEK ? /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx($be26fc4a0d3aa4a6$export$2e2bcd8739ae039, {
                            handleNewEventClick: handleNewEventClick,
                            handleEventClick: handleEventClick
                        }) : null,
                        selectedView === $e4750b0ebeed8e48$export$ec9758e21af63072.AGENDA ? /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx($ae9d5d34ac1cc52f$export$2e2bcd8739ae039, {
                            handleEventClick: handleEventClick
                        }) : null
                    ]
                })
            })
        ]
    }) : null;
};
var $2c06f9532bb9aaf9$export$2e2bcd8739ae039 = $2c06f9532bb9aaf9$var$Calendar;




var $c954510ae95c0ee0$var$RootLayoutLayer = function(props) {
    var ref = $cw6c3$swchelpers.slicedToArray($cw6c3$react.useState(false), 2), isMounted = ref[0], setIsMounted = ref[1];
    $cw6c3$react.useEffect(function() {
        var rootEl = document.querySelector('.Calend__Calendar__root');
        if (rootEl) setIsMounted(true);
    }, [
        document.querySelector('.Calend__Calendar__root')
    ]);
    return isMounted ? props.children : null;
};
var $c954510ae95c0ee0$export$2e2bcd8739ae039 = $c954510ae95c0ee0$var$RootLayoutLayer;





var $078907888c55a58c$var$getCalendarView = function(value) {
    if (value.toString() === $e4750b0ebeed8e48$export$ec9758e21af63072.DAY.toString()) return $e4750b0ebeed8e48$export$ec9758e21af63072.DAY;
    if (value.toString() === $e4750b0ebeed8e48$export$ec9758e21af63072.THREE_DAYS.toString()) return $e4750b0ebeed8e48$export$ec9758e21af63072.THREE_DAYS;
    if (value.toString() === $e4750b0ebeed8e48$export$ec9758e21af63072.WEEK.toString()) return $e4750b0ebeed8e48$export$ec9758e21af63072.WEEK;
    if (value.toString() === $e4750b0ebeed8e48$export$ec9758e21af63072.MONTH.toString()) return $e4750b0ebeed8e48$export$ec9758e21af63072.MONTH;
    if (value.toString() === $e4750b0ebeed8e48$export$ec9758e21af63072.AGENDA.toString()) return $e4750b0ebeed8e48$export$ec9758e21af63072.AGENDA;
    return null;
};
var $078907888c55a58c$export$45855e0dd982478b = function(props) {
    // Validate views
    if (props.disabledViews) {
        // throw error if all views are disabled
        if (props.disabledViews.length === Object.values($e4750b0ebeed8e48$export$ec9758e21af63072).length) throw Error('[Calend]: At least one calendar view has to be enabled');
    }
    // validate initial view
    var initialView = $078907888c55a58c$var$getCalendarView(props.initialView.toString());
    if (!initialView) throw Error("[Calend]: Initial view \"".concat(props.initialView, "\" is not valid"));
};
var $078907888c55a58c$export$fbb8247b2e46a70a = function() {
    var el = document.querySelector('.Calend__Calendar__root');
    if (el) {
        if (window.getComputedStyle(el).display !== 'flex') throw Error("[Calend]: CSS file not imported. \n         Reason: You probably forgot to import css file in your app as \n         import 'calend/dist/styles/index.css';\n         \n         Valid usage: \n         import Calend from 'calend';\n         import 'calend/dist/styles/index.css';");
    }
};



var $3f7b2fe5d2c34f8f$export$b573856c46cc9357 = $e4750b0ebeed8e48$export$ec9758e21af63072;
var $3f7b2fe5d2c34f8f$var$Calend = function(props) {
    // basic validation
    $cw6c3$react.useEffect(function() {
        $078907888c55a58c$export$45855e0dd982478b(props);
        $078907888c55a58c$export$fbb8247b2e46a70a();
    }, []);
    return(/*#__PURE__*/ $cw6c3$reactjsxruntime.jsx("div", {
        className: 'Calend__Calendar__root Calend__main',
        children: /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx($65553fbba1d6d65b$export$2e2bcd8739ae039, {
            children: /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx($c954510ae95c0ee0$export$2e2bcd8739ae039, {
                children: /*#__PURE__*/ $cw6c3$reactjsxruntime.jsx($2c06f9532bb9aaf9$export$2e2bcd8739ae039, {
                    config: {
                        initialDate: props.initialDate ? $cw6c3$luxon.DateTime.fromISO(props.initialDate) : $cw6c3$luxon.DateTime.now(),
                        initialView: props.initialView,
                        hourHeight: props.hourHeight,
                        isDark: props.isDark,
                        events: props.events
                    },
                    onEventClick: props.onEventClick,
                    onNewEventClick: props.onNewEventClick,
                    disabledViews: props.disabledViews,
                    onSelectView: props.onSelectView,
                    selectedView: props.selectedView,
                    showMoreMonth: props.showMoreMonth,
                    onPageChange: props.onPageChange,
                    disableMobileDropdown: props.disableMobileDropdown,
                    timezone: props.timezone
                })
            })
        })
    }));
};
var $3f7b2fe5d2c34f8f$export$2e2bcd8739ae039 = $3f7b2fe5d2c34f8f$var$Calend;


//# sourceMappingURL=main.js.map
