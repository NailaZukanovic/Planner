enum CALENDAR_VIEW {
    AGENDA = "agenda",
    WEEK = "week",
    DAY = "day",
    THREE_DAYS = "threeDays",
    MONTH = "month"
}
interface CalendarEvent {
    id: any;
    startAt: string;
    endAt: string;
    timezoneStartAt: string;
    timezoneEndAt: string;
    summary: string;
    color: string;
    [key: string]: any;
}
interface NewEventClickData {
    event: any;
    day: Date;
    hour: number;
}
interface PageChangeData {
    rangeFrom: string;
    rangeTo: string;
}
type OnPageChangeFunc = (data: PageChangeData) => void;
type ShowMoreMonthFunc = (data: CalendarEvent[]) => void;
type OnSelectViewFunc = (view: CALENDAR_VIEW) => void;
type OnEventClickFunc = (data: CalendarEvent) => void;
type OnNewEventClickFunc = (data: NewEventClickData) => void;
export const CalendarView: typeof CALENDAR_VIEW;
export type OnEventClickData = CalendarEvent;
export type OnNewEventClickData = NewEventClickData;
export type OnPageChangeData = PageChangeData;
export type OnSelectViewData = CALENDAR_VIEW;
export type ShowMoreMonthData = CalendarEvent[];
export interface CalendProps {
    initialDate?: string;
    initialView: CALENDAR_VIEW;
    selectedView?: CALENDAR_VIEW;
    disabledViews?: CALENDAR_VIEW[];
    events: any;
    isDark?: boolean;
    hourHeight?: number;
    onNewEventClick: OnNewEventClickFunc;
    onEventClick: OnEventClickFunc;
    onSelectView?: OnSelectViewFunc;
    showMoreMonth?: ShowMoreMonthFunc;
    onPageChange?: OnPageChangeFunc;
    disableMobileDropdown?: boolean;
    timezone?: string;
}
declare const Calend: (props: CalendProps) => JSX.Element;
export default Calend;

//# sourceMappingURL=index.d.ts.map
